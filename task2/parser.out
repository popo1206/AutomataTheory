Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> stategroup
Rule 2     stategroup -> stategroup statement
Rule 3     stategroup -> statement
Rule 4     statement -> declaration SEMICOLON NL
Rule 5     statement -> assignment SEMICOLON NL
Rule 6     statement -> while NL
Rule 7     statement -> zero NL
Rule 8     statement -> function NL
Rule 9     statement -> operator SEMICOLON NL
Rule 10    statement -> RETURN expression SEMICOLON NL
Rule 11    statement -> empty NL
Rule 12    statement -> error
Rule 13    declaration -> type vars
Rule 14    declaration -> type error
Rule 15    vars -> NAME COMMA vars
Rule 16    vars -> assignment_var COMMA vars
Rule 17    vars -> NAME
Rule 18    vars -> assignment_var
Rule 19    assignment_var -> variable ASSIGNMENT expression
Rule 20    assignment -> assignment_var
Rule 21    assignment -> pointer ASSIGNMENT expression
Rule 22    assignment -> variable ASSIGNMENT error
Rule 23    pointer -> STAR NAME
Rule 24    pointer -> STAR OBRACKET expression CBRACKET
Rule 25    pointer -> AMPERSAND NAME
Rule 26    pointer -> AMPERSAND OBRACKET expression CBRACKET
Rule 27    variable -> NAME
Rule 28    variable -> variable index
Rule 29    index -> OSQBRACKET expression CSQBRACKET index
Rule 30    index -> OSQBRACKET expression CSQBRACKET
Rule 31    type -> VALUE
Rule 32    type -> CONST VALUE
Rule 33    type -> POINTER expr_type
Rule 34    type -> CONST POINTER expr_type
Rule 35    type -> POINTER CONST expr_type
Rule 36    type -> CONST POINTER CONST expr_type
Rule 37    type -> ARRAYOF expr_type
Rule 38    type -> CONST ARRAYOF expr_type
Rule 39    expr_type -> <empty>
Rule 40    expr_type -> VALUE
Rule 41    expr_type -> POINTER expr_type
Rule 42    expr_type -> ARRAYOF expr_type
Rule 43    expression -> variable
Rule 44    expression -> al_expression
Rule 45    expression -> function_call
Rule 46    expression -> SIZEOF OBRACKET variable CBRACKET
Rule 47    al_expression -> expression PLUS expression
Rule 48    al_expression -> expression MINUS expression
Rule 49    al_expression -> expression PERCENT expression
Rule 50    al_expression -> expression STAR expression
Rule 51    al_expression -> expression SLASH expression
Rule 52    al_expression -> STAR expression
Rule 53    al_expression -> AMPERSAND expression
Rule 54    al_expression -> expression NOTGREATER expression
Rule 55    al_expression -> expression NOTLESS expression
Rule 56    al_expression -> expression NOTEQ expression
Rule 57    al_expression -> NUMBER
Rule 58    al_expression -> OBRACKET al_expression CBRACKET
Rule 59    operator -> TOP SEMICOLON
Rule 60    operator -> BOTTOM SEMICOLON
Rule 61    operator -> LEFT SEMICOLON
Rule 62    operator -> RIGHT SEMICOLON
Rule 63    operator -> PORTAL SEMICOLON
Rule 64    operator -> TELEPORT SEMICOLON
Rule 65    operator -> BREAK SEMICOLON
Rule 66    while -> while FINISH OFBRACKET NL stategroup CFBRACKET
Rule 67    while -> WHILE OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
Rule 68    zero -> ZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
Rule 69    zero -> NOTZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
Rule 70    zero -> ZERO OBRACKET expression CBRACKET NL statement
Rule 71    zero -> NOTZERO OBRACKET expression CBRACKET NL statement
Rule 72    function -> type funcname OBRACKET parameters CBRACKET OFBRACKET NL stategroup CFBRACKET
Rule 73    function -> type funcname OBRACKET CBRACKET OFBRACKET NL stategroup CFBRACKET
Rule 74    funcname -> MAIN
Rule 75    funcname -> NAME
Rule 76    function_call -> NAME OBRACKET call_parameters CBRACKET
Rule 77    call_parameters -> call_parameters COMMA call_vars
Rule 78    call_parameters -> call_vars
Rule 79    call_vars -> vars
Rule 80    call_vars -> expression
Rule 81    function -> type error
Rule 82    parameters -> parameters COMMA parameter
Rule 83    parameters -> parameter
Rule 84    parameter -> type NAME
Rule 85    empty -> <empty>

Terminals, with rules where they appear

AMPERSAND            : 25 26 53
ARRAYOF              : 37 38 42
ASSIGNMENT           : 19 21 22
BOTTOM               : 60
BREAK                : 65
CBRACKET             : 24 26 46 58 67 68 69 70 71 72 73 76
CFBRACKET            : 66 67 68 69 72 73
COMMA                : 15 16 77 82
CONST                : 32 34 35 36 36 38
CSQBRACKET           : 29 30
FINISH               : 66
LEFT                 : 61
MAIN                 : 74
MINUS                : 48
NAME                 : 15 17 23 25 27 75 76 84
NL                   : 4 5 6 7 8 9 10 11 66 67 68 69 70 71 72 73
NOTEQ                : 56
NOTGREATER           : 54
NOTLESS              : 55
NOTZERO              : 69 71
NUMBER               : 57
OBRACKET             : 24 26 46 58 67 68 69 70 71 72 73 76
OFBRACKET            : 66 67 68 69 72 73
OSQBRACKET           : 29 30
PERCENT              : 49
PLUS                 : 47
POINTER              : 33 34 35 36 41
PORTAL               : 63
RETURN               : 10
RIGHT                : 62
SEMICOLON            : 4 5 9 10 59 60 61 62 63 64 65
SIZEOF               : 46
SLASH                : 51
STAR                 : 23 24 50 52
TELEPORT             : 64
TOP                  : 59
VALUE                : 31 32 40
WHILE                : 67
ZERO                 : 68 70
error                : 12 14 22 81

Nonterminals, with rules where they appear

al_expression        : 44 58
assignment           : 5
assignment_var       : 16 18 20
call_parameters      : 76 77
call_vars            : 77 78
declaration          : 4
empty                : 11
expr_type            : 33 34 35 36 37 38 41 42
expression           : 10 19 21 24 26 29 30 47 47 48 48 49 49 50 50 51 51 52 53 54 54 55 55 56 56 67 68 69 70 71 80
funcname             : 72 73
function             : 8
function_call        : 45
index                : 28 29
operator             : 9
parameter            : 82 83
parameters           : 72 82
pointer              : 21
program              : 0
stategroup           : 1 2 66 67 68 69 72 73
statement            : 2 3 70 71
type                 : 13 14 72 73 81 84
variable             : 19 22 28 43 46
vars                 : 13 15 16 79
while                : 6 66
zero                 : 7

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . stategroup
    (2) stategroup -> . stategroup statement
    (3) stategroup -> . statement
    (4) statement -> . declaration SEMICOLON NL
    (5) statement -> . assignment SEMICOLON NL
    (6) statement -> . while NL
    (7) statement -> . zero NL
    (8) statement -> . function NL
    (9) statement -> . operator SEMICOLON NL
    (10) statement -> . RETURN expression SEMICOLON NL
    (11) statement -> . empty NL
    (12) statement -> . error
    (13) declaration -> . type vars
    (14) declaration -> . type error
    (20) assignment -> . assignment_var
    (21) assignment -> . pointer ASSIGNMENT expression
    (22) assignment -> . variable ASSIGNMENT error
    (66) while -> . while FINISH OFBRACKET NL stategroup CFBRACKET
    (67) while -> . WHILE OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (68) zero -> . ZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (69) zero -> . NOTZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (70) zero -> . ZERO OBRACKET expression CBRACKET NL statement
    (71) zero -> . NOTZERO OBRACKET expression CBRACKET NL statement
    (72) function -> . type funcname OBRACKET parameters CBRACKET OFBRACKET NL stategroup CFBRACKET
    (73) function -> . type funcname OBRACKET CBRACKET OFBRACKET NL stategroup CFBRACKET
    (81) function -> . type error
    (59) operator -> . TOP SEMICOLON
    (60) operator -> . BOTTOM SEMICOLON
    (61) operator -> . LEFT SEMICOLON
    (62) operator -> . RIGHT SEMICOLON
    (63) operator -> . PORTAL SEMICOLON
    (64) operator -> . TELEPORT SEMICOLON
    (65) operator -> . BREAK SEMICOLON
    (85) empty -> .
    (31) type -> . VALUE
    (32) type -> . CONST VALUE
    (33) type -> . POINTER expr_type
    (34) type -> . CONST POINTER expr_type
    (35) type -> . POINTER CONST expr_type
    (36) type -> . CONST POINTER CONST expr_type
    (37) type -> . ARRAYOF expr_type
    (38) type -> . CONST ARRAYOF expr_type
    (19) assignment_var -> . variable ASSIGNMENT expression
    (23) pointer -> . STAR NAME
    (24) pointer -> . STAR OBRACKET expression CBRACKET
    (25) pointer -> . AMPERSAND NAME
    (26) pointer -> . AMPERSAND OBRACKET expression CBRACKET
    (27) variable -> . NAME
    (28) variable -> . variable index

    RETURN          shift and go to state 10
    error           shift and go to state 12
    WHILE           shift and go to state 17
    ZERO            shift and go to state 18
    NOTZERO         shift and go to state 19
    TOP             shift and go to state 20
    BOTTOM          shift and go to state 21
    LEFT            shift and go to state 22
    RIGHT           shift and go to state 23
    PORTAL          shift and go to state 24
    TELEPORT        shift and go to state 25
    BREAK           shift and go to state 26
    NL              reduce using rule 85 (empty -> .)
    VALUE           shift and go to state 27
    CONST           shift and go to state 28
    POINTER         shift and go to state 29
    ARRAYOF         shift and go to state 30
    STAR            shift and go to state 31
    AMPERSAND       shift and go to state 33
    NAME            shift and go to state 32

    program                        shift and go to state 1
    stategroup                     shift and go to state 2
    statement                      shift and go to state 3
    declaration                    shift and go to state 4
    assignment                     shift and go to state 5
    while                          shift and go to state 6
    zero                           shift and go to state 7
    function                       shift and go to state 8
    operator                       shift and go to state 9
    empty                          shift and go to state 11
    type                           shift and go to state 13
    assignment_var                 shift and go to state 14
    pointer                        shift and go to state 15
    variable                       shift and go to state 16

state 1

    (0) S' -> program .



state 2

    (1) program -> stategroup .
    (2) stategroup -> stategroup . statement
    (4) statement -> . declaration SEMICOLON NL
    (5) statement -> . assignment SEMICOLON NL
    (6) statement -> . while NL
    (7) statement -> . zero NL
    (8) statement -> . function NL
    (9) statement -> . operator SEMICOLON NL
    (10) statement -> . RETURN expression SEMICOLON NL
    (11) statement -> . empty NL
    (12) statement -> . error
    (13) declaration -> . type vars
    (14) declaration -> . type error
    (20) assignment -> . assignment_var
    (21) assignment -> . pointer ASSIGNMENT expression
    (22) assignment -> . variable ASSIGNMENT error
    (66) while -> . while FINISH OFBRACKET NL stategroup CFBRACKET
    (67) while -> . WHILE OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (68) zero -> . ZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (69) zero -> . NOTZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (70) zero -> . ZERO OBRACKET expression CBRACKET NL statement
    (71) zero -> . NOTZERO OBRACKET expression CBRACKET NL statement
    (72) function -> . type funcname OBRACKET parameters CBRACKET OFBRACKET NL stategroup CFBRACKET
    (73) function -> . type funcname OBRACKET CBRACKET OFBRACKET NL stategroup CFBRACKET
    (81) function -> . type error
    (59) operator -> . TOP SEMICOLON
    (60) operator -> . BOTTOM SEMICOLON
    (61) operator -> . LEFT SEMICOLON
    (62) operator -> . RIGHT SEMICOLON
    (63) operator -> . PORTAL SEMICOLON
    (64) operator -> . TELEPORT SEMICOLON
    (65) operator -> . BREAK SEMICOLON
    (85) empty -> .
    (31) type -> . VALUE
    (32) type -> . CONST VALUE
    (33) type -> . POINTER expr_type
    (34) type -> . CONST POINTER expr_type
    (35) type -> . POINTER CONST expr_type
    (36) type -> . CONST POINTER CONST expr_type
    (37) type -> . ARRAYOF expr_type
    (38) type -> . CONST ARRAYOF expr_type
    (19) assignment_var -> . variable ASSIGNMENT expression
    (23) pointer -> . STAR NAME
    (24) pointer -> . STAR OBRACKET expression CBRACKET
    (25) pointer -> . AMPERSAND NAME
    (26) pointer -> . AMPERSAND OBRACKET expression CBRACKET
    (27) variable -> . NAME
    (28) variable -> . variable index

    $end            reduce using rule 1 (program -> stategroup .)
    RETURN          shift and go to state 10
    error           shift and go to state 12
    WHILE           shift and go to state 17
    ZERO            shift and go to state 18
    NOTZERO         shift and go to state 19
    TOP             shift and go to state 20
    BOTTOM          shift and go to state 21
    LEFT            shift and go to state 22
    RIGHT           shift and go to state 23
    PORTAL          shift and go to state 24
    TELEPORT        shift and go to state 25
    BREAK           shift and go to state 26
    NL              reduce using rule 85 (empty -> .)
    VALUE           shift and go to state 27
    CONST           shift and go to state 28
    POINTER         shift and go to state 29
    ARRAYOF         shift and go to state 30
    STAR            shift and go to state 31
    AMPERSAND       shift and go to state 33
    NAME            shift and go to state 32

    statement                      shift and go to state 34
    declaration                    shift and go to state 4
    assignment                     shift and go to state 5
    while                          shift and go to state 6
    zero                           shift and go to state 7
    function                       shift and go to state 8
    operator                       shift and go to state 9
    empty                          shift and go to state 11
    type                           shift and go to state 13
    assignment_var                 shift and go to state 14
    pointer                        shift and go to state 15
    variable                       shift and go to state 16

state 3

    (3) stategroup -> statement .

    RETURN          reduce using rule 3 (stategroup -> statement .)
    error           reduce using rule 3 (stategroup -> statement .)
    WHILE           reduce using rule 3 (stategroup -> statement .)
    ZERO            reduce using rule 3 (stategroup -> statement .)
    NOTZERO         reduce using rule 3 (stategroup -> statement .)
    TOP             reduce using rule 3 (stategroup -> statement .)
    BOTTOM          reduce using rule 3 (stategroup -> statement .)
    LEFT            reduce using rule 3 (stategroup -> statement .)
    RIGHT           reduce using rule 3 (stategroup -> statement .)
    PORTAL          reduce using rule 3 (stategroup -> statement .)
    TELEPORT        reduce using rule 3 (stategroup -> statement .)
    BREAK           reduce using rule 3 (stategroup -> statement .)
    VALUE           reduce using rule 3 (stategroup -> statement .)
    CONST           reduce using rule 3 (stategroup -> statement .)
    POINTER         reduce using rule 3 (stategroup -> statement .)
    ARRAYOF         reduce using rule 3 (stategroup -> statement .)
    STAR            reduce using rule 3 (stategroup -> statement .)
    AMPERSAND       reduce using rule 3 (stategroup -> statement .)
    NAME            reduce using rule 3 (stategroup -> statement .)
    NL              reduce using rule 3 (stategroup -> statement .)
    $end            reduce using rule 3 (stategroup -> statement .)
    CFBRACKET       reduce using rule 3 (stategroup -> statement .)


state 4

    (4) statement -> declaration . SEMICOLON NL

    SEMICOLON       shift and go to state 35


state 5

    (5) statement -> assignment . SEMICOLON NL

    SEMICOLON       shift and go to state 36


state 6

    (6) statement -> while . NL
    (66) while -> while . FINISH OFBRACKET NL stategroup CFBRACKET

    NL              shift and go to state 37
    FINISH          shift and go to state 38


state 7

    (7) statement -> zero . NL

    NL              shift and go to state 39


state 8

    (8) statement -> function . NL

    NL              shift and go to state 40


state 9

    (9) statement -> operator . SEMICOLON NL

    SEMICOLON       shift and go to state 41


state 10

    (10) statement -> RETURN . expression SEMICOLON NL
    (43) expression -> . variable
    (44) expression -> . al_expression
    (45) expression -> . function_call
    (46) expression -> . SIZEOF OBRACKET variable CBRACKET
    (27) variable -> . NAME
    (28) variable -> . variable index
    (47) al_expression -> . expression PLUS expression
    (48) al_expression -> . expression MINUS expression
    (49) al_expression -> . expression PERCENT expression
    (50) al_expression -> . expression STAR expression
    (51) al_expression -> . expression SLASH expression
    (52) al_expression -> . STAR expression
    (53) al_expression -> . AMPERSAND expression
    (54) al_expression -> . expression NOTGREATER expression
    (55) al_expression -> . expression NOTLESS expression
    (56) al_expression -> . expression NOTEQ expression
    (57) al_expression -> . NUMBER
    (58) al_expression -> . OBRACKET al_expression CBRACKET
    (76) function_call -> . NAME OBRACKET call_parameters CBRACKET

    SIZEOF          shift and go to state 46
    NAME            shift and go to state 48
    STAR            shift and go to state 49
    AMPERSAND       shift and go to state 50
    NUMBER          shift and go to state 51
    OBRACKET        shift and go to state 47

    expression                     shift and go to state 42
    variable                       shift and go to state 43
    al_expression                  shift and go to state 44
    function_call                  shift and go to state 45

state 11

    (11) statement -> empty . NL

    NL              shift and go to state 52


state 12

    (12) statement -> error .

    RETURN          reduce using rule 12 (statement -> error .)
    error           reduce using rule 12 (statement -> error .)
    WHILE           reduce using rule 12 (statement -> error .)
    ZERO            reduce using rule 12 (statement -> error .)
    NOTZERO         reduce using rule 12 (statement -> error .)
    TOP             reduce using rule 12 (statement -> error .)
    BOTTOM          reduce using rule 12 (statement -> error .)
    LEFT            reduce using rule 12 (statement -> error .)
    RIGHT           reduce using rule 12 (statement -> error .)
    PORTAL          reduce using rule 12 (statement -> error .)
    TELEPORT        reduce using rule 12 (statement -> error .)
    BREAK           reduce using rule 12 (statement -> error .)
    VALUE           reduce using rule 12 (statement -> error .)
    CONST           reduce using rule 12 (statement -> error .)
    POINTER         reduce using rule 12 (statement -> error .)
    ARRAYOF         reduce using rule 12 (statement -> error .)
    STAR            reduce using rule 12 (statement -> error .)
    AMPERSAND       reduce using rule 12 (statement -> error .)
    NAME            reduce using rule 12 (statement -> error .)
    NL              reduce using rule 12 (statement -> error .)
    $end            reduce using rule 12 (statement -> error .)
    CFBRACKET       reduce using rule 12 (statement -> error .)


state 13

    (13) declaration -> type . vars
    (14) declaration -> type . error
    (72) function -> type . funcname OBRACKET parameters CBRACKET OFBRACKET NL stategroup CFBRACKET
    (73) function -> type . funcname OBRACKET CBRACKET OFBRACKET NL stategroup CFBRACKET
    (81) function -> type . error
    (15) vars -> . NAME COMMA vars
    (16) vars -> . assignment_var COMMA vars
    (17) vars -> . NAME
    (18) vars -> . assignment_var
    (74) funcname -> . MAIN
    (75) funcname -> . NAME
    (19) assignment_var -> . variable ASSIGNMENT expression
    (27) variable -> . NAME
    (28) variable -> . variable index

    error           shift and go to state 54
    NAME            shift and go to state 56
    MAIN            shift and go to state 58

    vars                           shift and go to state 53
    funcname                       shift and go to state 55
    assignment_var                 shift and go to state 57
    variable                       shift and go to state 59

state 14

    (20) assignment -> assignment_var .

    SEMICOLON       reduce using rule 20 (assignment -> assignment_var .)


state 15

    (21) assignment -> pointer . ASSIGNMENT expression

    ASSIGNMENT      shift and go to state 60


state 16

    (22) assignment -> variable . ASSIGNMENT error
    (19) assignment_var -> variable . ASSIGNMENT expression
    (28) variable -> variable . index
    (29) index -> . OSQBRACKET expression CSQBRACKET index
    (30) index -> . OSQBRACKET expression CSQBRACKET

    ASSIGNMENT      shift and go to state 61
    OSQBRACKET      shift and go to state 63

    index                          shift and go to state 62

state 17

    (67) while -> WHILE . OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET

    OBRACKET        shift and go to state 64


state 18

    (68) zero -> ZERO . OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (70) zero -> ZERO . OBRACKET expression CBRACKET NL statement

    OBRACKET        shift and go to state 65


state 19

    (69) zero -> NOTZERO . OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (71) zero -> NOTZERO . OBRACKET expression CBRACKET NL statement

    OBRACKET        shift and go to state 66


state 20

    (59) operator -> TOP . SEMICOLON

    SEMICOLON       shift and go to state 67


state 21

    (60) operator -> BOTTOM . SEMICOLON

    SEMICOLON       shift and go to state 68


state 22

    (61) operator -> LEFT . SEMICOLON

    SEMICOLON       shift and go to state 69


state 23

    (62) operator -> RIGHT . SEMICOLON

    SEMICOLON       shift and go to state 70


state 24

    (63) operator -> PORTAL . SEMICOLON

    SEMICOLON       shift and go to state 71


state 25

    (64) operator -> TELEPORT . SEMICOLON

    SEMICOLON       shift and go to state 72


state 26

    (65) operator -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 73


state 27

    (31) type -> VALUE .

    error           reduce using rule 31 (type -> VALUE .)
    NAME            reduce using rule 31 (type -> VALUE .)
    MAIN            reduce using rule 31 (type -> VALUE .)


state 28

    (32) type -> CONST . VALUE
    (34) type -> CONST . POINTER expr_type
    (36) type -> CONST . POINTER CONST expr_type
    (38) type -> CONST . ARRAYOF expr_type

    VALUE           shift and go to state 74
    POINTER         shift and go to state 75
    ARRAYOF         shift and go to state 76


state 29

    (33) type -> POINTER . expr_type
    (35) type -> POINTER . CONST expr_type
    (39) expr_type -> .
    (40) expr_type -> . VALUE
    (41) expr_type -> . POINTER expr_type
    (42) expr_type -> . ARRAYOF expr_type

    CONST           shift and go to state 79
    error           reduce using rule 39 (expr_type -> .)
    NAME            reduce using rule 39 (expr_type -> .)
    MAIN            reduce using rule 39 (expr_type -> .)
    VALUE           shift and go to state 80
    POINTER         shift and go to state 77
    ARRAYOF         shift and go to state 81

    expr_type                      shift and go to state 78

state 30

    (37) type -> ARRAYOF . expr_type
    (39) expr_type -> .
    (40) expr_type -> . VALUE
    (41) expr_type -> . POINTER expr_type
    (42) expr_type -> . ARRAYOF expr_type

    error           reduce using rule 39 (expr_type -> .)
    NAME            reduce using rule 39 (expr_type -> .)
    MAIN            reduce using rule 39 (expr_type -> .)
    VALUE           shift and go to state 80
    POINTER         shift and go to state 77
    ARRAYOF         shift and go to state 81

    expr_type                      shift and go to state 82

state 31

    (23) pointer -> STAR . NAME
    (24) pointer -> STAR . OBRACKET expression CBRACKET

    NAME            shift and go to state 83
    OBRACKET        shift and go to state 84


state 32

    (27) variable -> NAME .

    ASSIGNMENT      reduce using rule 27 (variable -> NAME .)
    OSQBRACKET      reduce using rule 27 (variable -> NAME .)
    CBRACKET        reduce using rule 27 (variable -> NAME .)


state 33

    (25) pointer -> AMPERSAND . NAME
    (26) pointer -> AMPERSAND . OBRACKET expression CBRACKET

    NAME            shift and go to state 85
    OBRACKET        shift and go to state 86


state 34

    (2) stategroup -> stategroup statement .

    RETURN          reduce using rule 2 (stategroup -> stategroup statement .)
    error           reduce using rule 2 (stategroup -> stategroup statement .)
    WHILE           reduce using rule 2 (stategroup -> stategroup statement .)
    ZERO            reduce using rule 2 (stategroup -> stategroup statement .)
    NOTZERO         reduce using rule 2 (stategroup -> stategroup statement .)
    TOP             reduce using rule 2 (stategroup -> stategroup statement .)
    BOTTOM          reduce using rule 2 (stategroup -> stategroup statement .)
    LEFT            reduce using rule 2 (stategroup -> stategroup statement .)
    RIGHT           reduce using rule 2 (stategroup -> stategroup statement .)
    PORTAL          reduce using rule 2 (stategroup -> stategroup statement .)
    TELEPORT        reduce using rule 2 (stategroup -> stategroup statement .)
    BREAK           reduce using rule 2 (stategroup -> stategroup statement .)
    VALUE           reduce using rule 2 (stategroup -> stategroup statement .)
    CONST           reduce using rule 2 (stategroup -> stategroup statement .)
    POINTER         reduce using rule 2 (stategroup -> stategroup statement .)
    ARRAYOF         reduce using rule 2 (stategroup -> stategroup statement .)
    STAR            reduce using rule 2 (stategroup -> stategroup statement .)
    AMPERSAND       reduce using rule 2 (stategroup -> stategroup statement .)
    NAME            reduce using rule 2 (stategroup -> stategroup statement .)
    NL              reduce using rule 2 (stategroup -> stategroup statement .)
    $end            reduce using rule 2 (stategroup -> stategroup statement .)
    CFBRACKET       reduce using rule 2 (stategroup -> stategroup statement .)


state 35

    (4) statement -> declaration SEMICOLON . NL

    NL              shift and go to state 87


state 36

    (5) statement -> assignment SEMICOLON . NL

    NL              shift and go to state 88


state 37

    (6) statement -> while NL .

    RETURN          reduce using rule 6 (statement -> while NL .)
    error           reduce using rule 6 (statement -> while NL .)
    WHILE           reduce using rule 6 (statement -> while NL .)
    ZERO            reduce using rule 6 (statement -> while NL .)
    NOTZERO         reduce using rule 6 (statement -> while NL .)
    TOP             reduce using rule 6 (statement -> while NL .)
    BOTTOM          reduce using rule 6 (statement -> while NL .)
    LEFT            reduce using rule 6 (statement -> while NL .)
    RIGHT           reduce using rule 6 (statement -> while NL .)
    PORTAL          reduce using rule 6 (statement -> while NL .)
    TELEPORT        reduce using rule 6 (statement -> while NL .)
    BREAK           reduce using rule 6 (statement -> while NL .)
    VALUE           reduce using rule 6 (statement -> while NL .)
    CONST           reduce using rule 6 (statement -> while NL .)
    POINTER         reduce using rule 6 (statement -> while NL .)
    ARRAYOF         reduce using rule 6 (statement -> while NL .)
    STAR            reduce using rule 6 (statement -> while NL .)
    AMPERSAND       reduce using rule 6 (statement -> while NL .)
    NAME            reduce using rule 6 (statement -> while NL .)
    NL              reduce using rule 6 (statement -> while NL .)
    $end            reduce using rule 6 (statement -> while NL .)
    CFBRACKET       reduce using rule 6 (statement -> while NL .)


state 38

    (66) while -> while FINISH . OFBRACKET NL stategroup CFBRACKET

    OFBRACKET       shift and go to state 89


state 39

    (7) statement -> zero NL .

    RETURN          reduce using rule 7 (statement -> zero NL .)
    error           reduce using rule 7 (statement -> zero NL .)
    WHILE           reduce using rule 7 (statement -> zero NL .)
    ZERO            reduce using rule 7 (statement -> zero NL .)
    NOTZERO         reduce using rule 7 (statement -> zero NL .)
    TOP             reduce using rule 7 (statement -> zero NL .)
    BOTTOM          reduce using rule 7 (statement -> zero NL .)
    LEFT            reduce using rule 7 (statement -> zero NL .)
    RIGHT           reduce using rule 7 (statement -> zero NL .)
    PORTAL          reduce using rule 7 (statement -> zero NL .)
    TELEPORT        reduce using rule 7 (statement -> zero NL .)
    BREAK           reduce using rule 7 (statement -> zero NL .)
    VALUE           reduce using rule 7 (statement -> zero NL .)
    CONST           reduce using rule 7 (statement -> zero NL .)
    POINTER         reduce using rule 7 (statement -> zero NL .)
    ARRAYOF         reduce using rule 7 (statement -> zero NL .)
    STAR            reduce using rule 7 (statement -> zero NL .)
    AMPERSAND       reduce using rule 7 (statement -> zero NL .)
    NAME            reduce using rule 7 (statement -> zero NL .)
    NL              reduce using rule 7 (statement -> zero NL .)
    $end            reduce using rule 7 (statement -> zero NL .)
    CFBRACKET       reduce using rule 7 (statement -> zero NL .)


state 40

    (8) statement -> function NL .

    RETURN          reduce using rule 8 (statement -> function NL .)
    error           reduce using rule 8 (statement -> function NL .)
    WHILE           reduce using rule 8 (statement -> function NL .)
    ZERO            reduce using rule 8 (statement -> function NL .)
    NOTZERO         reduce using rule 8 (statement -> function NL .)
    TOP             reduce using rule 8 (statement -> function NL .)
    BOTTOM          reduce using rule 8 (statement -> function NL .)
    LEFT            reduce using rule 8 (statement -> function NL .)
    RIGHT           reduce using rule 8 (statement -> function NL .)
    PORTAL          reduce using rule 8 (statement -> function NL .)
    TELEPORT        reduce using rule 8 (statement -> function NL .)
    BREAK           reduce using rule 8 (statement -> function NL .)
    VALUE           reduce using rule 8 (statement -> function NL .)
    CONST           reduce using rule 8 (statement -> function NL .)
    POINTER         reduce using rule 8 (statement -> function NL .)
    ARRAYOF         reduce using rule 8 (statement -> function NL .)
    STAR            reduce using rule 8 (statement -> function NL .)
    AMPERSAND       reduce using rule 8 (statement -> function NL .)
    NAME            reduce using rule 8 (statement -> function NL .)
    NL              reduce using rule 8 (statement -> function NL .)
    $end            reduce using rule 8 (statement -> function NL .)
    CFBRACKET       reduce using rule 8 (statement -> function NL .)


state 41

    (9) statement -> operator SEMICOLON . NL

    NL              shift and go to state 90


state 42

    (10) statement -> RETURN expression . SEMICOLON NL
    (47) al_expression -> expression . PLUS expression
    (48) al_expression -> expression . MINUS expression
    (49) al_expression -> expression . PERCENT expression
    (50) al_expression -> expression . STAR expression
    (51) al_expression -> expression . SLASH expression
    (54) al_expression -> expression . NOTGREATER expression
    (55) al_expression -> expression . NOTLESS expression
    (56) al_expression -> expression . NOTEQ expression

    SEMICOLON       shift and go to state 91
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    PERCENT         shift and go to state 94
    STAR            shift and go to state 95
    SLASH           shift and go to state 96
    NOTGREATER      shift and go to state 97
    NOTLESS         shift and go to state 98
    NOTEQ           shift and go to state 99


state 43

    (43) expression -> variable .
    (28) variable -> variable . index
    (29) index -> . OSQBRACKET expression CSQBRACKET index
    (30) index -> . OSQBRACKET expression CSQBRACKET

    SEMICOLON       reduce using rule 43 (expression -> variable .)
    PLUS            reduce using rule 43 (expression -> variable .)
    MINUS           reduce using rule 43 (expression -> variable .)
    PERCENT         reduce using rule 43 (expression -> variable .)
    STAR            reduce using rule 43 (expression -> variable .)
    SLASH           reduce using rule 43 (expression -> variable .)
    NOTGREATER      reduce using rule 43 (expression -> variable .)
    NOTLESS         reduce using rule 43 (expression -> variable .)
    NOTEQ           reduce using rule 43 (expression -> variable .)
    CBRACKET        reduce using rule 43 (expression -> variable .)
    CSQBRACKET      reduce using rule 43 (expression -> variable .)
    COMMA           reduce using rule 43 (expression -> variable .)
    OSQBRACKET      shift and go to state 63

    index                          shift and go to state 62

state 44

    (44) expression -> al_expression .

    SEMICOLON       reduce using rule 44 (expression -> al_expression .)
    PLUS            reduce using rule 44 (expression -> al_expression .)
    MINUS           reduce using rule 44 (expression -> al_expression .)
    PERCENT         reduce using rule 44 (expression -> al_expression .)
    STAR            reduce using rule 44 (expression -> al_expression .)
    SLASH           reduce using rule 44 (expression -> al_expression .)
    NOTGREATER      reduce using rule 44 (expression -> al_expression .)
    NOTLESS         reduce using rule 44 (expression -> al_expression .)
    NOTEQ           reduce using rule 44 (expression -> al_expression .)
    CBRACKET        reduce using rule 44 (expression -> al_expression .)
    CSQBRACKET      reduce using rule 44 (expression -> al_expression .)
    COMMA           reduce using rule 44 (expression -> al_expression .)


state 45

    (45) expression -> function_call .

    SEMICOLON       reduce using rule 45 (expression -> function_call .)
    PLUS            reduce using rule 45 (expression -> function_call .)
    MINUS           reduce using rule 45 (expression -> function_call .)
    PERCENT         reduce using rule 45 (expression -> function_call .)
    STAR            reduce using rule 45 (expression -> function_call .)
    SLASH           reduce using rule 45 (expression -> function_call .)
    NOTGREATER      reduce using rule 45 (expression -> function_call .)
    NOTLESS         reduce using rule 45 (expression -> function_call .)
    NOTEQ           reduce using rule 45 (expression -> function_call .)
    CBRACKET        reduce using rule 45 (expression -> function_call .)
    CSQBRACKET      reduce using rule 45 (expression -> function_call .)
    COMMA           reduce using rule 45 (expression -> function_call .)


state 46

    (46) expression -> SIZEOF . OBRACKET variable CBRACKET

    OBRACKET        shift and go to state 100


state 47

    (58) al_expression -> OBRACKET . al_expression CBRACKET
    (47) al_expression -> . expression PLUS expression
    (48) al_expression -> . expression MINUS expression
    (49) al_expression -> . expression PERCENT expression
    (50) al_expression -> . expression STAR expression
    (51) al_expression -> . expression SLASH expression
    (52) al_expression -> . STAR expression
    (53) al_expression -> . AMPERSAND expression
    (54) al_expression -> . expression NOTGREATER expression
    (55) al_expression -> . expression NOTLESS expression
    (56) al_expression -> . expression NOTEQ expression
    (57) al_expression -> . NUMBER
    (58) al_expression -> . OBRACKET al_expression CBRACKET
    (43) expression -> . variable
    (44) expression -> . al_expression
    (45) expression -> . function_call
    (46) expression -> . SIZEOF OBRACKET variable CBRACKET
    (27) variable -> . NAME
    (28) variable -> . variable index
    (76) function_call -> . NAME OBRACKET call_parameters CBRACKET

    STAR            shift and go to state 49
    AMPERSAND       shift and go to state 50
    NUMBER          shift and go to state 51
    OBRACKET        shift and go to state 47
    SIZEOF          shift and go to state 46
    NAME            shift and go to state 48

    al_expression                  shift and go to state 101
    expression                     shift and go to state 102
    variable                       shift and go to state 43
    function_call                  shift and go to state 45

state 48

    (27) variable -> NAME .
    (76) function_call -> NAME . OBRACKET call_parameters CBRACKET

    OSQBRACKET      reduce using rule 27 (variable -> NAME .)
    SEMICOLON       reduce using rule 27 (variable -> NAME .)
    PLUS            reduce using rule 27 (variable -> NAME .)
    MINUS           reduce using rule 27 (variable -> NAME .)
    PERCENT         reduce using rule 27 (variable -> NAME .)
    STAR            reduce using rule 27 (variable -> NAME .)
    SLASH           reduce using rule 27 (variable -> NAME .)
    NOTGREATER      reduce using rule 27 (variable -> NAME .)
    NOTLESS         reduce using rule 27 (variable -> NAME .)
    NOTEQ           reduce using rule 27 (variable -> NAME .)
    CBRACKET        reduce using rule 27 (variable -> NAME .)
    CSQBRACKET      reduce using rule 27 (variable -> NAME .)
    COMMA           reduce using rule 27 (variable -> NAME .)
    OBRACKET        shift and go to state 103


state 49

    (52) al_expression -> STAR . expression
    (43) expression -> . variable
    (44) expression -> . al_expression
    (45) expression -> . function_call
    (46) expression -> . SIZEOF OBRACKET variable CBRACKET
    (27) variable -> . NAME
    (28) variable -> . variable index
    (47) al_expression -> . expression PLUS expression
    (48) al_expression -> . expression MINUS expression
    (49) al_expression -> . expression PERCENT expression
    (50) al_expression -> . expression STAR expression
    (51) al_expression -> . expression SLASH expression
    (52) al_expression -> . STAR expression
    (53) al_expression -> . AMPERSAND expression
    (54) al_expression -> . expression NOTGREATER expression
    (55) al_expression -> . expression NOTLESS expression
    (56) al_expression -> . expression NOTEQ expression
    (57) al_expression -> . NUMBER
    (58) al_expression -> . OBRACKET al_expression CBRACKET
    (76) function_call -> . NAME OBRACKET call_parameters CBRACKET

    SIZEOF          shift and go to state 46
    NAME            shift and go to state 48
    STAR            shift and go to state 49
    AMPERSAND       shift and go to state 50
    NUMBER          shift and go to state 51
    OBRACKET        shift and go to state 47

    expression                     shift and go to state 104
    variable                       shift and go to state 43
    al_expression                  shift and go to state 44
    function_call                  shift and go to state 45

state 50

    (53) al_expression -> AMPERSAND . expression
    (43) expression -> . variable
    (44) expression -> . al_expression
    (45) expression -> . function_call
    (46) expression -> . SIZEOF OBRACKET variable CBRACKET
    (27) variable -> . NAME
    (28) variable -> . variable index
    (47) al_expression -> . expression PLUS expression
    (48) al_expression -> . expression MINUS expression
    (49) al_expression -> . expression PERCENT expression
    (50) al_expression -> . expression STAR expression
    (51) al_expression -> . expression SLASH expression
    (52) al_expression -> . STAR expression
    (53) al_expression -> . AMPERSAND expression
    (54) al_expression -> . expression NOTGREATER expression
    (55) al_expression -> . expression NOTLESS expression
    (56) al_expression -> . expression NOTEQ expression
    (57) al_expression -> . NUMBER
    (58) al_expression -> . OBRACKET al_expression CBRACKET
    (76) function_call -> . NAME OBRACKET call_parameters CBRACKET

    SIZEOF          shift and go to state 46
    NAME            shift and go to state 48
    STAR            shift and go to state 49
    AMPERSAND       shift and go to state 50
    NUMBER          shift and go to state 51
    OBRACKET        shift and go to state 47

    expression                     shift and go to state 105
    variable                       shift and go to state 43
    al_expression                  shift and go to state 44
    function_call                  shift and go to state 45

state 51

    (57) al_expression -> NUMBER .

    SEMICOLON       reduce using rule 57 (al_expression -> NUMBER .)
    PLUS            reduce using rule 57 (al_expression -> NUMBER .)
    MINUS           reduce using rule 57 (al_expression -> NUMBER .)
    PERCENT         reduce using rule 57 (al_expression -> NUMBER .)
    STAR            reduce using rule 57 (al_expression -> NUMBER .)
    SLASH           reduce using rule 57 (al_expression -> NUMBER .)
    NOTGREATER      reduce using rule 57 (al_expression -> NUMBER .)
    NOTLESS         reduce using rule 57 (al_expression -> NUMBER .)
    NOTEQ           reduce using rule 57 (al_expression -> NUMBER .)
    CBRACKET        reduce using rule 57 (al_expression -> NUMBER .)
    CSQBRACKET      reduce using rule 57 (al_expression -> NUMBER .)
    COMMA           reduce using rule 57 (al_expression -> NUMBER .)


state 52

    (11) statement -> empty NL .

    RETURN          reduce using rule 11 (statement -> empty NL .)
    error           reduce using rule 11 (statement -> empty NL .)
    WHILE           reduce using rule 11 (statement -> empty NL .)
    ZERO            reduce using rule 11 (statement -> empty NL .)
    NOTZERO         reduce using rule 11 (statement -> empty NL .)
    TOP             reduce using rule 11 (statement -> empty NL .)
    BOTTOM          reduce using rule 11 (statement -> empty NL .)
    LEFT            reduce using rule 11 (statement -> empty NL .)
    RIGHT           reduce using rule 11 (statement -> empty NL .)
    PORTAL          reduce using rule 11 (statement -> empty NL .)
    TELEPORT        reduce using rule 11 (statement -> empty NL .)
    BREAK           reduce using rule 11 (statement -> empty NL .)
    VALUE           reduce using rule 11 (statement -> empty NL .)
    CONST           reduce using rule 11 (statement -> empty NL .)
    POINTER         reduce using rule 11 (statement -> empty NL .)
    ARRAYOF         reduce using rule 11 (statement -> empty NL .)
    STAR            reduce using rule 11 (statement -> empty NL .)
    AMPERSAND       reduce using rule 11 (statement -> empty NL .)
    NAME            reduce using rule 11 (statement -> empty NL .)
    NL              reduce using rule 11 (statement -> empty NL .)
    $end            reduce using rule 11 (statement -> empty NL .)
    CFBRACKET       reduce using rule 11 (statement -> empty NL .)


state 53

    (13) declaration -> type vars .

    SEMICOLON       reduce using rule 13 (declaration -> type vars .)


state 54

    (14) declaration -> type error .
    (81) function -> type error .

    SEMICOLON       reduce using rule 14 (declaration -> type error .)
    NL              reduce using rule 81 (function -> type error .)


state 55

    (72) function -> type funcname . OBRACKET parameters CBRACKET OFBRACKET NL stategroup CFBRACKET
    (73) function -> type funcname . OBRACKET CBRACKET OFBRACKET NL stategroup CFBRACKET

    OBRACKET        shift and go to state 106


state 56

    (15) vars -> NAME . COMMA vars
    (17) vars -> NAME .
    (75) funcname -> NAME .
    (27) variable -> NAME .

    COMMA           shift and go to state 107
    SEMICOLON       reduce using rule 17 (vars -> NAME .)
    OBRACKET        reduce using rule 75 (funcname -> NAME .)
    ASSIGNMENT      reduce using rule 27 (variable -> NAME .)
    OSQBRACKET      reduce using rule 27 (variable -> NAME .)


state 57

    (16) vars -> assignment_var . COMMA vars
    (18) vars -> assignment_var .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 108
    SEMICOLON       reduce using rule 18 (vars -> assignment_var .)
    CBRACKET        reduce using rule 18 (vars -> assignment_var .)

  ! COMMA           [ reduce using rule 18 (vars -> assignment_var .) ]


state 58

    (74) funcname -> MAIN .

    OBRACKET        reduce using rule 74 (funcname -> MAIN .)


state 59

    (19) assignment_var -> variable . ASSIGNMENT expression
    (28) variable -> variable . index
    (29) index -> . OSQBRACKET expression CSQBRACKET index
    (30) index -> . OSQBRACKET expression CSQBRACKET

    ASSIGNMENT      shift and go to state 109
    OSQBRACKET      shift and go to state 63

    index                          shift and go to state 62

state 60

    (21) assignment -> pointer ASSIGNMENT . expression
    (43) expression -> . variable
    (44) expression -> . al_expression
    (45) expression -> . function_call
    (46) expression -> . SIZEOF OBRACKET variable CBRACKET
    (27) variable -> . NAME
    (28) variable -> . variable index
    (47) al_expression -> . expression PLUS expression
    (48) al_expression -> . expression MINUS expression
    (49) al_expression -> . expression PERCENT expression
    (50) al_expression -> . expression STAR expression
    (51) al_expression -> . expression SLASH expression
    (52) al_expression -> . STAR expression
    (53) al_expression -> . AMPERSAND expression
    (54) al_expression -> . expression NOTGREATER expression
    (55) al_expression -> . expression NOTLESS expression
    (56) al_expression -> . expression NOTEQ expression
    (57) al_expression -> . NUMBER
    (58) al_expression -> . OBRACKET al_expression CBRACKET
    (76) function_call -> . NAME OBRACKET call_parameters CBRACKET

    SIZEOF          shift and go to state 46
    NAME            shift and go to state 48
    STAR            shift and go to state 49
    AMPERSAND       shift and go to state 50
    NUMBER          shift and go to state 51
    OBRACKET        shift and go to state 47

    expression                     shift and go to state 110
    variable                       shift and go to state 43
    al_expression                  shift and go to state 44
    function_call                  shift and go to state 45

state 61

    (22) assignment -> variable ASSIGNMENT . error
    (19) assignment_var -> variable ASSIGNMENT . expression
    (43) expression -> . variable
    (44) expression -> . al_expression
    (45) expression -> . function_call
    (46) expression -> . SIZEOF OBRACKET variable CBRACKET
    (27) variable -> . NAME
    (28) variable -> . variable index
    (47) al_expression -> . expression PLUS expression
    (48) al_expression -> . expression MINUS expression
    (49) al_expression -> . expression PERCENT expression
    (50) al_expression -> . expression STAR expression
    (51) al_expression -> . expression SLASH expression
    (52) al_expression -> . STAR expression
    (53) al_expression -> . AMPERSAND expression
    (54) al_expression -> . expression NOTGREATER expression
    (55) al_expression -> . expression NOTLESS expression
    (56) al_expression -> . expression NOTEQ expression
    (57) al_expression -> . NUMBER
    (58) al_expression -> . OBRACKET al_expression CBRACKET
    (76) function_call -> . NAME OBRACKET call_parameters CBRACKET

    error           shift and go to state 111
    SIZEOF          shift and go to state 46
    NAME            shift and go to state 48
    STAR            shift and go to state 49
    AMPERSAND       shift and go to state 50
    NUMBER          shift and go to state 51
    OBRACKET        shift and go to state 47

    variable                       shift and go to state 43
    expression                     shift and go to state 112
    al_expression                  shift and go to state 44
    function_call                  shift and go to state 45

state 62

    (28) variable -> variable index .

    ASSIGNMENT      reduce using rule 28 (variable -> variable index .)
    OSQBRACKET      reduce using rule 28 (variable -> variable index .)
    SEMICOLON       reduce using rule 28 (variable -> variable index .)
    PLUS            reduce using rule 28 (variable -> variable index .)
    MINUS           reduce using rule 28 (variable -> variable index .)
    PERCENT         reduce using rule 28 (variable -> variable index .)
    STAR            reduce using rule 28 (variable -> variable index .)
    SLASH           reduce using rule 28 (variable -> variable index .)
    NOTGREATER      reduce using rule 28 (variable -> variable index .)
    NOTLESS         reduce using rule 28 (variable -> variable index .)
    NOTEQ           reduce using rule 28 (variable -> variable index .)
    CBRACKET        reduce using rule 28 (variable -> variable index .)
    CSQBRACKET      reduce using rule 28 (variable -> variable index .)
    COMMA           reduce using rule 28 (variable -> variable index .)


state 63

    (29) index -> OSQBRACKET . expression CSQBRACKET index
    (30) index -> OSQBRACKET . expression CSQBRACKET
    (43) expression -> . variable
    (44) expression -> . al_expression
    (45) expression -> . function_call
    (46) expression -> . SIZEOF OBRACKET variable CBRACKET
    (27) variable -> . NAME
    (28) variable -> . variable index
    (47) al_expression -> . expression PLUS expression
    (48) al_expression -> . expression MINUS expression
    (49) al_expression -> . expression PERCENT expression
    (50) al_expression -> . expression STAR expression
    (51) al_expression -> . expression SLASH expression
    (52) al_expression -> . STAR expression
    (53) al_expression -> . AMPERSAND expression
    (54) al_expression -> . expression NOTGREATER expression
    (55) al_expression -> . expression NOTLESS expression
    (56) al_expression -> . expression NOTEQ expression
    (57) al_expression -> . NUMBER
    (58) al_expression -> . OBRACKET al_expression CBRACKET
    (76) function_call -> . NAME OBRACKET call_parameters CBRACKET

    SIZEOF          shift and go to state 46
    NAME            shift and go to state 48
    STAR            shift and go to state 49
    AMPERSAND       shift and go to state 50
    NUMBER          shift and go to state 51
    OBRACKET        shift and go to state 47

    expression                     shift and go to state 113
    variable                       shift and go to state 43
    al_expression                  shift and go to state 44
    function_call                  shift and go to state 45

state 64

    (67) while -> WHILE OBRACKET . expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (43) expression -> . variable
    (44) expression -> . al_expression
    (45) expression -> . function_call
    (46) expression -> . SIZEOF OBRACKET variable CBRACKET
    (27) variable -> . NAME
    (28) variable -> . variable index
    (47) al_expression -> . expression PLUS expression
    (48) al_expression -> . expression MINUS expression
    (49) al_expression -> . expression PERCENT expression
    (50) al_expression -> . expression STAR expression
    (51) al_expression -> . expression SLASH expression
    (52) al_expression -> . STAR expression
    (53) al_expression -> . AMPERSAND expression
    (54) al_expression -> . expression NOTGREATER expression
    (55) al_expression -> . expression NOTLESS expression
    (56) al_expression -> . expression NOTEQ expression
    (57) al_expression -> . NUMBER
    (58) al_expression -> . OBRACKET al_expression CBRACKET
    (76) function_call -> . NAME OBRACKET call_parameters CBRACKET

    SIZEOF          shift and go to state 46
    NAME            shift and go to state 48
    STAR            shift and go to state 49
    AMPERSAND       shift and go to state 50
    NUMBER          shift and go to state 51
    OBRACKET        shift and go to state 47

    expression                     shift and go to state 114
    variable                       shift and go to state 43
    al_expression                  shift and go to state 44
    function_call                  shift and go to state 45

state 65

    (68) zero -> ZERO OBRACKET . expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (70) zero -> ZERO OBRACKET . expression CBRACKET NL statement
    (43) expression -> . variable
    (44) expression -> . al_expression
    (45) expression -> . function_call
    (46) expression -> . SIZEOF OBRACKET variable CBRACKET
    (27) variable -> . NAME
    (28) variable -> . variable index
    (47) al_expression -> . expression PLUS expression
    (48) al_expression -> . expression MINUS expression
    (49) al_expression -> . expression PERCENT expression
    (50) al_expression -> . expression STAR expression
    (51) al_expression -> . expression SLASH expression
    (52) al_expression -> . STAR expression
    (53) al_expression -> . AMPERSAND expression
    (54) al_expression -> . expression NOTGREATER expression
    (55) al_expression -> . expression NOTLESS expression
    (56) al_expression -> . expression NOTEQ expression
    (57) al_expression -> . NUMBER
    (58) al_expression -> . OBRACKET al_expression CBRACKET
    (76) function_call -> . NAME OBRACKET call_parameters CBRACKET

    SIZEOF          shift and go to state 46
    NAME            shift and go to state 48
    STAR            shift and go to state 49
    AMPERSAND       shift and go to state 50
    NUMBER          shift and go to state 51
    OBRACKET        shift and go to state 47

    expression                     shift and go to state 115
    variable                       shift and go to state 43
    al_expression                  shift and go to state 44
    function_call                  shift and go to state 45

state 66

    (69) zero -> NOTZERO OBRACKET . expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (71) zero -> NOTZERO OBRACKET . expression CBRACKET NL statement
    (43) expression -> . variable
    (44) expression -> . al_expression
    (45) expression -> . function_call
    (46) expression -> . SIZEOF OBRACKET variable CBRACKET
    (27) variable -> . NAME
    (28) variable -> . variable index
    (47) al_expression -> . expression PLUS expression
    (48) al_expression -> . expression MINUS expression
    (49) al_expression -> . expression PERCENT expression
    (50) al_expression -> . expression STAR expression
    (51) al_expression -> . expression SLASH expression
    (52) al_expression -> . STAR expression
    (53) al_expression -> . AMPERSAND expression
    (54) al_expression -> . expression NOTGREATER expression
    (55) al_expression -> . expression NOTLESS expression
    (56) al_expression -> . expression NOTEQ expression
    (57) al_expression -> . NUMBER
    (58) al_expression -> . OBRACKET al_expression CBRACKET
    (76) function_call -> . NAME OBRACKET call_parameters CBRACKET

    SIZEOF          shift and go to state 46
    NAME            shift and go to state 48
    STAR            shift and go to state 49
    AMPERSAND       shift and go to state 50
    NUMBER          shift and go to state 51
    OBRACKET        shift and go to state 47

    expression                     shift and go to state 116
    variable                       shift and go to state 43
    al_expression                  shift and go to state 44
    function_call                  shift and go to state 45

state 67

    (59) operator -> TOP SEMICOLON .

    SEMICOLON       reduce using rule 59 (operator -> TOP SEMICOLON .)


state 68

    (60) operator -> BOTTOM SEMICOLON .

    SEMICOLON       reduce using rule 60 (operator -> BOTTOM SEMICOLON .)


state 69

    (61) operator -> LEFT SEMICOLON .

    SEMICOLON       reduce using rule 61 (operator -> LEFT SEMICOLON .)


state 70

    (62) operator -> RIGHT SEMICOLON .

    SEMICOLON       reduce using rule 62 (operator -> RIGHT SEMICOLON .)


state 71

    (63) operator -> PORTAL SEMICOLON .

    SEMICOLON       reduce using rule 63 (operator -> PORTAL SEMICOLON .)


state 72

    (64) operator -> TELEPORT SEMICOLON .

    SEMICOLON       reduce using rule 64 (operator -> TELEPORT SEMICOLON .)


state 73

    (65) operator -> BREAK SEMICOLON .

    SEMICOLON       reduce using rule 65 (operator -> BREAK SEMICOLON .)


state 74

    (32) type -> CONST VALUE .

    error           reduce using rule 32 (type -> CONST VALUE .)
    NAME            reduce using rule 32 (type -> CONST VALUE .)
    MAIN            reduce using rule 32 (type -> CONST VALUE .)


state 75

    (34) type -> CONST POINTER . expr_type
    (36) type -> CONST POINTER . CONST expr_type
    (39) expr_type -> .
    (40) expr_type -> . VALUE
    (41) expr_type -> . POINTER expr_type
    (42) expr_type -> . ARRAYOF expr_type

    CONST           shift and go to state 117
    error           reduce using rule 39 (expr_type -> .)
    NAME            reduce using rule 39 (expr_type -> .)
    MAIN            reduce using rule 39 (expr_type -> .)
    VALUE           shift and go to state 80
    POINTER         shift and go to state 77
    ARRAYOF         shift and go to state 81

    expr_type                      shift and go to state 118

state 76

    (38) type -> CONST ARRAYOF . expr_type
    (39) expr_type -> .
    (40) expr_type -> . VALUE
    (41) expr_type -> . POINTER expr_type
    (42) expr_type -> . ARRAYOF expr_type

    error           reduce using rule 39 (expr_type -> .)
    NAME            reduce using rule 39 (expr_type -> .)
    MAIN            reduce using rule 39 (expr_type -> .)
    VALUE           shift and go to state 80
    POINTER         shift and go to state 77
    ARRAYOF         shift and go to state 81

    expr_type                      shift and go to state 119

state 77

    (41) expr_type -> POINTER . expr_type
    (39) expr_type -> .
    (40) expr_type -> . VALUE
    (41) expr_type -> . POINTER expr_type
    (42) expr_type -> . ARRAYOF expr_type

    error           reduce using rule 39 (expr_type -> .)
    NAME            reduce using rule 39 (expr_type -> .)
    MAIN            reduce using rule 39 (expr_type -> .)
    VALUE           shift and go to state 80
    POINTER         shift and go to state 77
    ARRAYOF         shift and go to state 81

    expr_type                      shift and go to state 120

state 78

    (33) type -> POINTER expr_type .

    error           reduce using rule 33 (type -> POINTER expr_type .)
    NAME            reduce using rule 33 (type -> POINTER expr_type .)
    MAIN            reduce using rule 33 (type -> POINTER expr_type .)


state 79

    (35) type -> POINTER CONST . expr_type
    (39) expr_type -> .
    (40) expr_type -> . VALUE
    (41) expr_type -> . POINTER expr_type
    (42) expr_type -> . ARRAYOF expr_type

    error           reduce using rule 39 (expr_type -> .)
    NAME            reduce using rule 39 (expr_type -> .)
    MAIN            reduce using rule 39 (expr_type -> .)
    VALUE           shift and go to state 80
    POINTER         shift and go to state 77
    ARRAYOF         shift and go to state 81

    expr_type                      shift and go to state 121

state 80

    (40) expr_type -> VALUE .

    error           reduce using rule 40 (expr_type -> VALUE .)
    NAME            reduce using rule 40 (expr_type -> VALUE .)
    MAIN            reduce using rule 40 (expr_type -> VALUE .)


state 81

    (42) expr_type -> ARRAYOF . expr_type
    (39) expr_type -> .
    (40) expr_type -> . VALUE
    (41) expr_type -> . POINTER expr_type
    (42) expr_type -> . ARRAYOF expr_type

    error           reduce using rule 39 (expr_type -> .)
    NAME            reduce using rule 39 (expr_type -> .)
    MAIN            reduce using rule 39 (expr_type -> .)
    VALUE           shift and go to state 80
    POINTER         shift and go to state 77
    ARRAYOF         shift and go to state 81

    expr_type                      shift and go to state 122

state 82

    (37) type -> ARRAYOF expr_type .

    error           reduce using rule 37 (type -> ARRAYOF expr_type .)
    NAME            reduce using rule 37 (type -> ARRAYOF expr_type .)
    MAIN            reduce using rule 37 (type -> ARRAYOF expr_type .)


state 83

    (23) pointer -> STAR NAME .

    ASSIGNMENT      reduce using rule 23 (pointer -> STAR NAME .)


state 84

    (24) pointer -> STAR OBRACKET . expression CBRACKET
    (43) expression -> . variable
    (44) expression -> . al_expression
    (45) expression -> . function_call
    (46) expression -> . SIZEOF OBRACKET variable CBRACKET
    (27) variable -> . NAME
    (28) variable -> . variable index
    (47) al_expression -> . expression PLUS expression
    (48) al_expression -> . expression MINUS expression
    (49) al_expression -> . expression PERCENT expression
    (50) al_expression -> . expression STAR expression
    (51) al_expression -> . expression SLASH expression
    (52) al_expression -> . STAR expression
    (53) al_expression -> . AMPERSAND expression
    (54) al_expression -> . expression NOTGREATER expression
    (55) al_expression -> . expression NOTLESS expression
    (56) al_expression -> . expression NOTEQ expression
    (57) al_expression -> . NUMBER
    (58) al_expression -> . OBRACKET al_expression CBRACKET
    (76) function_call -> . NAME OBRACKET call_parameters CBRACKET

    SIZEOF          shift and go to state 46
    NAME            shift and go to state 48
    STAR            shift and go to state 49
    AMPERSAND       shift and go to state 50
    NUMBER          shift and go to state 51
    OBRACKET        shift and go to state 47

    expression                     shift and go to state 123
    variable                       shift and go to state 43
    al_expression                  shift and go to state 44
    function_call                  shift and go to state 45

state 85

    (25) pointer -> AMPERSAND NAME .

    ASSIGNMENT      reduce using rule 25 (pointer -> AMPERSAND NAME .)


state 86

    (26) pointer -> AMPERSAND OBRACKET . expression CBRACKET
    (43) expression -> . variable
    (44) expression -> . al_expression
    (45) expression -> . function_call
    (46) expression -> . SIZEOF OBRACKET variable CBRACKET
    (27) variable -> . NAME
    (28) variable -> . variable index
    (47) al_expression -> . expression PLUS expression
    (48) al_expression -> . expression MINUS expression
    (49) al_expression -> . expression PERCENT expression
    (50) al_expression -> . expression STAR expression
    (51) al_expression -> . expression SLASH expression
    (52) al_expression -> . STAR expression
    (53) al_expression -> . AMPERSAND expression
    (54) al_expression -> . expression NOTGREATER expression
    (55) al_expression -> . expression NOTLESS expression
    (56) al_expression -> . expression NOTEQ expression
    (57) al_expression -> . NUMBER
    (58) al_expression -> . OBRACKET al_expression CBRACKET
    (76) function_call -> . NAME OBRACKET call_parameters CBRACKET

    SIZEOF          shift and go to state 46
    NAME            shift and go to state 48
    STAR            shift and go to state 49
    AMPERSAND       shift and go to state 50
    NUMBER          shift and go to state 51
    OBRACKET        shift and go to state 47

    expression                     shift and go to state 124
    variable                       shift and go to state 43
    al_expression                  shift and go to state 44
    function_call                  shift and go to state 45

state 87

    (4) statement -> declaration SEMICOLON NL .

    RETURN          reduce using rule 4 (statement -> declaration SEMICOLON NL .)
    error           reduce using rule 4 (statement -> declaration SEMICOLON NL .)
    WHILE           reduce using rule 4 (statement -> declaration SEMICOLON NL .)
    ZERO            reduce using rule 4 (statement -> declaration SEMICOLON NL .)
    NOTZERO         reduce using rule 4 (statement -> declaration SEMICOLON NL .)
    TOP             reduce using rule 4 (statement -> declaration SEMICOLON NL .)
    BOTTOM          reduce using rule 4 (statement -> declaration SEMICOLON NL .)
    LEFT            reduce using rule 4 (statement -> declaration SEMICOLON NL .)
    RIGHT           reduce using rule 4 (statement -> declaration SEMICOLON NL .)
    PORTAL          reduce using rule 4 (statement -> declaration SEMICOLON NL .)
    TELEPORT        reduce using rule 4 (statement -> declaration SEMICOLON NL .)
    BREAK           reduce using rule 4 (statement -> declaration SEMICOLON NL .)
    VALUE           reduce using rule 4 (statement -> declaration SEMICOLON NL .)
    CONST           reduce using rule 4 (statement -> declaration SEMICOLON NL .)
    POINTER         reduce using rule 4 (statement -> declaration SEMICOLON NL .)
    ARRAYOF         reduce using rule 4 (statement -> declaration SEMICOLON NL .)
    STAR            reduce using rule 4 (statement -> declaration SEMICOLON NL .)
    AMPERSAND       reduce using rule 4 (statement -> declaration SEMICOLON NL .)
    NAME            reduce using rule 4 (statement -> declaration SEMICOLON NL .)
    NL              reduce using rule 4 (statement -> declaration SEMICOLON NL .)
    $end            reduce using rule 4 (statement -> declaration SEMICOLON NL .)
    CFBRACKET       reduce using rule 4 (statement -> declaration SEMICOLON NL .)


state 88

    (5) statement -> assignment SEMICOLON NL .

    RETURN          reduce using rule 5 (statement -> assignment SEMICOLON NL .)
    error           reduce using rule 5 (statement -> assignment SEMICOLON NL .)
    WHILE           reduce using rule 5 (statement -> assignment SEMICOLON NL .)
    ZERO            reduce using rule 5 (statement -> assignment SEMICOLON NL .)
    NOTZERO         reduce using rule 5 (statement -> assignment SEMICOLON NL .)
    TOP             reduce using rule 5 (statement -> assignment SEMICOLON NL .)
    BOTTOM          reduce using rule 5 (statement -> assignment SEMICOLON NL .)
    LEFT            reduce using rule 5 (statement -> assignment SEMICOLON NL .)
    RIGHT           reduce using rule 5 (statement -> assignment SEMICOLON NL .)
    PORTAL          reduce using rule 5 (statement -> assignment SEMICOLON NL .)
    TELEPORT        reduce using rule 5 (statement -> assignment SEMICOLON NL .)
    BREAK           reduce using rule 5 (statement -> assignment SEMICOLON NL .)
    VALUE           reduce using rule 5 (statement -> assignment SEMICOLON NL .)
    CONST           reduce using rule 5 (statement -> assignment SEMICOLON NL .)
    POINTER         reduce using rule 5 (statement -> assignment SEMICOLON NL .)
    ARRAYOF         reduce using rule 5 (statement -> assignment SEMICOLON NL .)
    STAR            reduce using rule 5 (statement -> assignment SEMICOLON NL .)
    AMPERSAND       reduce using rule 5 (statement -> assignment SEMICOLON NL .)
    NAME            reduce using rule 5 (statement -> assignment SEMICOLON NL .)
    NL              reduce using rule 5 (statement -> assignment SEMICOLON NL .)
    $end            reduce using rule 5 (statement -> assignment SEMICOLON NL .)
    CFBRACKET       reduce using rule 5 (statement -> assignment SEMICOLON NL .)


state 89

    (66) while -> while FINISH OFBRACKET . NL stategroup CFBRACKET

    NL              shift and go to state 125


state 90

    (9) statement -> operator SEMICOLON NL .

    RETURN          reduce using rule 9 (statement -> operator SEMICOLON NL .)
    error           reduce using rule 9 (statement -> operator SEMICOLON NL .)
    WHILE           reduce using rule 9 (statement -> operator SEMICOLON NL .)
    ZERO            reduce using rule 9 (statement -> operator SEMICOLON NL .)
    NOTZERO         reduce using rule 9 (statement -> operator SEMICOLON NL .)
    TOP             reduce using rule 9 (statement -> operator SEMICOLON NL .)
    BOTTOM          reduce using rule 9 (statement -> operator SEMICOLON NL .)
    LEFT            reduce using rule 9 (statement -> operator SEMICOLON NL .)
    RIGHT           reduce using rule 9 (statement -> operator SEMICOLON NL .)
    PORTAL          reduce using rule 9 (statement -> operator SEMICOLON NL .)
    TELEPORT        reduce using rule 9 (statement -> operator SEMICOLON NL .)
    BREAK           reduce using rule 9 (statement -> operator SEMICOLON NL .)
    VALUE           reduce using rule 9 (statement -> operator SEMICOLON NL .)
    CONST           reduce using rule 9 (statement -> operator SEMICOLON NL .)
    POINTER         reduce using rule 9 (statement -> operator SEMICOLON NL .)
    ARRAYOF         reduce using rule 9 (statement -> operator SEMICOLON NL .)
    STAR            reduce using rule 9 (statement -> operator SEMICOLON NL .)
    AMPERSAND       reduce using rule 9 (statement -> operator SEMICOLON NL .)
    NAME            reduce using rule 9 (statement -> operator SEMICOLON NL .)
    NL              reduce using rule 9 (statement -> operator SEMICOLON NL .)
    $end            reduce using rule 9 (statement -> operator SEMICOLON NL .)
    CFBRACKET       reduce using rule 9 (statement -> operator SEMICOLON NL .)


state 91

    (10) statement -> RETURN expression SEMICOLON . NL

    NL              shift and go to state 126


state 92

    (47) al_expression -> expression PLUS . expression
    (43) expression -> . variable
    (44) expression -> . al_expression
    (45) expression -> . function_call
    (46) expression -> . SIZEOF OBRACKET variable CBRACKET
    (27) variable -> . NAME
    (28) variable -> . variable index
    (47) al_expression -> . expression PLUS expression
    (48) al_expression -> . expression MINUS expression
    (49) al_expression -> . expression PERCENT expression
    (50) al_expression -> . expression STAR expression
    (51) al_expression -> . expression SLASH expression
    (52) al_expression -> . STAR expression
    (53) al_expression -> . AMPERSAND expression
    (54) al_expression -> . expression NOTGREATER expression
    (55) al_expression -> . expression NOTLESS expression
    (56) al_expression -> . expression NOTEQ expression
    (57) al_expression -> . NUMBER
    (58) al_expression -> . OBRACKET al_expression CBRACKET
    (76) function_call -> . NAME OBRACKET call_parameters CBRACKET

    SIZEOF          shift and go to state 46
    NAME            shift and go to state 48
    STAR            shift and go to state 49
    AMPERSAND       shift and go to state 50
    NUMBER          shift and go to state 51
    OBRACKET        shift and go to state 47

    expression                     shift and go to state 127
    variable                       shift and go to state 43
    al_expression                  shift and go to state 44
    function_call                  shift and go to state 45

state 93

    (48) al_expression -> expression MINUS . expression
    (43) expression -> . variable
    (44) expression -> . al_expression
    (45) expression -> . function_call
    (46) expression -> . SIZEOF OBRACKET variable CBRACKET
    (27) variable -> . NAME
    (28) variable -> . variable index
    (47) al_expression -> . expression PLUS expression
    (48) al_expression -> . expression MINUS expression
    (49) al_expression -> . expression PERCENT expression
    (50) al_expression -> . expression STAR expression
    (51) al_expression -> . expression SLASH expression
    (52) al_expression -> . STAR expression
    (53) al_expression -> . AMPERSAND expression
    (54) al_expression -> . expression NOTGREATER expression
    (55) al_expression -> . expression NOTLESS expression
    (56) al_expression -> . expression NOTEQ expression
    (57) al_expression -> . NUMBER
    (58) al_expression -> . OBRACKET al_expression CBRACKET
    (76) function_call -> . NAME OBRACKET call_parameters CBRACKET

    SIZEOF          shift and go to state 46
    NAME            shift and go to state 48
    STAR            shift and go to state 49
    AMPERSAND       shift and go to state 50
    NUMBER          shift and go to state 51
    OBRACKET        shift and go to state 47

    expression                     shift and go to state 128
    variable                       shift and go to state 43
    al_expression                  shift and go to state 44
    function_call                  shift and go to state 45

state 94

    (49) al_expression -> expression PERCENT . expression
    (43) expression -> . variable
    (44) expression -> . al_expression
    (45) expression -> . function_call
    (46) expression -> . SIZEOF OBRACKET variable CBRACKET
    (27) variable -> . NAME
    (28) variable -> . variable index
    (47) al_expression -> . expression PLUS expression
    (48) al_expression -> . expression MINUS expression
    (49) al_expression -> . expression PERCENT expression
    (50) al_expression -> . expression STAR expression
    (51) al_expression -> . expression SLASH expression
    (52) al_expression -> . STAR expression
    (53) al_expression -> . AMPERSAND expression
    (54) al_expression -> . expression NOTGREATER expression
    (55) al_expression -> . expression NOTLESS expression
    (56) al_expression -> . expression NOTEQ expression
    (57) al_expression -> . NUMBER
    (58) al_expression -> . OBRACKET al_expression CBRACKET
    (76) function_call -> . NAME OBRACKET call_parameters CBRACKET

    SIZEOF          shift and go to state 46
    NAME            shift and go to state 48
    STAR            shift and go to state 49
    AMPERSAND       shift and go to state 50
    NUMBER          shift and go to state 51
    OBRACKET        shift and go to state 47

    expression                     shift and go to state 129
    variable                       shift and go to state 43
    al_expression                  shift and go to state 44
    function_call                  shift and go to state 45

state 95

    (50) al_expression -> expression STAR . expression
    (43) expression -> . variable
    (44) expression -> . al_expression
    (45) expression -> . function_call
    (46) expression -> . SIZEOF OBRACKET variable CBRACKET
    (27) variable -> . NAME
    (28) variable -> . variable index
    (47) al_expression -> . expression PLUS expression
    (48) al_expression -> . expression MINUS expression
    (49) al_expression -> . expression PERCENT expression
    (50) al_expression -> . expression STAR expression
    (51) al_expression -> . expression SLASH expression
    (52) al_expression -> . STAR expression
    (53) al_expression -> . AMPERSAND expression
    (54) al_expression -> . expression NOTGREATER expression
    (55) al_expression -> . expression NOTLESS expression
    (56) al_expression -> . expression NOTEQ expression
    (57) al_expression -> . NUMBER
    (58) al_expression -> . OBRACKET al_expression CBRACKET
    (76) function_call -> . NAME OBRACKET call_parameters CBRACKET

    SIZEOF          shift and go to state 46
    NAME            shift and go to state 48
    STAR            shift and go to state 49
    AMPERSAND       shift and go to state 50
    NUMBER          shift and go to state 51
    OBRACKET        shift and go to state 47

    expression                     shift and go to state 130
    variable                       shift and go to state 43
    al_expression                  shift and go to state 44
    function_call                  shift and go to state 45

state 96

    (51) al_expression -> expression SLASH . expression
    (43) expression -> . variable
    (44) expression -> . al_expression
    (45) expression -> . function_call
    (46) expression -> . SIZEOF OBRACKET variable CBRACKET
    (27) variable -> . NAME
    (28) variable -> . variable index
    (47) al_expression -> . expression PLUS expression
    (48) al_expression -> . expression MINUS expression
    (49) al_expression -> . expression PERCENT expression
    (50) al_expression -> . expression STAR expression
    (51) al_expression -> . expression SLASH expression
    (52) al_expression -> . STAR expression
    (53) al_expression -> . AMPERSAND expression
    (54) al_expression -> . expression NOTGREATER expression
    (55) al_expression -> . expression NOTLESS expression
    (56) al_expression -> . expression NOTEQ expression
    (57) al_expression -> . NUMBER
    (58) al_expression -> . OBRACKET al_expression CBRACKET
    (76) function_call -> . NAME OBRACKET call_parameters CBRACKET

    SIZEOF          shift and go to state 46
    NAME            shift and go to state 48
    STAR            shift and go to state 49
    AMPERSAND       shift and go to state 50
    NUMBER          shift and go to state 51
    OBRACKET        shift and go to state 47

    expression                     shift and go to state 131
    variable                       shift and go to state 43
    al_expression                  shift and go to state 44
    function_call                  shift and go to state 45

state 97

    (54) al_expression -> expression NOTGREATER . expression
    (43) expression -> . variable
    (44) expression -> . al_expression
    (45) expression -> . function_call
    (46) expression -> . SIZEOF OBRACKET variable CBRACKET
    (27) variable -> . NAME
    (28) variable -> . variable index
    (47) al_expression -> . expression PLUS expression
    (48) al_expression -> . expression MINUS expression
    (49) al_expression -> . expression PERCENT expression
    (50) al_expression -> . expression STAR expression
    (51) al_expression -> . expression SLASH expression
    (52) al_expression -> . STAR expression
    (53) al_expression -> . AMPERSAND expression
    (54) al_expression -> . expression NOTGREATER expression
    (55) al_expression -> . expression NOTLESS expression
    (56) al_expression -> . expression NOTEQ expression
    (57) al_expression -> . NUMBER
    (58) al_expression -> . OBRACKET al_expression CBRACKET
    (76) function_call -> . NAME OBRACKET call_parameters CBRACKET

    SIZEOF          shift and go to state 46
    NAME            shift and go to state 48
    STAR            shift and go to state 49
    AMPERSAND       shift and go to state 50
    NUMBER          shift and go to state 51
    OBRACKET        shift and go to state 47

    expression                     shift and go to state 132
    variable                       shift and go to state 43
    al_expression                  shift and go to state 44
    function_call                  shift and go to state 45

state 98

    (55) al_expression -> expression NOTLESS . expression
    (43) expression -> . variable
    (44) expression -> . al_expression
    (45) expression -> . function_call
    (46) expression -> . SIZEOF OBRACKET variable CBRACKET
    (27) variable -> . NAME
    (28) variable -> . variable index
    (47) al_expression -> . expression PLUS expression
    (48) al_expression -> . expression MINUS expression
    (49) al_expression -> . expression PERCENT expression
    (50) al_expression -> . expression STAR expression
    (51) al_expression -> . expression SLASH expression
    (52) al_expression -> . STAR expression
    (53) al_expression -> . AMPERSAND expression
    (54) al_expression -> . expression NOTGREATER expression
    (55) al_expression -> . expression NOTLESS expression
    (56) al_expression -> . expression NOTEQ expression
    (57) al_expression -> . NUMBER
    (58) al_expression -> . OBRACKET al_expression CBRACKET
    (76) function_call -> . NAME OBRACKET call_parameters CBRACKET

    SIZEOF          shift and go to state 46
    NAME            shift and go to state 48
    STAR            shift and go to state 49
    AMPERSAND       shift and go to state 50
    NUMBER          shift and go to state 51
    OBRACKET        shift and go to state 47

    expression                     shift and go to state 133
    variable                       shift and go to state 43
    al_expression                  shift and go to state 44
    function_call                  shift and go to state 45

state 99

    (56) al_expression -> expression NOTEQ . expression
    (43) expression -> . variable
    (44) expression -> . al_expression
    (45) expression -> . function_call
    (46) expression -> . SIZEOF OBRACKET variable CBRACKET
    (27) variable -> . NAME
    (28) variable -> . variable index
    (47) al_expression -> . expression PLUS expression
    (48) al_expression -> . expression MINUS expression
    (49) al_expression -> . expression PERCENT expression
    (50) al_expression -> . expression STAR expression
    (51) al_expression -> . expression SLASH expression
    (52) al_expression -> . STAR expression
    (53) al_expression -> . AMPERSAND expression
    (54) al_expression -> . expression NOTGREATER expression
    (55) al_expression -> . expression NOTLESS expression
    (56) al_expression -> . expression NOTEQ expression
    (57) al_expression -> . NUMBER
    (58) al_expression -> . OBRACKET al_expression CBRACKET
    (76) function_call -> . NAME OBRACKET call_parameters CBRACKET

    SIZEOF          shift and go to state 46
    NAME            shift and go to state 48
    STAR            shift and go to state 49
    AMPERSAND       shift and go to state 50
    NUMBER          shift and go to state 51
    OBRACKET        shift and go to state 47

    expression                     shift and go to state 134
    variable                       shift and go to state 43
    al_expression                  shift and go to state 44
    function_call                  shift and go to state 45

state 100

    (46) expression -> SIZEOF OBRACKET . variable CBRACKET
    (27) variable -> . NAME
    (28) variable -> . variable index

    NAME            shift and go to state 32

    variable                       shift and go to state 135

state 101

    (58) al_expression -> OBRACKET al_expression . CBRACKET
    (44) expression -> al_expression .

    CBRACKET        shift and go to state 136
    PLUS            reduce using rule 44 (expression -> al_expression .)
    MINUS           reduce using rule 44 (expression -> al_expression .)
    PERCENT         reduce using rule 44 (expression -> al_expression .)
    STAR            reduce using rule 44 (expression -> al_expression .)
    SLASH           reduce using rule 44 (expression -> al_expression .)
    NOTGREATER      reduce using rule 44 (expression -> al_expression .)
    NOTLESS         reduce using rule 44 (expression -> al_expression .)
    NOTEQ           reduce using rule 44 (expression -> al_expression .)


state 102

    (47) al_expression -> expression . PLUS expression
    (48) al_expression -> expression . MINUS expression
    (49) al_expression -> expression . PERCENT expression
    (50) al_expression -> expression . STAR expression
    (51) al_expression -> expression . SLASH expression
    (54) al_expression -> expression . NOTGREATER expression
    (55) al_expression -> expression . NOTLESS expression
    (56) al_expression -> expression . NOTEQ expression

    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    PERCENT         shift and go to state 94
    STAR            shift and go to state 95
    SLASH           shift and go to state 96
    NOTGREATER      shift and go to state 97
    NOTLESS         shift and go to state 98
    NOTEQ           shift and go to state 99


state 103

    (76) function_call -> NAME OBRACKET . call_parameters CBRACKET
    (77) call_parameters -> . call_parameters COMMA call_vars
    (78) call_parameters -> . call_vars
    (79) call_vars -> . vars
    (80) call_vars -> . expression
    (15) vars -> . NAME COMMA vars
    (16) vars -> . assignment_var COMMA vars
    (17) vars -> . NAME
    (18) vars -> . assignment_var
    (43) expression -> . variable
    (44) expression -> . al_expression
    (45) expression -> . function_call
    (46) expression -> . SIZEOF OBRACKET variable CBRACKET
    (19) assignment_var -> . variable ASSIGNMENT expression
    (27) variable -> . NAME
    (28) variable -> . variable index
    (47) al_expression -> . expression PLUS expression
    (48) al_expression -> . expression MINUS expression
    (49) al_expression -> . expression PERCENT expression
    (50) al_expression -> . expression STAR expression
    (51) al_expression -> . expression SLASH expression
    (52) al_expression -> . STAR expression
    (53) al_expression -> . AMPERSAND expression
    (54) al_expression -> . expression NOTGREATER expression
    (55) al_expression -> . expression NOTLESS expression
    (56) al_expression -> . expression NOTEQ expression
    (57) al_expression -> . NUMBER
    (58) al_expression -> . OBRACKET al_expression CBRACKET
    (76) function_call -> . NAME OBRACKET call_parameters CBRACKET

    NAME            shift and go to state 137
    SIZEOF          shift and go to state 46
    STAR            shift and go to state 49
    AMPERSAND       shift and go to state 50
    NUMBER          shift and go to state 51
    OBRACKET        shift and go to state 47

    call_parameters                shift and go to state 138
    call_vars                      shift and go to state 139
    vars                           shift and go to state 140
    expression                     shift and go to state 141
    assignment_var                 shift and go to state 57
    variable                       shift and go to state 142
    al_expression                  shift and go to state 44
    function_call                  shift and go to state 45

state 104

    (52) al_expression -> STAR expression .
    (47) al_expression -> expression . PLUS expression
    (48) al_expression -> expression . MINUS expression
    (49) al_expression -> expression . PERCENT expression
    (50) al_expression -> expression . STAR expression
    (51) al_expression -> expression . SLASH expression
    (54) al_expression -> expression . NOTGREATER expression
    (55) al_expression -> expression . NOTLESS expression
    (56) al_expression -> expression . NOTEQ expression

    SEMICOLON       reduce using rule 52 (al_expression -> STAR expression .)
    PLUS            reduce using rule 52 (al_expression -> STAR expression .)
    MINUS           reduce using rule 52 (al_expression -> STAR expression .)
    PERCENT         reduce using rule 52 (al_expression -> STAR expression .)
    STAR            reduce using rule 52 (al_expression -> STAR expression .)
    SLASH           reduce using rule 52 (al_expression -> STAR expression .)
    NOTGREATER      reduce using rule 52 (al_expression -> STAR expression .)
    NOTLESS         reduce using rule 52 (al_expression -> STAR expression .)
    NOTEQ           reduce using rule 52 (al_expression -> STAR expression .)
    CBRACKET        reduce using rule 52 (al_expression -> STAR expression .)
    CSQBRACKET      reduce using rule 52 (al_expression -> STAR expression .)
    COMMA           reduce using rule 52 (al_expression -> STAR expression .)

  ! PLUS            [ shift and go to state 92 ]
  ! MINUS           [ shift and go to state 93 ]
  ! PERCENT         [ shift and go to state 94 ]
  ! STAR            [ shift and go to state 95 ]
  ! SLASH           [ shift and go to state 96 ]
  ! NOTGREATER      [ shift and go to state 97 ]
  ! NOTLESS         [ shift and go to state 98 ]
  ! NOTEQ           [ shift and go to state 99 ]


state 105

    (53) al_expression -> AMPERSAND expression .
    (47) al_expression -> expression . PLUS expression
    (48) al_expression -> expression . MINUS expression
    (49) al_expression -> expression . PERCENT expression
    (50) al_expression -> expression . STAR expression
    (51) al_expression -> expression . SLASH expression
    (54) al_expression -> expression . NOTGREATER expression
    (55) al_expression -> expression . NOTLESS expression
    (56) al_expression -> expression . NOTEQ expression

    SEMICOLON       reduce using rule 53 (al_expression -> AMPERSAND expression .)
    PLUS            reduce using rule 53 (al_expression -> AMPERSAND expression .)
    MINUS           reduce using rule 53 (al_expression -> AMPERSAND expression .)
    PERCENT         reduce using rule 53 (al_expression -> AMPERSAND expression .)
    STAR            reduce using rule 53 (al_expression -> AMPERSAND expression .)
    SLASH           reduce using rule 53 (al_expression -> AMPERSAND expression .)
    NOTGREATER      reduce using rule 53 (al_expression -> AMPERSAND expression .)
    NOTLESS         reduce using rule 53 (al_expression -> AMPERSAND expression .)
    NOTEQ           reduce using rule 53 (al_expression -> AMPERSAND expression .)
    CBRACKET        reduce using rule 53 (al_expression -> AMPERSAND expression .)
    CSQBRACKET      reduce using rule 53 (al_expression -> AMPERSAND expression .)
    COMMA           reduce using rule 53 (al_expression -> AMPERSAND expression .)

  ! PLUS            [ shift and go to state 92 ]
  ! MINUS           [ shift and go to state 93 ]
  ! PERCENT         [ shift and go to state 94 ]
  ! STAR            [ shift and go to state 95 ]
  ! SLASH           [ shift and go to state 96 ]
  ! NOTGREATER      [ shift and go to state 97 ]
  ! NOTLESS         [ shift and go to state 98 ]
  ! NOTEQ           [ shift and go to state 99 ]


state 106

    (72) function -> type funcname OBRACKET . parameters CBRACKET OFBRACKET NL stategroup CFBRACKET
    (73) function -> type funcname OBRACKET . CBRACKET OFBRACKET NL stategroup CFBRACKET
    (82) parameters -> . parameters COMMA parameter
    (83) parameters -> . parameter
    (84) parameter -> . type NAME
    (31) type -> . VALUE
    (32) type -> . CONST VALUE
    (33) type -> . POINTER expr_type
    (34) type -> . CONST POINTER expr_type
    (35) type -> . POINTER CONST expr_type
    (36) type -> . CONST POINTER CONST expr_type
    (37) type -> . ARRAYOF expr_type
    (38) type -> . CONST ARRAYOF expr_type

    CBRACKET        shift and go to state 145
    VALUE           shift and go to state 27
    CONST           shift and go to state 28
    POINTER         shift and go to state 29
    ARRAYOF         shift and go to state 30

    type                           shift and go to state 143
    parameters                     shift and go to state 144
    parameter                      shift and go to state 146

state 107

    (15) vars -> NAME COMMA . vars
    (15) vars -> . NAME COMMA vars
    (16) vars -> . assignment_var COMMA vars
    (17) vars -> . NAME
    (18) vars -> . assignment_var
    (19) assignment_var -> . variable ASSIGNMENT expression
    (27) variable -> . NAME
    (28) variable -> . variable index

    NAME            shift and go to state 147

    vars                           shift and go to state 148
    assignment_var                 shift and go to state 57
    variable                       shift and go to state 59

state 108

    (16) vars -> assignment_var COMMA . vars
    (15) vars -> . NAME COMMA vars
    (16) vars -> . assignment_var COMMA vars
    (17) vars -> . NAME
    (18) vars -> . assignment_var
    (19) assignment_var -> . variable ASSIGNMENT expression
    (27) variable -> . NAME
    (28) variable -> . variable index

    NAME            shift and go to state 147

    assignment_var                 shift and go to state 57
    vars                           shift and go to state 149
    variable                       shift and go to state 59

state 109

    (19) assignment_var -> variable ASSIGNMENT . expression
    (43) expression -> . variable
    (44) expression -> . al_expression
    (45) expression -> . function_call
    (46) expression -> . SIZEOF OBRACKET variable CBRACKET
    (27) variable -> . NAME
    (28) variable -> . variable index
    (47) al_expression -> . expression PLUS expression
    (48) al_expression -> . expression MINUS expression
    (49) al_expression -> . expression PERCENT expression
    (50) al_expression -> . expression STAR expression
    (51) al_expression -> . expression SLASH expression
    (52) al_expression -> . STAR expression
    (53) al_expression -> . AMPERSAND expression
    (54) al_expression -> . expression NOTGREATER expression
    (55) al_expression -> . expression NOTLESS expression
    (56) al_expression -> . expression NOTEQ expression
    (57) al_expression -> . NUMBER
    (58) al_expression -> . OBRACKET al_expression CBRACKET
    (76) function_call -> . NAME OBRACKET call_parameters CBRACKET

    SIZEOF          shift and go to state 46
    NAME            shift and go to state 48
    STAR            shift and go to state 49
    AMPERSAND       shift and go to state 50
    NUMBER          shift and go to state 51
    OBRACKET        shift and go to state 47

    variable                       shift and go to state 43
    expression                     shift and go to state 112
    al_expression                  shift and go to state 44
    function_call                  shift and go to state 45

state 110

    (21) assignment -> pointer ASSIGNMENT expression .
    (47) al_expression -> expression . PLUS expression
    (48) al_expression -> expression . MINUS expression
    (49) al_expression -> expression . PERCENT expression
    (50) al_expression -> expression . STAR expression
    (51) al_expression -> expression . SLASH expression
    (54) al_expression -> expression . NOTGREATER expression
    (55) al_expression -> expression . NOTLESS expression
    (56) al_expression -> expression . NOTEQ expression

    SEMICOLON       reduce using rule 21 (assignment -> pointer ASSIGNMENT expression .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    PERCENT         shift and go to state 94
    STAR            shift and go to state 95
    SLASH           shift and go to state 96
    NOTGREATER      shift and go to state 97
    NOTLESS         shift and go to state 98
    NOTEQ           shift and go to state 99


state 111

    (22) assignment -> variable ASSIGNMENT error .

    SEMICOLON       reduce using rule 22 (assignment -> variable ASSIGNMENT error .)


state 112

    (19) assignment_var -> variable ASSIGNMENT expression .
    (47) al_expression -> expression . PLUS expression
    (48) al_expression -> expression . MINUS expression
    (49) al_expression -> expression . PERCENT expression
    (50) al_expression -> expression . STAR expression
    (51) al_expression -> expression . SLASH expression
    (54) al_expression -> expression . NOTGREATER expression
    (55) al_expression -> expression . NOTLESS expression
    (56) al_expression -> expression . NOTEQ expression

    SEMICOLON       reduce using rule 19 (assignment_var -> variable ASSIGNMENT expression .)
    COMMA           reduce using rule 19 (assignment_var -> variable ASSIGNMENT expression .)
    CBRACKET        reduce using rule 19 (assignment_var -> variable ASSIGNMENT expression .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    PERCENT         shift and go to state 94
    STAR            shift and go to state 95
    SLASH           shift and go to state 96
    NOTGREATER      shift and go to state 97
    NOTLESS         shift and go to state 98
    NOTEQ           shift and go to state 99


state 113

    (29) index -> OSQBRACKET expression . CSQBRACKET index
    (30) index -> OSQBRACKET expression . CSQBRACKET
    (47) al_expression -> expression . PLUS expression
    (48) al_expression -> expression . MINUS expression
    (49) al_expression -> expression . PERCENT expression
    (50) al_expression -> expression . STAR expression
    (51) al_expression -> expression . SLASH expression
    (54) al_expression -> expression . NOTGREATER expression
    (55) al_expression -> expression . NOTLESS expression
    (56) al_expression -> expression . NOTEQ expression

    CSQBRACKET      shift and go to state 150
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    PERCENT         shift and go to state 94
    STAR            shift and go to state 95
    SLASH           shift and go to state 96
    NOTGREATER      shift and go to state 97
    NOTLESS         shift and go to state 98
    NOTEQ           shift and go to state 99


state 114

    (67) while -> WHILE OBRACKET expression . CBRACKET OFBRACKET NL stategroup CFBRACKET
    (47) al_expression -> expression . PLUS expression
    (48) al_expression -> expression . MINUS expression
    (49) al_expression -> expression . PERCENT expression
    (50) al_expression -> expression . STAR expression
    (51) al_expression -> expression . SLASH expression
    (54) al_expression -> expression . NOTGREATER expression
    (55) al_expression -> expression . NOTLESS expression
    (56) al_expression -> expression . NOTEQ expression

    CBRACKET        shift and go to state 151
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    PERCENT         shift and go to state 94
    STAR            shift and go to state 95
    SLASH           shift and go to state 96
    NOTGREATER      shift and go to state 97
    NOTLESS         shift and go to state 98
    NOTEQ           shift and go to state 99


state 115

    (68) zero -> ZERO OBRACKET expression . CBRACKET OFBRACKET NL stategroup CFBRACKET
    (70) zero -> ZERO OBRACKET expression . CBRACKET NL statement
    (47) al_expression -> expression . PLUS expression
    (48) al_expression -> expression . MINUS expression
    (49) al_expression -> expression . PERCENT expression
    (50) al_expression -> expression . STAR expression
    (51) al_expression -> expression . SLASH expression
    (54) al_expression -> expression . NOTGREATER expression
    (55) al_expression -> expression . NOTLESS expression
    (56) al_expression -> expression . NOTEQ expression

    CBRACKET        shift and go to state 152
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    PERCENT         shift and go to state 94
    STAR            shift and go to state 95
    SLASH           shift and go to state 96
    NOTGREATER      shift and go to state 97
    NOTLESS         shift and go to state 98
    NOTEQ           shift and go to state 99


state 116

    (69) zero -> NOTZERO OBRACKET expression . CBRACKET OFBRACKET NL stategroup CFBRACKET
    (71) zero -> NOTZERO OBRACKET expression . CBRACKET NL statement
    (47) al_expression -> expression . PLUS expression
    (48) al_expression -> expression . MINUS expression
    (49) al_expression -> expression . PERCENT expression
    (50) al_expression -> expression . STAR expression
    (51) al_expression -> expression . SLASH expression
    (54) al_expression -> expression . NOTGREATER expression
    (55) al_expression -> expression . NOTLESS expression
    (56) al_expression -> expression . NOTEQ expression

    CBRACKET        shift and go to state 153
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    PERCENT         shift and go to state 94
    STAR            shift and go to state 95
    SLASH           shift and go to state 96
    NOTGREATER      shift and go to state 97
    NOTLESS         shift and go to state 98
    NOTEQ           shift and go to state 99


state 117

    (36) type -> CONST POINTER CONST . expr_type
    (39) expr_type -> .
    (40) expr_type -> . VALUE
    (41) expr_type -> . POINTER expr_type
    (42) expr_type -> . ARRAYOF expr_type

    error           reduce using rule 39 (expr_type -> .)
    NAME            reduce using rule 39 (expr_type -> .)
    MAIN            reduce using rule 39 (expr_type -> .)
    VALUE           shift and go to state 80
    POINTER         shift and go to state 77
    ARRAYOF         shift and go to state 81

    expr_type                      shift and go to state 154

state 118

    (34) type -> CONST POINTER expr_type .

    error           reduce using rule 34 (type -> CONST POINTER expr_type .)
    NAME            reduce using rule 34 (type -> CONST POINTER expr_type .)
    MAIN            reduce using rule 34 (type -> CONST POINTER expr_type .)


state 119

    (38) type -> CONST ARRAYOF expr_type .

    error           reduce using rule 38 (type -> CONST ARRAYOF expr_type .)
    NAME            reduce using rule 38 (type -> CONST ARRAYOF expr_type .)
    MAIN            reduce using rule 38 (type -> CONST ARRAYOF expr_type .)


state 120

    (41) expr_type -> POINTER expr_type .

    error           reduce using rule 41 (expr_type -> POINTER expr_type .)
    NAME            reduce using rule 41 (expr_type -> POINTER expr_type .)
    MAIN            reduce using rule 41 (expr_type -> POINTER expr_type .)


state 121

    (35) type -> POINTER CONST expr_type .

    error           reduce using rule 35 (type -> POINTER CONST expr_type .)
    NAME            reduce using rule 35 (type -> POINTER CONST expr_type .)
    MAIN            reduce using rule 35 (type -> POINTER CONST expr_type .)


state 122

    (42) expr_type -> ARRAYOF expr_type .

    error           reduce using rule 42 (expr_type -> ARRAYOF expr_type .)
    NAME            reduce using rule 42 (expr_type -> ARRAYOF expr_type .)
    MAIN            reduce using rule 42 (expr_type -> ARRAYOF expr_type .)


state 123

    (24) pointer -> STAR OBRACKET expression . CBRACKET
    (47) al_expression -> expression . PLUS expression
    (48) al_expression -> expression . MINUS expression
    (49) al_expression -> expression . PERCENT expression
    (50) al_expression -> expression . STAR expression
    (51) al_expression -> expression . SLASH expression
    (54) al_expression -> expression . NOTGREATER expression
    (55) al_expression -> expression . NOTLESS expression
    (56) al_expression -> expression . NOTEQ expression

    CBRACKET        shift and go to state 155
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    PERCENT         shift and go to state 94
    STAR            shift and go to state 95
    SLASH           shift and go to state 96
    NOTGREATER      shift and go to state 97
    NOTLESS         shift and go to state 98
    NOTEQ           shift and go to state 99


state 124

    (26) pointer -> AMPERSAND OBRACKET expression . CBRACKET
    (47) al_expression -> expression . PLUS expression
    (48) al_expression -> expression . MINUS expression
    (49) al_expression -> expression . PERCENT expression
    (50) al_expression -> expression . STAR expression
    (51) al_expression -> expression . SLASH expression
    (54) al_expression -> expression . NOTGREATER expression
    (55) al_expression -> expression . NOTLESS expression
    (56) al_expression -> expression . NOTEQ expression

    CBRACKET        shift and go to state 156
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    PERCENT         shift and go to state 94
    STAR            shift and go to state 95
    SLASH           shift and go to state 96
    NOTGREATER      shift and go to state 97
    NOTLESS         shift and go to state 98
    NOTEQ           shift and go to state 99


state 125

    (66) while -> while FINISH OFBRACKET NL . stategroup CFBRACKET
    (2) stategroup -> . stategroup statement
    (3) stategroup -> . statement
    (4) statement -> . declaration SEMICOLON NL
    (5) statement -> . assignment SEMICOLON NL
    (6) statement -> . while NL
    (7) statement -> . zero NL
    (8) statement -> . function NL
    (9) statement -> . operator SEMICOLON NL
    (10) statement -> . RETURN expression SEMICOLON NL
    (11) statement -> . empty NL
    (12) statement -> . error
    (13) declaration -> . type vars
    (14) declaration -> . type error
    (20) assignment -> . assignment_var
    (21) assignment -> . pointer ASSIGNMENT expression
    (22) assignment -> . variable ASSIGNMENT error
    (66) while -> . while FINISH OFBRACKET NL stategroup CFBRACKET
    (67) while -> . WHILE OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (68) zero -> . ZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (69) zero -> . NOTZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (70) zero -> . ZERO OBRACKET expression CBRACKET NL statement
    (71) zero -> . NOTZERO OBRACKET expression CBRACKET NL statement
    (72) function -> . type funcname OBRACKET parameters CBRACKET OFBRACKET NL stategroup CFBRACKET
    (73) function -> . type funcname OBRACKET CBRACKET OFBRACKET NL stategroup CFBRACKET
    (81) function -> . type error
    (59) operator -> . TOP SEMICOLON
    (60) operator -> . BOTTOM SEMICOLON
    (61) operator -> . LEFT SEMICOLON
    (62) operator -> . RIGHT SEMICOLON
    (63) operator -> . PORTAL SEMICOLON
    (64) operator -> . TELEPORT SEMICOLON
    (65) operator -> . BREAK SEMICOLON
    (85) empty -> .
    (31) type -> . VALUE
    (32) type -> . CONST VALUE
    (33) type -> . POINTER expr_type
    (34) type -> . CONST POINTER expr_type
    (35) type -> . POINTER CONST expr_type
    (36) type -> . CONST POINTER CONST expr_type
    (37) type -> . ARRAYOF expr_type
    (38) type -> . CONST ARRAYOF expr_type
    (19) assignment_var -> . variable ASSIGNMENT expression
    (23) pointer -> . STAR NAME
    (24) pointer -> . STAR OBRACKET expression CBRACKET
    (25) pointer -> . AMPERSAND NAME
    (26) pointer -> . AMPERSAND OBRACKET expression CBRACKET
    (27) variable -> . NAME
    (28) variable -> . variable index

    RETURN          shift and go to state 10
    error           shift and go to state 12
    WHILE           shift and go to state 17
    ZERO            shift and go to state 18
    NOTZERO         shift and go to state 19
    TOP             shift and go to state 20
    BOTTOM          shift and go to state 21
    LEFT            shift and go to state 22
    RIGHT           shift and go to state 23
    PORTAL          shift and go to state 24
    TELEPORT        shift and go to state 25
    BREAK           shift and go to state 26
    NL              reduce using rule 85 (empty -> .)
    VALUE           shift and go to state 27
    CONST           shift and go to state 28
    POINTER         shift and go to state 29
    ARRAYOF         shift and go to state 30
    STAR            shift and go to state 31
    AMPERSAND       shift and go to state 33
    NAME            shift and go to state 32

    while                          shift and go to state 6
    stategroup                     shift and go to state 157
    statement                      shift and go to state 3
    declaration                    shift and go to state 4
    assignment                     shift and go to state 5
    zero                           shift and go to state 7
    function                       shift and go to state 8
    operator                       shift and go to state 9
    empty                          shift and go to state 11
    type                           shift and go to state 13
    assignment_var                 shift and go to state 14
    pointer                        shift and go to state 15
    variable                       shift and go to state 16

state 126

    (10) statement -> RETURN expression SEMICOLON NL .

    RETURN          reduce using rule 10 (statement -> RETURN expression SEMICOLON NL .)
    error           reduce using rule 10 (statement -> RETURN expression SEMICOLON NL .)
    WHILE           reduce using rule 10 (statement -> RETURN expression SEMICOLON NL .)
    ZERO            reduce using rule 10 (statement -> RETURN expression SEMICOLON NL .)
    NOTZERO         reduce using rule 10 (statement -> RETURN expression SEMICOLON NL .)
    TOP             reduce using rule 10 (statement -> RETURN expression SEMICOLON NL .)
    BOTTOM          reduce using rule 10 (statement -> RETURN expression SEMICOLON NL .)
    LEFT            reduce using rule 10 (statement -> RETURN expression SEMICOLON NL .)
    RIGHT           reduce using rule 10 (statement -> RETURN expression SEMICOLON NL .)
    PORTAL          reduce using rule 10 (statement -> RETURN expression SEMICOLON NL .)
    TELEPORT        reduce using rule 10 (statement -> RETURN expression SEMICOLON NL .)
    BREAK           reduce using rule 10 (statement -> RETURN expression SEMICOLON NL .)
    VALUE           reduce using rule 10 (statement -> RETURN expression SEMICOLON NL .)
    CONST           reduce using rule 10 (statement -> RETURN expression SEMICOLON NL .)
    POINTER         reduce using rule 10 (statement -> RETURN expression SEMICOLON NL .)
    ARRAYOF         reduce using rule 10 (statement -> RETURN expression SEMICOLON NL .)
    STAR            reduce using rule 10 (statement -> RETURN expression SEMICOLON NL .)
    AMPERSAND       reduce using rule 10 (statement -> RETURN expression SEMICOLON NL .)
    NAME            reduce using rule 10 (statement -> RETURN expression SEMICOLON NL .)
    NL              reduce using rule 10 (statement -> RETURN expression SEMICOLON NL .)
    $end            reduce using rule 10 (statement -> RETURN expression SEMICOLON NL .)
    CFBRACKET       reduce using rule 10 (statement -> RETURN expression SEMICOLON NL .)


state 127

    (47) al_expression -> expression PLUS expression .
    (47) al_expression -> expression . PLUS expression
    (48) al_expression -> expression . MINUS expression
    (49) al_expression -> expression . PERCENT expression
    (50) al_expression -> expression . STAR expression
    (51) al_expression -> expression . SLASH expression
    (54) al_expression -> expression . NOTGREATER expression
    (55) al_expression -> expression . NOTLESS expression
    (56) al_expression -> expression . NOTEQ expression

    SEMICOLON       reduce using rule 47 (al_expression -> expression PLUS expression .)
    PLUS            reduce using rule 47 (al_expression -> expression PLUS expression .)
    MINUS           reduce using rule 47 (al_expression -> expression PLUS expression .)
    NOTGREATER      reduce using rule 47 (al_expression -> expression PLUS expression .)
    NOTLESS         reduce using rule 47 (al_expression -> expression PLUS expression .)
    NOTEQ           reduce using rule 47 (al_expression -> expression PLUS expression .)
    CBRACKET        reduce using rule 47 (al_expression -> expression PLUS expression .)
    CSQBRACKET      reduce using rule 47 (al_expression -> expression PLUS expression .)
    COMMA           reduce using rule 47 (al_expression -> expression PLUS expression .)
    PERCENT         shift and go to state 94
    STAR            shift and go to state 95
    SLASH           shift and go to state 96

  ! PERCENT         [ reduce using rule 47 (al_expression -> expression PLUS expression .) ]
  ! STAR            [ reduce using rule 47 (al_expression -> expression PLUS expression .) ]
  ! SLASH           [ reduce using rule 47 (al_expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 92 ]
  ! MINUS           [ shift and go to state 93 ]
  ! NOTGREATER      [ shift and go to state 97 ]
  ! NOTLESS         [ shift and go to state 98 ]
  ! NOTEQ           [ shift and go to state 99 ]


state 128

    (48) al_expression -> expression MINUS expression .
    (47) al_expression -> expression . PLUS expression
    (48) al_expression -> expression . MINUS expression
    (49) al_expression -> expression . PERCENT expression
    (50) al_expression -> expression . STAR expression
    (51) al_expression -> expression . SLASH expression
    (54) al_expression -> expression . NOTGREATER expression
    (55) al_expression -> expression . NOTLESS expression
    (56) al_expression -> expression . NOTEQ expression

    SEMICOLON       reduce using rule 48 (al_expression -> expression MINUS expression .)
    PLUS            reduce using rule 48 (al_expression -> expression MINUS expression .)
    MINUS           reduce using rule 48 (al_expression -> expression MINUS expression .)
    NOTGREATER      reduce using rule 48 (al_expression -> expression MINUS expression .)
    NOTLESS         reduce using rule 48 (al_expression -> expression MINUS expression .)
    NOTEQ           reduce using rule 48 (al_expression -> expression MINUS expression .)
    CBRACKET        reduce using rule 48 (al_expression -> expression MINUS expression .)
    CSQBRACKET      reduce using rule 48 (al_expression -> expression MINUS expression .)
    COMMA           reduce using rule 48 (al_expression -> expression MINUS expression .)
    PERCENT         shift and go to state 94
    STAR            shift and go to state 95
    SLASH           shift and go to state 96

  ! PERCENT         [ reduce using rule 48 (al_expression -> expression MINUS expression .) ]
  ! STAR            [ reduce using rule 48 (al_expression -> expression MINUS expression .) ]
  ! SLASH           [ reduce using rule 48 (al_expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 92 ]
  ! MINUS           [ shift and go to state 93 ]
  ! NOTGREATER      [ shift and go to state 97 ]
  ! NOTLESS         [ shift and go to state 98 ]
  ! NOTEQ           [ shift and go to state 99 ]


state 129

    (49) al_expression -> expression PERCENT expression .
    (47) al_expression -> expression . PLUS expression
    (48) al_expression -> expression . MINUS expression
    (49) al_expression -> expression . PERCENT expression
    (50) al_expression -> expression . STAR expression
    (51) al_expression -> expression . SLASH expression
    (54) al_expression -> expression . NOTGREATER expression
    (55) al_expression -> expression . NOTLESS expression
    (56) al_expression -> expression . NOTEQ expression

    SEMICOLON       reduce using rule 49 (al_expression -> expression PERCENT expression .)
    PLUS            reduce using rule 49 (al_expression -> expression PERCENT expression .)
    MINUS           reduce using rule 49 (al_expression -> expression PERCENT expression .)
    PERCENT         reduce using rule 49 (al_expression -> expression PERCENT expression .)
    STAR            reduce using rule 49 (al_expression -> expression PERCENT expression .)
    SLASH           reduce using rule 49 (al_expression -> expression PERCENT expression .)
    NOTGREATER      reduce using rule 49 (al_expression -> expression PERCENT expression .)
    NOTLESS         reduce using rule 49 (al_expression -> expression PERCENT expression .)
    NOTEQ           reduce using rule 49 (al_expression -> expression PERCENT expression .)
    CBRACKET        reduce using rule 49 (al_expression -> expression PERCENT expression .)
    CSQBRACKET      reduce using rule 49 (al_expression -> expression PERCENT expression .)
    COMMA           reduce using rule 49 (al_expression -> expression PERCENT expression .)

  ! PLUS            [ shift and go to state 92 ]
  ! MINUS           [ shift and go to state 93 ]
  ! PERCENT         [ shift and go to state 94 ]
  ! STAR            [ shift and go to state 95 ]
  ! SLASH           [ shift and go to state 96 ]
  ! NOTGREATER      [ shift and go to state 97 ]
  ! NOTLESS         [ shift and go to state 98 ]
  ! NOTEQ           [ shift and go to state 99 ]


state 130

    (50) al_expression -> expression STAR expression .
    (47) al_expression -> expression . PLUS expression
    (48) al_expression -> expression . MINUS expression
    (49) al_expression -> expression . PERCENT expression
    (50) al_expression -> expression . STAR expression
    (51) al_expression -> expression . SLASH expression
    (54) al_expression -> expression . NOTGREATER expression
    (55) al_expression -> expression . NOTLESS expression
    (56) al_expression -> expression . NOTEQ expression

    SEMICOLON       reduce using rule 50 (al_expression -> expression STAR expression .)
    PLUS            reduce using rule 50 (al_expression -> expression STAR expression .)
    MINUS           reduce using rule 50 (al_expression -> expression STAR expression .)
    PERCENT         reduce using rule 50 (al_expression -> expression STAR expression .)
    STAR            reduce using rule 50 (al_expression -> expression STAR expression .)
    SLASH           reduce using rule 50 (al_expression -> expression STAR expression .)
    NOTGREATER      reduce using rule 50 (al_expression -> expression STAR expression .)
    NOTLESS         reduce using rule 50 (al_expression -> expression STAR expression .)
    NOTEQ           reduce using rule 50 (al_expression -> expression STAR expression .)
    CBRACKET        reduce using rule 50 (al_expression -> expression STAR expression .)
    CSQBRACKET      reduce using rule 50 (al_expression -> expression STAR expression .)
    COMMA           reduce using rule 50 (al_expression -> expression STAR expression .)

  ! PLUS            [ shift and go to state 92 ]
  ! MINUS           [ shift and go to state 93 ]
  ! PERCENT         [ shift and go to state 94 ]
  ! STAR            [ shift and go to state 95 ]
  ! SLASH           [ shift and go to state 96 ]
  ! NOTGREATER      [ shift and go to state 97 ]
  ! NOTLESS         [ shift and go to state 98 ]
  ! NOTEQ           [ shift and go to state 99 ]


state 131

    (51) al_expression -> expression SLASH expression .
    (47) al_expression -> expression . PLUS expression
    (48) al_expression -> expression . MINUS expression
    (49) al_expression -> expression . PERCENT expression
    (50) al_expression -> expression . STAR expression
    (51) al_expression -> expression . SLASH expression
    (54) al_expression -> expression . NOTGREATER expression
    (55) al_expression -> expression . NOTLESS expression
    (56) al_expression -> expression . NOTEQ expression

    SEMICOLON       reduce using rule 51 (al_expression -> expression SLASH expression .)
    PLUS            reduce using rule 51 (al_expression -> expression SLASH expression .)
    MINUS           reduce using rule 51 (al_expression -> expression SLASH expression .)
    PERCENT         reduce using rule 51 (al_expression -> expression SLASH expression .)
    STAR            reduce using rule 51 (al_expression -> expression SLASH expression .)
    SLASH           reduce using rule 51 (al_expression -> expression SLASH expression .)
    NOTGREATER      reduce using rule 51 (al_expression -> expression SLASH expression .)
    NOTLESS         reduce using rule 51 (al_expression -> expression SLASH expression .)
    NOTEQ           reduce using rule 51 (al_expression -> expression SLASH expression .)
    CBRACKET        reduce using rule 51 (al_expression -> expression SLASH expression .)
    CSQBRACKET      reduce using rule 51 (al_expression -> expression SLASH expression .)
    COMMA           reduce using rule 51 (al_expression -> expression SLASH expression .)

  ! PLUS            [ shift and go to state 92 ]
  ! MINUS           [ shift and go to state 93 ]
  ! PERCENT         [ shift and go to state 94 ]
  ! STAR            [ shift and go to state 95 ]
  ! SLASH           [ shift and go to state 96 ]
  ! NOTGREATER      [ shift and go to state 97 ]
  ! NOTLESS         [ shift and go to state 98 ]
  ! NOTEQ           [ shift and go to state 99 ]


state 132

    (54) al_expression -> expression NOTGREATER expression .
    (47) al_expression -> expression . PLUS expression
    (48) al_expression -> expression . MINUS expression
    (49) al_expression -> expression . PERCENT expression
    (50) al_expression -> expression . STAR expression
    (51) al_expression -> expression . SLASH expression
    (54) al_expression -> expression . NOTGREATER expression
    (55) al_expression -> expression . NOTLESS expression
    (56) al_expression -> expression . NOTEQ expression

    SEMICOLON       reduce using rule 54 (al_expression -> expression NOTGREATER expression .)
    NOTGREATER      reduce using rule 54 (al_expression -> expression NOTGREATER expression .)
    NOTLESS         reduce using rule 54 (al_expression -> expression NOTGREATER expression .)
    NOTEQ           reduce using rule 54 (al_expression -> expression NOTGREATER expression .)
    CBRACKET        reduce using rule 54 (al_expression -> expression NOTGREATER expression .)
    CSQBRACKET      reduce using rule 54 (al_expression -> expression NOTGREATER expression .)
    COMMA           reduce using rule 54 (al_expression -> expression NOTGREATER expression .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    PERCENT         shift and go to state 94
    STAR            shift and go to state 95
    SLASH           shift and go to state 96

  ! PLUS            [ reduce using rule 54 (al_expression -> expression NOTGREATER expression .) ]
  ! MINUS           [ reduce using rule 54 (al_expression -> expression NOTGREATER expression .) ]
  ! PERCENT         [ reduce using rule 54 (al_expression -> expression NOTGREATER expression .) ]
  ! STAR            [ reduce using rule 54 (al_expression -> expression NOTGREATER expression .) ]
  ! SLASH           [ reduce using rule 54 (al_expression -> expression NOTGREATER expression .) ]
  ! NOTGREATER      [ shift and go to state 97 ]
  ! NOTLESS         [ shift and go to state 98 ]
  ! NOTEQ           [ shift and go to state 99 ]


state 133

    (55) al_expression -> expression NOTLESS expression .
    (47) al_expression -> expression . PLUS expression
    (48) al_expression -> expression . MINUS expression
    (49) al_expression -> expression . PERCENT expression
    (50) al_expression -> expression . STAR expression
    (51) al_expression -> expression . SLASH expression
    (54) al_expression -> expression . NOTGREATER expression
    (55) al_expression -> expression . NOTLESS expression
    (56) al_expression -> expression . NOTEQ expression

    SEMICOLON       reduce using rule 55 (al_expression -> expression NOTLESS expression .)
    NOTGREATER      reduce using rule 55 (al_expression -> expression NOTLESS expression .)
    NOTLESS         reduce using rule 55 (al_expression -> expression NOTLESS expression .)
    NOTEQ           reduce using rule 55 (al_expression -> expression NOTLESS expression .)
    CBRACKET        reduce using rule 55 (al_expression -> expression NOTLESS expression .)
    CSQBRACKET      reduce using rule 55 (al_expression -> expression NOTLESS expression .)
    COMMA           reduce using rule 55 (al_expression -> expression NOTLESS expression .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    PERCENT         shift and go to state 94
    STAR            shift and go to state 95
    SLASH           shift and go to state 96

  ! PLUS            [ reduce using rule 55 (al_expression -> expression NOTLESS expression .) ]
  ! MINUS           [ reduce using rule 55 (al_expression -> expression NOTLESS expression .) ]
  ! PERCENT         [ reduce using rule 55 (al_expression -> expression NOTLESS expression .) ]
  ! STAR            [ reduce using rule 55 (al_expression -> expression NOTLESS expression .) ]
  ! SLASH           [ reduce using rule 55 (al_expression -> expression NOTLESS expression .) ]
  ! NOTGREATER      [ shift and go to state 97 ]
  ! NOTLESS         [ shift and go to state 98 ]
  ! NOTEQ           [ shift and go to state 99 ]


state 134

    (56) al_expression -> expression NOTEQ expression .
    (47) al_expression -> expression . PLUS expression
    (48) al_expression -> expression . MINUS expression
    (49) al_expression -> expression . PERCENT expression
    (50) al_expression -> expression . STAR expression
    (51) al_expression -> expression . SLASH expression
    (54) al_expression -> expression . NOTGREATER expression
    (55) al_expression -> expression . NOTLESS expression
    (56) al_expression -> expression . NOTEQ expression

    SEMICOLON       reduce using rule 56 (al_expression -> expression NOTEQ expression .)
    NOTGREATER      reduce using rule 56 (al_expression -> expression NOTEQ expression .)
    NOTLESS         reduce using rule 56 (al_expression -> expression NOTEQ expression .)
    NOTEQ           reduce using rule 56 (al_expression -> expression NOTEQ expression .)
    CBRACKET        reduce using rule 56 (al_expression -> expression NOTEQ expression .)
    CSQBRACKET      reduce using rule 56 (al_expression -> expression NOTEQ expression .)
    COMMA           reduce using rule 56 (al_expression -> expression NOTEQ expression .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    PERCENT         shift and go to state 94
    STAR            shift and go to state 95
    SLASH           shift and go to state 96

  ! PLUS            [ reduce using rule 56 (al_expression -> expression NOTEQ expression .) ]
  ! MINUS           [ reduce using rule 56 (al_expression -> expression NOTEQ expression .) ]
  ! PERCENT         [ reduce using rule 56 (al_expression -> expression NOTEQ expression .) ]
  ! STAR            [ reduce using rule 56 (al_expression -> expression NOTEQ expression .) ]
  ! SLASH           [ reduce using rule 56 (al_expression -> expression NOTEQ expression .) ]
  ! NOTGREATER      [ shift and go to state 97 ]
  ! NOTLESS         [ shift and go to state 98 ]
  ! NOTEQ           [ shift and go to state 99 ]


state 135

    (46) expression -> SIZEOF OBRACKET variable . CBRACKET
    (28) variable -> variable . index
    (29) index -> . OSQBRACKET expression CSQBRACKET index
    (30) index -> . OSQBRACKET expression CSQBRACKET

    CBRACKET        shift and go to state 158
    OSQBRACKET      shift and go to state 63

    index                          shift and go to state 62

state 136

    (58) al_expression -> OBRACKET al_expression CBRACKET .

    SEMICOLON       reduce using rule 58 (al_expression -> OBRACKET al_expression CBRACKET .)
    PLUS            reduce using rule 58 (al_expression -> OBRACKET al_expression CBRACKET .)
    MINUS           reduce using rule 58 (al_expression -> OBRACKET al_expression CBRACKET .)
    PERCENT         reduce using rule 58 (al_expression -> OBRACKET al_expression CBRACKET .)
    STAR            reduce using rule 58 (al_expression -> OBRACKET al_expression CBRACKET .)
    SLASH           reduce using rule 58 (al_expression -> OBRACKET al_expression CBRACKET .)
    NOTGREATER      reduce using rule 58 (al_expression -> OBRACKET al_expression CBRACKET .)
    NOTLESS         reduce using rule 58 (al_expression -> OBRACKET al_expression CBRACKET .)
    NOTEQ           reduce using rule 58 (al_expression -> OBRACKET al_expression CBRACKET .)
    CBRACKET        reduce using rule 58 (al_expression -> OBRACKET al_expression CBRACKET .)
    CSQBRACKET      reduce using rule 58 (al_expression -> OBRACKET al_expression CBRACKET .)
    COMMA           reduce using rule 58 (al_expression -> OBRACKET al_expression CBRACKET .)


state 137

    (15) vars -> NAME . COMMA vars
    (17) vars -> NAME .
    (27) variable -> NAME .
    (76) function_call -> NAME . OBRACKET call_parameters CBRACKET

  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for CBRACKET resolved using rule 17 (vars -> NAME .)
  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 107
    CBRACKET        reduce using rule 17 (vars -> NAME .)
    ASSIGNMENT      reduce using rule 27 (variable -> NAME .)
    OSQBRACKET      reduce using rule 27 (variable -> NAME .)
    PLUS            reduce using rule 27 (variable -> NAME .)
    MINUS           reduce using rule 27 (variable -> NAME .)
    PERCENT         reduce using rule 27 (variable -> NAME .)
    STAR            reduce using rule 27 (variable -> NAME .)
    SLASH           reduce using rule 27 (variable -> NAME .)
    NOTGREATER      reduce using rule 27 (variable -> NAME .)
    NOTLESS         reduce using rule 27 (variable -> NAME .)
    NOTEQ           reduce using rule 27 (variable -> NAME .)
    OBRACKET        shift and go to state 103

  ! COMMA           [ reduce using rule 17 (vars -> NAME .) ]
  ! CBRACKET        [ reduce using rule 27 (variable -> NAME .) ]
  ! COMMA           [ reduce using rule 27 (variable -> NAME .) ]


state 138

    (76) function_call -> NAME OBRACKET call_parameters . CBRACKET
    (77) call_parameters -> call_parameters . COMMA call_vars

    CBRACKET        shift and go to state 159
    COMMA           shift and go to state 160


state 139

    (78) call_parameters -> call_vars .

    CBRACKET        reduce using rule 78 (call_parameters -> call_vars .)
    COMMA           reduce using rule 78 (call_parameters -> call_vars .)


state 140

    (79) call_vars -> vars .

    CBRACKET        reduce using rule 79 (call_vars -> vars .)
    COMMA           reduce using rule 79 (call_vars -> vars .)


state 141

    (80) call_vars -> expression .
    (47) al_expression -> expression . PLUS expression
    (48) al_expression -> expression . MINUS expression
    (49) al_expression -> expression . PERCENT expression
    (50) al_expression -> expression . STAR expression
    (51) al_expression -> expression . SLASH expression
    (54) al_expression -> expression . NOTGREATER expression
    (55) al_expression -> expression . NOTLESS expression
    (56) al_expression -> expression . NOTEQ expression

    CBRACKET        reduce using rule 80 (call_vars -> expression .)
    COMMA           reduce using rule 80 (call_vars -> expression .)
    PLUS            shift and go to state 92
    MINUS           shift and go to state 93
    PERCENT         shift and go to state 94
    STAR            shift and go to state 95
    SLASH           shift and go to state 96
    NOTGREATER      shift and go to state 97
    NOTLESS         shift and go to state 98
    NOTEQ           shift and go to state 99


state 142

    (43) expression -> variable .
    (19) assignment_var -> variable . ASSIGNMENT expression
    (28) variable -> variable . index
    (29) index -> . OSQBRACKET expression CSQBRACKET index
    (30) index -> . OSQBRACKET expression CSQBRACKET

    PLUS            reduce using rule 43 (expression -> variable .)
    MINUS           reduce using rule 43 (expression -> variable .)
    PERCENT         reduce using rule 43 (expression -> variable .)
    STAR            reduce using rule 43 (expression -> variable .)
    SLASH           reduce using rule 43 (expression -> variable .)
    NOTGREATER      reduce using rule 43 (expression -> variable .)
    NOTLESS         reduce using rule 43 (expression -> variable .)
    NOTEQ           reduce using rule 43 (expression -> variable .)
    CBRACKET        reduce using rule 43 (expression -> variable .)
    COMMA           reduce using rule 43 (expression -> variable .)
    ASSIGNMENT      shift and go to state 109
    OSQBRACKET      shift and go to state 63

    index                          shift and go to state 62

state 143

    (84) parameter -> type . NAME

    NAME            shift and go to state 161


state 144

    (72) function -> type funcname OBRACKET parameters . CBRACKET OFBRACKET NL stategroup CFBRACKET
    (82) parameters -> parameters . COMMA parameter

    CBRACKET        shift and go to state 162
    COMMA           shift and go to state 163


state 145

    (73) function -> type funcname OBRACKET CBRACKET . OFBRACKET NL stategroup CFBRACKET

    OFBRACKET       shift and go to state 164


state 146

    (83) parameters -> parameter .

    CBRACKET        reduce using rule 83 (parameters -> parameter .)
    COMMA           reduce using rule 83 (parameters -> parameter .)


state 147

    (15) vars -> NAME . COMMA vars
    (17) vars -> NAME .
    (27) variable -> NAME .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 107
    SEMICOLON       reduce using rule 17 (vars -> NAME .)
    CBRACKET        reduce using rule 17 (vars -> NAME .)
    ASSIGNMENT      reduce using rule 27 (variable -> NAME .)
    OSQBRACKET      reduce using rule 27 (variable -> NAME .)

  ! COMMA           [ reduce using rule 17 (vars -> NAME .) ]


state 148

    (15) vars -> NAME COMMA vars .

    SEMICOLON       reduce using rule 15 (vars -> NAME COMMA vars .)
    CBRACKET        reduce using rule 15 (vars -> NAME COMMA vars .)
    COMMA           reduce using rule 15 (vars -> NAME COMMA vars .)


state 149

    (16) vars -> assignment_var COMMA vars .

    SEMICOLON       reduce using rule 16 (vars -> assignment_var COMMA vars .)
    CBRACKET        reduce using rule 16 (vars -> assignment_var COMMA vars .)
    COMMA           reduce using rule 16 (vars -> assignment_var COMMA vars .)


state 150

    (29) index -> OSQBRACKET expression CSQBRACKET . index
    (30) index -> OSQBRACKET expression CSQBRACKET .
    (29) index -> . OSQBRACKET expression CSQBRACKET index
    (30) index -> . OSQBRACKET expression CSQBRACKET

  ! shift/reduce conflict for OSQBRACKET resolved as shift
    ASSIGNMENT      reduce using rule 30 (index -> OSQBRACKET expression CSQBRACKET .)
    SEMICOLON       reduce using rule 30 (index -> OSQBRACKET expression CSQBRACKET .)
    PLUS            reduce using rule 30 (index -> OSQBRACKET expression CSQBRACKET .)
    MINUS           reduce using rule 30 (index -> OSQBRACKET expression CSQBRACKET .)
    PERCENT         reduce using rule 30 (index -> OSQBRACKET expression CSQBRACKET .)
    STAR            reduce using rule 30 (index -> OSQBRACKET expression CSQBRACKET .)
    SLASH           reduce using rule 30 (index -> OSQBRACKET expression CSQBRACKET .)
    NOTGREATER      reduce using rule 30 (index -> OSQBRACKET expression CSQBRACKET .)
    NOTLESS         reduce using rule 30 (index -> OSQBRACKET expression CSQBRACKET .)
    NOTEQ           reduce using rule 30 (index -> OSQBRACKET expression CSQBRACKET .)
    CBRACKET        reduce using rule 30 (index -> OSQBRACKET expression CSQBRACKET .)
    CSQBRACKET      reduce using rule 30 (index -> OSQBRACKET expression CSQBRACKET .)
    COMMA           reduce using rule 30 (index -> OSQBRACKET expression CSQBRACKET .)
    OSQBRACKET      shift and go to state 63

  ! OSQBRACKET      [ reduce using rule 30 (index -> OSQBRACKET expression CSQBRACKET .) ]

    index                          shift and go to state 165

state 151

    (67) while -> WHILE OBRACKET expression CBRACKET . OFBRACKET NL stategroup CFBRACKET

    OFBRACKET       shift and go to state 166


state 152

    (68) zero -> ZERO OBRACKET expression CBRACKET . OFBRACKET NL stategroup CFBRACKET
    (70) zero -> ZERO OBRACKET expression CBRACKET . NL statement

    OFBRACKET       shift and go to state 167
    NL              shift and go to state 168


state 153

    (69) zero -> NOTZERO OBRACKET expression CBRACKET . OFBRACKET NL stategroup CFBRACKET
    (71) zero -> NOTZERO OBRACKET expression CBRACKET . NL statement

    OFBRACKET       shift and go to state 169
    NL              shift and go to state 170


state 154

    (36) type -> CONST POINTER CONST expr_type .

    error           reduce using rule 36 (type -> CONST POINTER CONST expr_type .)
    NAME            reduce using rule 36 (type -> CONST POINTER CONST expr_type .)
    MAIN            reduce using rule 36 (type -> CONST POINTER CONST expr_type .)


state 155

    (24) pointer -> STAR OBRACKET expression CBRACKET .

    ASSIGNMENT      reduce using rule 24 (pointer -> STAR OBRACKET expression CBRACKET .)


state 156

    (26) pointer -> AMPERSAND OBRACKET expression CBRACKET .

    ASSIGNMENT      reduce using rule 26 (pointer -> AMPERSAND OBRACKET expression CBRACKET .)


state 157

    (66) while -> while FINISH OFBRACKET NL stategroup . CFBRACKET
    (2) stategroup -> stategroup . statement
    (4) statement -> . declaration SEMICOLON NL
    (5) statement -> . assignment SEMICOLON NL
    (6) statement -> . while NL
    (7) statement -> . zero NL
    (8) statement -> . function NL
    (9) statement -> . operator SEMICOLON NL
    (10) statement -> . RETURN expression SEMICOLON NL
    (11) statement -> . empty NL
    (12) statement -> . error
    (13) declaration -> . type vars
    (14) declaration -> . type error
    (20) assignment -> . assignment_var
    (21) assignment -> . pointer ASSIGNMENT expression
    (22) assignment -> . variable ASSIGNMENT error
    (66) while -> . while FINISH OFBRACKET NL stategroup CFBRACKET
    (67) while -> . WHILE OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (68) zero -> . ZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (69) zero -> . NOTZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (70) zero -> . ZERO OBRACKET expression CBRACKET NL statement
    (71) zero -> . NOTZERO OBRACKET expression CBRACKET NL statement
    (72) function -> . type funcname OBRACKET parameters CBRACKET OFBRACKET NL stategroup CFBRACKET
    (73) function -> . type funcname OBRACKET CBRACKET OFBRACKET NL stategroup CFBRACKET
    (81) function -> . type error
    (59) operator -> . TOP SEMICOLON
    (60) operator -> . BOTTOM SEMICOLON
    (61) operator -> . LEFT SEMICOLON
    (62) operator -> . RIGHT SEMICOLON
    (63) operator -> . PORTAL SEMICOLON
    (64) operator -> . TELEPORT SEMICOLON
    (65) operator -> . BREAK SEMICOLON
    (85) empty -> .
    (31) type -> . VALUE
    (32) type -> . CONST VALUE
    (33) type -> . POINTER expr_type
    (34) type -> . CONST POINTER expr_type
    (35) type -> . POINTER CONST expr_type
    (36) type -> . CONST POINTER CONST expr_type
    (37) type -> . ARRAYOF expr_type
    (38) type -> . CONST ARRAYOF expr_type
    (19) assignment_var -> . variable ASSIGNMENT expression
    (23) pointer -> . STAR NAME
    (24) pointer -> . STAR OBRACKET expression CBRACKET
    (25) pointer -> . AMPERSAND NAME
    (26) pointer -> . AMPERSAND OBRACKET expression CBRACKET
    (27) variable -> . NAME
    (28) variable -> . variable index

    CFBRACKET       shift and go to state 171
    RETURN          shift and go to state 10
    error           shift and go to state 12
    WHILE           shift and go to state 17
    ZERO            shift and go to state 18
    NOTZERO         shift and go to state 19
    TOP             shift and go to state 20
    BOTTOM          shift and go to state 21
    LEFT            shift and go to state 22
    RIGHT           shift and go to state 23
    PORTAL          shift and go to state 24
    TELEPORT        shift and go to state 25
    BREAK           shift and go to state 26
    NL              reduce using rule 85 (empty -> .)
    VALUE           shift and go to state 27
    CONST           shift and go to state 28
    POINTER         shift and go to state 29
    ARRAYOF         shift and go to state 30
    STAR            shift and go to state 31
    AMPERSAND       shift and go to state 33
    NAME            shift and go to state 32

    while                          shift and go to state 6
    statement                      shift and go to state 34
    declaration                    shift and go to state 4
    assignment                     shift and go to state 5
    zero                           shift and go to state 7
    function                       shift and go to state 8
    operator                       shift and go to state 9
    empty                          shift and go to state 11
    type                           shift and go to state 13
    assignment_var                 shift and go to state 14
    pointer                        shift and go to state 15
    variable                       shift and go to state 16

state 158

    (46) expression -> SIZEOF OBRACKET variable CBRACKET .

    SEMICOLON       reduce using rule 46 (expression -> SIZEOF OBRACKET variable CBRACKET .)
    PLUS            reduce using rule 46 (expression -> SIZEOF OBRACKET variable CBRACKET .)
    MINUS           reduce using rule 46 (expression -> SIZEOF OBRACKET variable CBRACKET .)
    PERCENT         reduce using rule 46 (expression -> SIZEOF OBRACKET variable CBRACKET .)
    STAR            reduce using rule 46 (expression -> SIZEOF OBRACKET variable CBRACKET .)
    SLASH           reduce using rule 46 (expression -> SIZEOF OBRACKET variable CBRACKET .)
    NOTGREATER      reduce using rule 46 (expression -> SIZEOF OBRACKET variable CBRACKET .)
    NOTLESS         reduce using rule 46 (expression -> SIZEOF OBRACKET variable CBRACKET .)
    NOTEQ           reduce using rule 46 (expression -> SIZEOF OBRACKET variable CBRACKET .)
    CBRACKET        reduce using rule 46 (expression -> SIZEOF OBRACKET variable CBRACKET .)
    CSQBRACKET      reduce using rule 46 (expression -> SIZEOF OBRACKET variable CBRACKET .)
    COMMA           reduce using rule 46 (expression -> SIZEOF OBRACKET variable CBRACKET .)


state 159

    (76) function_call -> NAME OBRACKET call_parameters CBRACKET .

    SEMICOLON       reduce using rule 76 (function_call -> NAME OBRACKET call_parameters CBRACKET .)
    PLUS            reduce using rule 76 (function_call -> NAME OBRACKET call_parameters CBRACKET .)
    MINUS           reduce using rule 76 (function_call -> NAME OBRACKET call_parameters CBRACKET .)
    PERCENT         reduce using rule 76 (function_call -> NAME OBRACKET call_parameters CBRACKET .)
    STAR            reduce using rule 76 (function_call -> NAME OBRACKET call_parameters CBRACKET .)
    SLASH           reduce using rule 76 (function_call -> NAME OBRACKET call_parameters CBRACKET .)
    NOTGREATER      reduce using rule 76 (function_call -> NAME OBRACKET call_parameters CBRACKET .)
    NOTLESS         reduce using rule 76 (function_call -> NAME OBRACKET call_parameters CBRACKET .)
    NOTEQ           reduce using rule 76 (function_call -> NAME OBRACKET call_parameters CBRACKET .)
    CBRACKET        reduce using rule 76 (function_call -> NAME OBRACKET call_parameters CBRACKET .)
    CSQBRACKET      reduce using rule 76 (function_call -> NAME OBRACKET call_parameters CBRACKET .)
    COMMA           reduce using rule 76 (function_call -> NAME OBRACKET call_parameters CBRACKET .)


state 160

    (77) call_parameters -> call_parameters COMMA . call_vars
    (79) call_vars -> . vars
    (80) call_vars -> . expression
    (15) vars -> . NAME COMMA vars
    (16) vars -> . assignment_var COMMA vars
    (17) vars -> . NAME
    (18) vars -> . assignment_var
    (43) expression -> . variable
    (44) expression -> . al_expression
    (45) expression -> . function_call
    (46) expression -> . SIZEOF OBRACKET variable CBRACKET
    (19) assignment_var -> . variable ASSIGNMENT expression
    (27) variable -> . NAME
    (28) variable -> . variable index
    (47) al_expression -> . expression PLUS expression
    (48) al_expression -> . expression MINUS expression
    (49) al_expression -> . expression PERCENT expression
    (50) al_expression -> . expression STAR expression
    (51) al_expression -> . expression SLASH expression
    (52) al_expression -> . STAR expression
    (53) al_expression -> . AMPERSAND expression
    (54) al_expression -> . expression NOTGREATER expression
    (55) al_expression -> . expression NOTLESS expression
    (56) al_expression -> . expression NOTEQ expression
    (57) al_expression -> . NUMBER
    (58) al_expression -> . OBRACKET al_expression CBRACKET
    (76) function_call -> . NAME OBRACKET call_parameters CBRACKET

    NAME            shift and go to state 137
    SIZEOF          shift and go to state 46
    STAR            shift and go to state 49
    AMPERSAND       shift and go to state 50
    NUMBER          shift and go to state 51
    OBRACKET        shift and go to state 47

    call_vars                      shift and go to state 172
    vars                           shift and go to state 140
    expression                     shift and go to state 141
    assignment_var                 shift and go to state 57
    variable                       shift and go to state 142
    al_expression                  shift and go to state 44
    function_call                  shift and go to state 45

state 161

    (84) parameter -> type NAME .

    CBRACKET        reduce using rule 84 (parameter -> type NAME .)
    COMMA           reduce using rule 84 (parameter -> type NAME .)


state 162

    (72) function -> type funcname OBRACKET parameters CBRACKET . OFBRACKET NL stategroup CFBRACKET

    OFBRACKET       shift and go to state 173


state 163

    (82) parameters -> parameters COMMA . parameter
    (84) parameter -> . type NAME
    (31) type -> . VALUE
    (32) type -> . CONST VALUE
    (33) type -> . POINTER expr_type
    (34) type -> . CONST POINTER expr_type
    (35) type -> . POINTER CONST expr_type
    (36) type -> . CONST POINTER CONST expr_type
    (37) type -> . ARRAYOF expr_type
    (38) type -> . CONST ARRAYOF expr_type

    VALUE           shift and go to state 27
    CONST           shift and go to state 28
    POINTER         shift and go to state 29
    ARRAYOF         shift and go to state 30

    parameter                      shift and go to state 174
    type                           shift and go to state 143

state 164

    (73) function -> type funcname OBRACKET CBRACKET OFBRACKET . NL stategroup CFBRACKET

    NL              shift and go to state 175


state 165

    (29) index -> OSQBRACKET expression CSQBRACKET index .

    ASSIGNMENT      reduce using rule 29 (index -> OSQBRACKET expression CSQBRACKET index .)
    OSQBRACKET      reduce using rule 29 (index -> OSQBRACKET expression CSQBRACKET index .)
    SEMICOLON       reduce using rule 29 (index -> OSQBRACKET expression CSQBRACKET index .)
    PLUS            reduce using rule 29 (index -> OSQBRACKET expression CSQBRACKET index .)
    MINUS           reduce using rule 29 (index -> OSQBRACKET expression CSQBRACKET index .)
    PERCENT         reduce using rule 29 (index -> OSQBRACKET expression CSQBRACKET index .)
    STAR            reduce using rule 29 (index -> OSQBRACKET expression CSQBRACKET index .)
    SLASH           reduce using rule 29 (index -> OSQBRACKET expression CSQBRACKET index .)
    NOTGREATER      reduce using rule 29 (index -> OSQBRACKET expression CSQBRACKET index .)
    NOTLESS         reduce using rule 29 (index -> OSQBRACKET expression CSQBRACKET index .)
    NOTEQ           reduce using rule 29 (index -> OSQBRACKET expression CSQBRACKET index .)
    CBRACKET        reduce using rule 29 (index -> OSQBRACKET expression CSQBRACKET index .)
    CSQBRACKET      reduce using rule 29 (index -> OSQBRACKET expression CSQBRACKET index .)
    COMMA           reduce using rule 29 (index -> OSQBRACKET expression CSQBRACKET index .)


state 166

    (67) while -> WHILE OBRACKET expression CBRACKET OFBRACKET . NL stategroup CFBRACKET

    NL              shift and go to state 176


state 167

    (68) zero -> ZERO OBRACKET expression CBRACKET OFBRACKET . NL stategroup CFBRACKET

    NL              shift and go to state 177


state 168

    (70) zero -> ZERO OBRACKET expression CBRACKET NL . statement
    (4) statement -> . declaration SEMICOLON NL
    (5) statement -> . assignment SEMICOLON NL
    (6) statement -> . while NL
    (7) statement -> . zero NL
    (8) statement -> . function NL
    (9) statement -> . operator SEMICOLON NL
    (10) statement -> . RETURN expression SEMICOLON NL
    (11) statement -> . empty NL
    (12) statement -> . error
    (13) declaration -> . type vars
    (14) declaration -> . type error
    (20) assignment -> . assignment_var
    (21) assignment -> . pointer ASSIGNMENT expression
    (22) assignment -> . variable ASSIGNMENT error
    (66) while -> . while FINISH OFBRACKET NL stategroup CFBRACKET
    (67) while -> . WHILE OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (68) zero -> . ZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (69) zero -> . NOTZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (70) zero -> . ZERO OBRACKET expression CBRACKET NL statement
    (71) zero -> . NOTZERO OBRACKET expression CBRACKET NL statement
    (72) function -> . type funcname OBRACKET parameters CBRACKET OFBRACKET NL stategroup CFBRACKET
    (73) function -> . type funcname OBRACKET CBRACKET OFBRACKET NL stategroup CFBRACKET
    (81) function -> . type error
    (59) operator -> . TOP SEMICOLON
    (60) operator -> . BOTTOM SEMICOLON
    (61) operator -> . LEFT SEMICOLON
    (62) operator -> . RIGHT SEMICOLON
    (63) operator -> . PORTAL SEMICOLON
    (64) operator -> . TELEPORT SEMICOLON
    (65) operator -> . BREAK SEMICOLON
    (85) empty -> .
    (31) type -> . VALUE
    (32) type -> . CONST VALUE
    (33) type -> . POINTER expr_type
    (34) type -> . CONST POINTER expr_type
    (35) type -> . POINTER CONST expr_type
    (36) type -> . CONST POINTER CONST expr_type
    (37) type -> . ARRAYOF expr_type
    (38) type -> . CONST ARRAYOF expr_type
    (19) assignment_var -> . variable ASSIGNMENT expression
    (23) pointer -> . STAR NAME
    (24) pointer -> . STAR OBRACKET expression CBRACKET
    (25) pointer -> . AMPERSAND NAME
    (26) pointer -> . AMPERSAND OBRACKET expression CBRACKET
    (27) variable -> . NAME
    (28) variable -> . variable index

    RETURN          shift and go to state 10
    error           shift and go to state 12
    WHILE           shift and go to state 17
    ZERO            shift and go to state 18
    NOTZERO         shift and go to state 19
    TOP             shift and go to state 20
    BOTTOM          shift and go to state 21
    LEFT            shift and go to state 22
    RIGHT           shift and go to state 23
    PORTAL          shift and go to state 24
    TELEPORT        shift and go to state 25
    BREAK           shift and go to state 26
    NL              reduce using rule 85 (empty -> .)
    VALUE           shift and go to state 27
    CONST           shift and go to state 28
    POINTER         shift and go to state 29
    ARRAYOF         shift and go to state 30
    STAR            shift and go to state 31
    AMPERSAND       shift and go to state 33
    NAME            shift and go to state 32

    statement                      shift and go to state 178
    declaration                    shift and go to state 4
    assignment                     shift and go to state 5
    while                          shift and go to state 6
    zero                           shift and go to state 7
    function                       shift and go to state 8
    operator                       shift and go to state 9
    empty                          shift and go to state 11
    type                           shift and go to state 13
    assignment_var                 shift and go to state 14
    pointer                        shift and go to state 15
    variable                       shift and go to state 16

state 169

    (69) zero -> NOTZERO OBRACKET expression CBRACKET OFBRACKET . NL stategroup CFBRACKET

    NL              shift and go to state 179


state 170

    (71) zero -> NOTZERO OBRACKET expression CBRACKET NL . statement
    (4) statement -> . declaration SEMICOLON NL
    (5) statement -> . assignment SEMICOLON NL
    (6) statement -> . while NL
    (7) statement -> . zero NL
    (8) statement -> . function NL
    (9) statement -> . operator SEMICOLON NL
    (10) statement -> . RETURN expression SEMICOLON NL
    (11) statement -> . empty NL
    (12) statement -> . error
    (13) declaration -> . type vars
    (14) declaration -> . type error
    (20) assignment -> . assignment_var
    (21) assignment -> . pointer ASSIGNMENT expression
    (22) assignment -> . variable ASSIGNMENT error
    (66) while -> . while FINISH OFBRACKET NL stategroup CFBRACKET
    (67) while -> . WHILE OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (68) zero -> . ZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (69) zero -> . NOTZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (70) zero -> . ZERO OBRACKET expression CBRACKET NL statement
    (71) zero -> . NOTZERO OBRACKET expression CBRACKET NL statement
    (72) function -> . type funcname OBRACKET parameters CBRACKET OFBRACKET NL stategroup CFBRACKET
    (73) function -> . type funcname OBRACKET CBRACKET OFBRACKET NL stategroup CFBRACKET
    (81) function -> . type error
    (59) operator -> . TOP SEMICOLON
    (60) operator -> . BOTTOM SEMICOLON
    (61) operator -> . LEFT SEMICOLON
    (62) operator -> . RIGHT SEMICOLON
    (63) operator -> . PORTAL SEMICOLON
    (64) operator -> . TELEPORT SEMICOLON
    (65) operator -> . BREAK SEMICOLON
    (85) empty -> .
    (31) type -> . VALUE
    (32) type -> . CONST VALUE
    (33) type -> . POINTER expr_type
    (34) type -> . CONST POINTER expr_type
    (35) type -> . POINTER CONST expr_type
    (36) type -> . CONST POINTER CONST expr_type
    (37) type -> . ARRAYOF expr_type
    (38) type -> . CONST ARRAYOF expr_type
    (19) assignment_var -> . variable ASSIGNMENT expression
    (23) pointer -> . STAR NAME
    (24) pointer -> . STAR OBRACKET expression CBRACKET
    (25) pointer -> . AMPERSAND NAME
    (26) pointer -> . AMPERSAND OBRACKET expression CBRACKET
    (27) variable -> . NAME
    (28) variable -> . variable index

    RETURN          shift and go to state 10
    error           shift and go to state 12
    WHILE           shift and go to state 17
    ZERO            shift and go to state 18
    NOTZERO         shift and go to state 19
    TOP             shift and go to state 20
    BOTTOM          shift and go to state 21
    LEFT            shift and go to state 22
    RIGHT           shift and go to state 23
    PORTAL          shift and go to state 24
    TELEPORT        shift and go to state 25
    BREAK           shift and go to state 26
    NL              reduce using rule 85 (empty -> .)
    VALUE           shift and go to state 27
    CONST           shift and go to state 28
    POINTER         shift and go to state 29
    ARRAYOF         shift and go to state 30
    STAR            shift and go to state 31
    AMPERSAND       shift and go to state 33
    NAME            shift and go to state 32

    statement                      shift and go to state 180
    declaration                    shift and go to state 4
    assignment                     shift and go to state 5
    while                          shift and go to state 6
    zero                           shift and go to state 7
    function                       shift and go to state 8
    operator                       shift and go to state 9
    empty                          shift and go to state 11
    type                           shift and go to state 13
    assignment_var                 shift and go to state 14
    pointer                        shift and go to state 15
    variable                       shift and go to state 16

state 171

    (66) while -> while FINISH OFBRACKET NL stategroup CFBRACKET .

    NL              reduce using rule 66 (while -> while FINISH OFBRACKET NL stategroup CFBRACKET .)
    FINISH          reduce using rule 66 (while -> while FINISH OFBRACKET NL stategroup CFBRACKET .)


state 172

    (77) call_parameters -> call_parameters COMMA call_vars .

    CBRACKET        reduce using rule 77 (call_parameters -> call_parameters COMMA call_vars .)
    COMMA           reduce using rule 77 (call_parameters -> call_parameters COMMA call_vars .)


state 173

    (72) function -> type funcname OBRACKET parameters CBRACKET OFBRACKET . NL stategroup CFBRACKET

    NL              shift and go to state 181


state 174

    (82) parameters -> parameters COMMA parameter .

    CBRACKET        reduce using rule 82 (parameters -> parameters COMMA parameter .)
    COMMA           reduce using rule 82 (parameters -> parameters COMMA parameter .)


state 175

    (73) function -> type funcname OBRACKET CBRACKET OFBRACKET NL . stategroup CFBRACKET
    (2) stategroup -> . stategroup statement
    (3) stategroup -> . statement
    (4) statement -> . declaration SEMICOLON NL
    (5) statement -> . assignment SEMICOLON NL
    (6) statement -> . while NL
    (7) statement -> . zero NL
    (8) statement -> . function NL
    (9) statement -> . operator SEMICOLON NL
    (10) statement -> . RETURN expression SEMICOLON NL
    (11) statement -> . empty NL
    (12) statement -> . error
    (13) declaration -> . type vars
    (14) declaration -> . type error
    (20) assignment -> . assignment_var
    (21) assignment -> . pointer ASSIGNMENT expression
    (22) assignment -> . variable ASSIGNMENT error
    (66) while -> . while FINISH OFBRACKET NL stategroup CFBRACKET
    (67) while -> . WHILE OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (68) zero -> . ZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (69) zero -> . NOTZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (70) zero -> . ZERO OBRACKET expression CBRACKET NL statement
    (71) zero -> . NOTZERO OBRACKET expression CBRACKET NL statement
    (72) function -> . type funcname OBRACKET parameters CBRACKET OFBRACKET NL stategroup CFBRACKET
    (73) function -> . type funcname OBRACKET CBRACKET OFBRACKET NL stategroup CFBRACKET
    (81) function -> . type error
    (59) operator -> . TOP SEMICOLON
    (60) operator -> . BOTTOM SEMICOLON
    (61) operator -> . LEFT SEMICOLON
    (62) operator -> . RIGHT SEMICOLON
    (63) operator -> . PORTAL SEMICOLON
    (64) operator -> . TELEPORT SEMICOLON
    (65) operator -> . BREAK SEMICOLON
    (85) empty -> .
    (31) type -> . VALUE
    (32) type -> . CONST VALUE
    (33) type -> . POINTER expr_type
    (34) type -> . CONST POINTER expr_type
    (35) type -> . POINTER CONST expr_type
    (36) type -> . CONST POINTER CONST expr_type
    (37) type -> . ARRAYOF expr_type
    (38) type -> . CONST ARRAYOF expr_type
    (19) assignment_var -> . variable ASSIGNMENT expression
    (23) pointer -> . STAR NAME
    (24) pointer -> . STAR OBRACKET expression CBRACKET
    (25) pointer -> . AMPERSAND NAME
    (26) pointer -> . AMPERSAND OBRACKET expression CBRACKET
    (27) variable -> . NAME
    (28) variable -> . variable index

    RETURN          shift and go to state 10
    error           shift and go to state 12
    WHILE           shift and go to state 17
    ZERO            shift and go to state 18
    NOTZERO         shift and go to state 19
    TOP             shift and go to state 20
    BOTTOM          shift and go to state 21
    LEFT            shift and go to state 22
    RIGHT           shift and go to state 23
    PORTAL          shift and go to state 24
    TELEPORT        shift and go to state 25
    BREAK           shift and go to state 26
    NL              reduce using rule 85 (empty -> .)
    VALUE           shift and go to state 27
    CONST           shift and go to state 28
    POINTER         shift and go to state 29
    ARRAYOF         shift and go to state 30
    STAR            shift and go to state 31
    AMPERSAND       shift and go to state 33
    NAME            shift and go to state 32

    type                           shift and go to state 13
    stategroup                     shift and go to state 182
    statement                      shift and go to state 3
    declaration                    shift and go to state 4
    assignment                     shift and go to state 5
    while                          shift and go to state 6
    zero                           shift and go to state 7
    function                       shift and go to state 8
    operator                       shift and go to state 9
    empty                          shift and go to state 11
    assignment_var                 shift and go to state 14
    pointer                        shift and go to state 15
    variable                       shift and go to state 16

state 176

    (67) while -> WHILE OBRACKET expression CBRACKET OFBRACKET NL . stategroup CFBRACKET
    (2) stategroup -> . stategroup statement
    (3) stategroup -> . statement
    (4) statement -> . declaration SEMICOLON NL
    (5) statement -> . assignment SEMICOLON NL
    (6) statement -> . while NL
    (7) statement -> . zero NL
    (8) statement -> . function NL
    (9) statement -> . operator SEMICOLON NL
    (10) statement -> . RETURN expression SEMICOLON NL
    (11) statement -> . empty NL
    (12) statement -> . error
    (13) declaration -> . type vars
    (14) declaration -> . type error
    (20) assignment -> . assignment_var
    (21) assignment -> . pointer ASSIGNMENT expression
    (22) assignment -> . variable ASSIGNMENT error
    (66) while -> . while FINISH OFBRACKET NL stategroup CFBRACKET
    (67) while -> . WHILE OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (68) zero -> . ZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (69) zero -> . NOTZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (70) zero -> . ZERO OBRACKET expression CBRACKET NL statement
    (71) zero -> . NOTZERO OBRACKET expression CBRACKET NL statement
    (72) function -> . type funcname OBRACKET parameters CBRACKET OFBRACKET NL stategroup CFBRACKET
    (73) function -> . type funcname OBRACKET CBRACKET OFBRACKET NL stategroup CFBRACKET
    (81) function -> . type error
    (59) operator -> . TOP SEMICOLON
    (60) operator -> . BOTTOM SEMICOLON
    (61) operator -> . LEFT SEMICOLON
    (62) operator -> . RIGHT SEMICOLON
    (63) operator -> . PORTAL SEMICOLON
    (64) operator -> . TELEPORT SEMICOLON
    (65) operator -> . BREAK SEMICOLON
    (85) empty -> .
    (31) type -> . VALUE
    (32) type -> . CONST VALUE
    (33) type -> . POINTER expr_type
    (34) type -> . CONST POINTER expr_type
    (35) type -> . POINTER CONST expr_type
    (36) type -> . CONST POINTER CONST expr_type
    (37) type -> . ARRAYOF expr_type
    (38) type -> . CONST ARRAYOF expr_type
    (19) assignment_var -> . variable ASSIGNMENT expression
    (23) pointer -> . STAR NAME
    (24) pointer -> . STAR OBRACKET expression CBRACKET
    (25) pointer -> . AMPERSAND NAME
    (26) pointer -> . AMPERSAND OBRACKET expression CBRACKET
    (27) variable -> . NAME
    (28) variable -> . variable index

    RETURN          shift and go to state 10
    error           shift and go to state 12
    WHILE           shift and go to state 17
    ZERO            shift and go to state 18
    NOTZERO         shift and go to state 19
    TOP             shift and go to state 20
    BOTTOM          shift and go to state 21
    LEFT            shift and go to state 22
    RIGHT           shift and go to state 23
    PORTAL          shift and go to state 24
    TELEPORT        shift and go to state 25
    BREAK           shift and go to state 26
    NL              reduce using rule 85 (empty -> .)
    VALUE           shift and go to state 27
    CONST           shift and go to state 28
    POINTER         shift and go to state 29
    ARRAYOF         shift and go to state 30
    STAR            shift and go to state 31
    AMPERSAND       shift and go to state 33
    NAME            shift and go to state 32

    stategroup                     shift and go to state 183
    statement                      shift and go to state 3
    declaration                    shift and go to state 4
    assignment                     shift and go to state 5
    while                          shift and go to state 6
    zero                           shift and go to state 7
    function                       shift and go to state 8
    operator                       shift and go to state 9
    empty                          shift and go to state 11
    type                           shift and go to state 13
    assignment_var                 shift and go to state 14
    pointer                        shift and go to state 15
    variable                       shift and go to state 16

state 177

    (68) zero -> ZERO OBRACKET expression CBRACKET OFBRACKET NL . stategroup CFBRACKET
    (2) stategroup -> . stategroup statement
    (3) stategroup -> . statement
    (4) statement -> . declaration SEMICOLON NL
    (5) statement -> . assignment SEMICOLON NL
    (6) statement -> . while NL
    (7) statement -> . zero NL
    (8) statement -> . function NL
    (9) statement -> . operator SEMICOLON NL
    (10) statement -> . RETURN expression SEMICOLON NL
    (11) statement -> . empty NL
    (12) statement -> . error
    (13) declaration -> . type vars
    (14) declaration -> . type error
    (20) assignment -> . assignment_var
    (21) assignment -> . pointer ASSIGNMENT expression
    (22) assignment -> . variable ASSIGNMENT error
    (66) while -> . while FINISH OFBRACKET NL stategroup CFBRACKET
    (67) while -> . WHILE OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (68) zero -> . ZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (69) zero -> . NOTZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (70) zero -> . ZERO OBRACKET expression CBRACKET NL statement
    (71) zero -> . NOTZERO OBRACKET expression CBRACKET NL statement
    (72) function -> . type funcname OBRACKET parameters CBRACKET OFBRACKET NL stategroup CFBRACKET
    (73) function -> . type funcname OBRACKET CBRACKET OFBRACKET NL stategroup CFBRACKET
    (81) function -> . type error
    (59) operator -> . TOP SEMICOLON
    (60) operator -> . BOTTOM SEMICOLON
    (61) operator -> . LEFT SEMICOLON
    (62) operator -> . RIGHT SEMICOLON
    (63) operator -> . PORTAL SEMICOLON
    (64) operator -> . TELEPORT SEMICOLON
    (65) operator -> . BREAK SEMICOLON
    (85) empty -> .
    (31) type -> . VALUE
    (32) type -> . CONST VALUE
    (33) type -> . POINTER expr_type
    (34) type -> . CONST POINTER expr_type
    (35) type -> . POINTER CONST expr_type
    (36) type -> . CONST POINTER CONST expr_type
    (37) type -> . ARRAYOF expr_type
    (38) type -> . CONST ARRAYOF expr_type
    (19) assignment_var -> . variable ASSIGNMENT expression
    (23) pointer -> . STAR NAME
    (24) pointer -> . STAR OBRACKET expression CBRACKET
    (25) pointer -> . AMPERSAND NAME
    (26) pointer -> . AMPERSAND OBRACKET expression CBRACKET
    (27) variable -> . NAME
    (28) variable -> . variable index

    RETURN          shift and go to state 10
    error           shift and go to state 12
    WHILE           shift and go to state 17
    ZERO            shift and go to state 18
    NOTZERO         shift and go to state 19
    TOP             shift and go to state 20
    BOTTOM          shift and go to state 21
    LEFT            shift and go to state 22
    RIGHT           shift and go to state 23
    PORTAL          shift and go to state 24
    TELEPORT        shift and go to state 25
    BREAK           shift and go to state 26
    NL              reduce using rule 85 (empty -> .)
    VALUE           shift and go to state 27
    CONST           shift and go to state 28
    POINTER         shift and go to state 29
    ARRAYOF         shift and go to state 30
    STAR            shift and go to state 31
    AMPERSAND       shift and go to state 33
    NAME            shift and go to state 32

    stategroup                     shift and go to state 184
    statement                      shift and go to state 3
    declaration                    shift and go to state 4
    assignment                     shift and go to state 5
    while                          shift and go to state 6
    zero                           shift and go to state 7
    function                       shift and go to state 8
    operator                       shift and go to state 9
    empty                          shift and go to state 11
    type                           shift and go to state 13
    assignment_var                 shift and go to state 14
    pointer                        shift and go to state 15
    variable                       shift and go to state 16

state 178

    (70) zero -> ZERO OBRACKET expression CBRACKET NL statement .

    NL              reduce using rule 70 (zero -> ZERO OBRACKET expression CBRACKET NL statement .)


state 179

    (69) zero -> NOTZERO OBRACKET expression CBRACKET OFBRACKET NL . stategroup CFBRACKET
    (2) stategroup -> . stategroup statement
    (3) stategroup -> . statement
    (4) statement -> . declaration SEMICOLON NL
    (5) statement -> . assignment SEMICOLON NL
    (6) statement -> . while NL
    (7) statement -> . zero NL
    (8) statement -> . function NL
    (9) statement -> . operator SEMICOLON NL
    (10) statement -> . RETURN expression SEMICOLON NL
    (11) statement -> . empty NL
    (12) statement -> . error
    (13) declaration -> . type vars
    (14) declaration -> . type error
    (20) assignment -> . assignment_var
    (21) assignment -> . pointer ASSIGNMENT expression
    (22) assignment -> . variable ASSIGNMENT error
    (66) while -> . while FINISH OFBRACKET NL stategroup CFBRACKET
    (67) while -> . WHILE OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (68) zero -> . ZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (69) zero -> . NOTZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (70) zero -> . ZERO OBRACKET expression CBRACKET NL statement
    (71) zero -> . NOTZERO OBRACKET expression CBRACKET NL statement
    (72) function -> . type funcname OBRACKET parameters CBRACKET OFBRACKET NL stategroup CFBRACKET
    (73) function -> . type funcname OBRACKET CBRACKET OFBRACKET NL stategroup CFBRACKET
    (81) function -> . type error
    (59) operator -> . TOP SEMICOLON
    (60) operator -> . BOTTOM SEMICOLON
    (61) operator -> . LEFT SEMICOLON
    (62) operator -> . RIGHT SEMICOLON
    (63) operator -> . PORTAL SEMICOLON
    (64) operator -> . TELEPORT SEMICOLON
    (65) operator -> . BREAK SEMICOLON
    (85) empty -> .
    (31) type -> . VALUE
    (32) type -> . CONST VALUE
    (33) type -> . POINTER expr_type
    (34) type -> . CONST POINTER expr_type
    (35) type -> . POINTER CONST expr_type
    (36) type -> . CONST POINTER CONST expr_type
    (37) type -> . ARRAYOF expr_type
    (38) type -> . CONST ARRAYOF expr_type
    (19) assignment_var -> . variable ASSIGNMENT expression
    (23) pointer -> . STAR NAME
    (24) pointer -> . STAR OBRACKET expression CBRACKET
    (25) pointer -> . AMPERSAND NAME
    (26) pointer -> . AMPERSAND OBRACKET expression CBRACKET
    (27) variable -> . NAME
    (28) variable -> . variable index

    RETURN          shift and go to state 10
    error           shift and go to state 12
    WHILE           shift and go to state 17
    ZERO            shift and go to state 18
    NOTZERO         shift and go to state 19
    TOP             shift and go to state 20
    BOTTOM          shift and go to state 21
    LEFT            shift and go to state 22
    RIGHT           shift and go to state 23
    PORTAL          shift and go to state 24
    TELEPORT        shift and go to state 25
    BREAK           shift and go to state 26
    NL              reduce using rule 85 (empty -> .)
    VALUE           shift and go to state 27
    CONST           shift and go to state 28
    POINTER         shift and go to state 29
    ARRAYOF         shift and go to state 30
    STAR            shift and go to state 31
    AMPERSAND       shift and go to state 33
    NAME            shift and go to state 32

    stategroup                     shift and go to state 185
    statement                      shift and go to state 3
    declaration                    shift and go to state 4
    assignment                     shift and go to state 5
    while                          shift and go to state 6
    zero                           shift and go to state 7
    function                       shift and go to state 8
    operator                       shift and go to state 9
    empty                          shift and go to state 11
    type                           shift and go to state 13
    assignment_var                 shift and go to state 14
    pointer                        shift and go to state 15
    variable                       shift and go to state 16

state 180

    (71) zero -> NOTZERO OBRACKET expression CBRACKET NL statement .

    NL              reduce using rule 71 (zero -> NOTZERO OBRACKET expression CBRACKET NL statement .)


state 181

    (72) function -> type funcname OBRACKET parameters CBRACKET OFBRACKET NL . stategroup CFBRACKET
    (2) stategroup -> . stategroup statement
    (3) stategroup -> . statement
    (4) statement -> . declaration SEMICOLON NL
    (5) statement -> . assignment SEMICOLON NL
    (6) statement -> . while NL
    (7) statement -> . zero NL
    (8) statement -> . function NL
    (9) statement -> . operator SEMICOLON NL
    (10) statement -> . RETURN expression SEMICOLON NL
    (11) statement -> . empty NL
    (12) statement -> . error
    (13) declaration -> . type vars
    (14) declaration -> . type error
    (20) assignment -> . assignment_var
    (21) assignment -> . pointer ASSIGNMENT expression
    (22) assignment -> . variable ASSIGNMENT error
    (66) while -> . while FINISH OFBRACKET NL stategroup CFBRACKET
    (67) while -> . WHILE OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (68) zero -> . ZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (69) zero -> . NOTZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (70) zero -> . ZERO OBRACKET expression CBRACKET NL statement
    (71) zero -> . NOTZERO OBRACKET expression CBRACKET NL statement
    (72) function -> . type funcname OBRACKET parameters CBRACKET OFBRACKET NL stategroup CFBRACKET
    (73) function -> . type funcname OBRACKET CBRACKET OFBRACKET NL stategroup CFBRACKET
    (81) function -> . type error
    (59) operator -> . TOP SEMICOLON
    (60) operator -> . BOTTOM SEMICOLON
    (61) operator -> . LEFT SEMICOLON
    (62) operator -> . RIGHT SEMICOLON
    (63) operator -> . PORTAL SEMICOLON
    (64) operator -> . TELEPORT SEMICOLON
    (65) operator -> . BREAK SEMICOLON
    (85) empty -> .
    (31) type -> . VALUE
    (32) type -> . CONST VALUE
    (33) type -> . POINTER expr_type
    (34) type -> . CONST POINTER expr_type
    (35) type -> . POINTER CONST expr_type
    (36) type -> . CONST POINTER CONST expr_type
    (37) type -> . ARRAYOF expr_type
    (38) type -> . CONST ARRAYOF expr_type
    (19) assignment_var -> . variable ASSIGNMENT expression
    (23) pointer -> . STAR NAME
    (24) pointer -> . STAR OBRACKET expression CBRACKET
    (25) pointer -> . AMPERSAND NAME
    (26) pointer -> . AMPERSAND OBRACKET expression CBRACKET
    (27) variable -> . NAME
    (28) variable -> . variable index

    RETURN          shift and go to state 10
    error           shift and go to state 12
    WHILE           shift and go to state 17
    ZERO            shift and go to state 18
    NOTZERO         shift and go to state 19
    TOP             shift and go to state 20
    BOTTOM          shift and go to state 21
    LEFT            shift and go to state 22
    RIGHT           shift and go to state 23
    PORTAL          shift and go to state 24
    TELEPORT        shift and go to state 25
    BREAK           shift and go to state 26
    NL              reduce using rule 85 (empty -> .)
    VALUE           shift and go to state 27
    CONST           shift and go to state 28
    POINTER         shift and go to state 29
    ARRAYOF         shift and go to state 30
    STAR            shift and go to state 31
    AMPERSAND       shift and go to state 33
    NAME            shift and go to state 32

    type                           shift and go to state 13
    stategroup                     shift and go to state 186
    statement                      shift and go to state 3
    declaration                    shift and go to state 4
    assignment                     shift and go to state 5
    while                          shift and go to state 6
    zero                           shift and go to state 7
    function                       shift and go to state 8
    operator                       shift and go to state 9
    empty                          shift and go to state 11
    assignment_var                 shift and go to state 14
    pointer                        shift and go to state 15
    variable                       shift and go to state 16

state 182

    (73) function -> type funcname OBRACKET CBRACKET OFBRACKET NL stategroup . CFBRACKET
    (2) stategroup -> stategroup . statement
    (4) statement -> . declaration SEMICOLON NL
    (5) statement -> . assignment SEMICOLON NL
    (6) statement -> . while NL
    (7) statement -> . zero NL
    (8) statement -> . function NL
    (9) statement -> . operator SEMICOLON NL
    (10) statement -> . RETURN expression SEMICOLON NL
    (11) statement -> . empty NL
    (12) statement -> . error
    (13) declaration -> . type vars
    (14) declaration -> . type error
    (20) assignment -> . assignment_var
    (21) assignment -> . pointer ASSIGNMENT expression
    (22) assignment -> . variable ASSIGNMENT error
    (66) while -> . while FINISH OFBRACKET NL stategroup CFBRACKET
    (67) while -> . WHILE OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (68) zero -> . ZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (69) zero -> . NOTZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (70) zero -> . ZERO OBRACKET expression CBRACKET NL statement
    (71) zero -> . NOTZERO OBRACKET expression CBRACKET NL statement
    (72) function -> . type funcname OBRACKET parameters CBRACKET OFBRACKET NL stategroup CFBRACKET
    (73) function -> . type funcname OBRACKET CBRACKET OFBRACKET NL stategroup CFBRACKET
    (81) function -> . type error
    (59) operator -> . TOP SEMICOLON
    (60) operator -> . BOTTOM SEMICOLON
    (61) operator -> . LEFT SEMICOLON
    (62) operator -> . RIGHT SEMICOLON
    (63) operator -> . PORTAL SEMICOLON
    (64) operator -> . TELEPORT SEMICOLON
    (65) operator -> . BREAK SEMICOLON
    (85) empty -> .
    (31) type -> . VALUE
    (32) type -> . CONST VALUE
    (33) type -> . POINTER expr_type
    (34) type -> . CONST POINTER expr_type
    (35) type -> . POINTER CONST expr_type
    (36) type -> . CONST POINTER CONST expr_type
    (37) type -> . ARRAYOF expr_type
    (38) type -> . CONST ARRAYOF expr_type
    (19) assignment_var -> . variable ASSIGNMENT expression
    (23) pointer -> . STAR NAME
    (24) pointer -> . STAR OBRACKET expression CBRACKET
    (25) pointer -> . AMPERSAND NAME
    (26) pointer -> . AMPERSAND OBRACKET expression CBRACKET
    (27) variable -> . NAME
    (28) variable -> . variable index

    CFBRACKET       shift and go to state 187
    RETURN          shift and go to state 10
    error           shift and go to state 12
    WHILE           shift and go to state 17
    ZERO            shift and go to state 18
    NOTZERO         shift and go to state 19
    TOP             shift and go to state 20
    BOTTOM          shift and go to state 21
    LEFT            shift and go to state 22
    RIGHT           shift and go to state 23
    PORTAL          shift and go to state 24
    TELEPORT        shift and go to state 25
    BREAK           shift and go to state 26
    NL              reduce using rule 85 (empty -> .)
    VALUE           shift and go to state 27
    CONST           shift and go to state 28
    POINTER         shift and go to state 29
    ARRAYOF         shift and go to state 30
    STAR            shift and go to state 31
    AMPERSAND       shift and go to state 33
    NAME            shift and go to state 32

    type                           shift and go to state 13
    statement                      shift and go to state 34
    declaration                    shift and go to state 4
    assignment                     shift and go to state 5
    while                          shift and go to state 6
    zero                           shift and go to state 7
    function                       shift and go to state 8
    operator                       shift and go to state 9
    empty                          shift and go to state 11
    assignment_var                 shift and go to state 14
    pointer                        shift and go to state 15
    variable                       shift and go to state 16

state 183

    (67) while -> WHILE OBRACKET expression CBRACKET OFBRACKET NL stategroup . CFBRACKET
    (2) stategroup -> stategroup . statement
    (4) statement -> . declaration SEMICOLON NL
    (5) statement -> . assignment SEMICOLON NL
    (6) statement -> . while NL
    (7) statement -> . zero NL
    (8) statement -> . function NL
    (9) statement -> . operator SEMICOLON NL
    (10) statement -> . RETURN expression SEMICOLON NL
    (11) statement -> . empty NL
    (12) statement -> . error
    (13) declaration -> . type vars
    (14) declaration -> . type error
    (20) assignment -> . assignment_var
    (21) assignment -> . pointer ASSIGNMENT expression
    (22) assignment -> . variable ASSIGNMENT error
    (66) while -> . while FINISH OFBRACKET NL stategroup CFBRACKET
    (67) while -> . WHILE OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (68) zero -> . ZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (69) zero -> . NOTZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (70) zero -> . ZERO OBRACKET expression CBRACKET NL statement
    (71) zero -> . NOTZERO OBRACKET expression CBRACKET NL statement
    (72) function -> . type funcname OBRACKET parameters CBRACKET OFBRACKET NL stategroup CFBRACKET
    (73) function -> . type funcname OBRACKET CBRACKET OFBRACKET NL stategroup CFBRACKET
    (81) function -> . type error
    (59) operator -> . TOP SEMICOLON
    (60) operator -> . BOTTOM SEMICOLON
    (61) operator -> . LEFT SEMICOLON
    (62) operator -> . RIGHT SEMICOLON
    (63) operator -> . PORTAL SEMICOLON
    (64) operator -> . TELEPORT SEMICOLON
    (65) operator -> . BREAK SEMICOLON
    (85) empty -> .
    (31) type -> . VALUE
    (32) type -> . CONST VALUE
    (33) type -> . POINTER expr_type
    (34) type -> . CONST POINTER expr_type
    (35) type -> . POINTER CONST expr_type
    (36) type -> . CONST POINTER CONST expr_type
    (37) type -> . ARRAYOF expr_type
    (38) type -> . CONST ARRAYOF expr_type
    (19) assignment_var -> . variable ASSIGNMENT expression
    (23) pointer -> . STAR NAME
    (24) pointer -> . STAR OBRACKET expression CBRACKET
    (25) pointer -> . AMPERSAND NAME
    (26) pointer -> . AMPERSAND OBRACKET expression CBRACKET
    (27) variable -> . NAME
    (28) variable -> . variable index

    CFBRACKET       shift and go to state 188
    RETURN          shift and go to state 10
    error           shift and go to state 12
    WHILE           shift and go to state 17
    ZERO            shift and go to state 18
    NOTZERO         shift and go to state 19
    TOP             shift and go to state 20
    BOTTOM          shift and go to state 21
    LEFT            shift and go to state 22
    RIGHT           shift and go to state 23
    PORTAL          shift and go to state 24
    TELEPORT        shift and go to state 25
    BREAK           shift and go to state 26
    NL              reduce using rule 85 (empty -> .)
    VALUE           shift and go to state 27
    CONST           shift and go to state 28
    POINTER         shift and go to state 29
    ARRAYOF         shift and go to state 30
    STAR            shift and go to state 31
    AMPERSAND       shift and go to state 33
    NAME            shift and go to state 32

    statement                      shift and go to state 34
    declaration                    shift and go to state 4
    assignment                     shift and go to state 5
    while                          shift and go to state 6
    zero                           shift and go to state 7
    function                       shift and go to state 8
    operator                       shift and go to state 9
    empty                          shift and go to state 11
    type                           shift and go to state 13
    assignment_var                 shift and go to state 14
    pointer                        shift and go to state 15
    variable                       shift and go to state 16

state 184

    (68) zero -> ZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup . CFBRACKET
    (2) stategroup -> stategroup . statement
    (4) statement -> . declaration SEMICOLON NL
    (5) statement -> . assignment SEMICOLON NL
    (6) statement -> . while NL
    (7) statement -> . zero NL
    (8) statement -> . function NL
    (9) statement -> . operator SEMICOLON NL
    (10) statement -> . RETURN expression SEMICOLON NL
    (11) statement -> . empty NL
    (12) statement -> . error
    (13) declaration -> . type vars
    (14) declaration -> . type error
    (20) assignment -> . assignment_var
    (21) assignment -> . pointer ASSIGNMENT expression
    (22) assignment -> . variable ASSIGNMENT error
    (66) while -> . while FINISH OFBRACKET NL stategroup CFBRACKET
    (67) while -> . WHILE OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (68) zero -> . ZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (69) zero -> . NOTZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (70) zero -> . ZERO OBRACKET expression CBRACKET NL statement
    (71) zero -> . NOTZERO OBRACKET expression CBRACKET NL statement
    (72) function -> . type funcname OBRACKET parameters CBRACKET OFBRACKET NL stategroup CFBRACKET
    (73) function -> . type funcname OBRACKET CBRACKET OFBRACKET NL stategroup CFBRACKET
    (81) function -> . type error
    (59) operator -> . TOP SEMICOLON
    (60) operator -> . BOTTOM SEMICOLON
    (61) operator -> . LEFT SEMICOLON
    (62) operator -> . RIGHT SEMICOLON
    (63) operator -> . PORTAL SEMICOLON
    (64) operator -> . TELEPORT SEMICOLON
    (65) operator -> . BREAK SEMICOLON
    (85) empty -> .
    (31) type -> . VALUE
    (32) type -> . CONST VALUE
    (33) type -> . POINTER expr_type
    (34) type -> . CONST POINTER expr_type
    (35) type -> . POINTER CONST expr_type
    (36) type -> . CONST POINTER CONST expr_type
    (37) type -> . ARRAYOF expr_type
    (38) type -> . CONST ARRAYOF expr_type
    (19) assignment_var -> . variable ASSIGNMENT expression
    (23) pointer -> . STAR NAME
    (24) pointer -> . STAR OBRACKET expression CBRACKET
    (25) pointer -> . AMPERSAND NAME
    (26) pointer -> . AMPERSAND OBRACKET expression CBRACKET
    (27) variable -> . NAME
    (28) variable -> . variable index

    CFBRACKET       shift and go to state 189
    RETURN          shift and go to state 10
    error           shift and go to state 12
    WHILE           shift and go to state 17
    ZERO            shift and go to state 18
    NOTZERO         shift and go to state 19
    TOP             shift and go to state 20
    BOTTOM          shift and go to state 21
    LEFT            shift and go to state 22
    RIGHT           shift and go to state 23
    PORTAL          shift and go to state 24
    TELEPORT        shift and go to state 25
    BREAK           shift and go to state 26
    NL              reduce using rule 85 (empty -> .)
    VALUE           shift and go to state 27
    CONST           shift and go to state 28
    POINTER         shift and go to state 29
    ARRAYOF         shift and go to state 30
    STAR            shift and go to state 31
    AMPERSAND       shift and go to state 33
    NAME            shift and go to state 32

    statement                      shift and go to state 34
    declaration                    shift and go to state 4
    assignment                     shift and go to state 5
    while                          shift and go to state 6
    zero                           shift and go to state 7
    function                       shift and go to state 8
    operator                       shift and go to state 9
    empty                          shift and go to state 11
    type                           shift and go to state 13
    assignment_var                 shift and go to state 14
    pointer                        shift and go to state 15
    variable                       shift and go to state 16

state 185

    (69) zero -> NOTZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup . CFBRACKET
    (2) stategroup -> stategroup . statement
    (4) statement -> . declaration SEMICOLON NL
    (5) statement -> . assignment SEMICOLON NL
    (6) statement -> . while NL
    (7) statement -> . zero NL
    (8) statement -> . function NL
    (9) statement -> . operator SEMICOLON NL
    (10) statement -> . RETURN expression SEMICOLON NL
    (11) statement -> . empty NL
    (12) statement -> . error
    (13) declaration -> . type vars
    (14) declaration -> . type error
    (20) assignment -> . assignment_var
    (21) assignment -> . pointer ASSIGNMENT expression
    (22) assignment -> . variable ASSIGNMENT error
    (66) while -> . while FINISH OFBRACKET NL stategroup CFBRACKET
    (67) while -> . WHILE OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (68) zero -> . ZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (69) zero -> . NOTZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (70) zero -> . ZERO OBRACKET expression CBRACKET NL statement
    (71) zero -> . NOTZERO OBRACKET expression CBRACKET NL statement
    (72) function -> . type funcname OBRACKET parameters CBRACKET OFBRACKET NL stategroup CFBRACKET
    (73) function -> . type funcname OBRACKET CBRACKET OFBRACKET NL stategroup CFBRACKET
    (81) function -> . type error
    (59) operator -> . TOP SEMICOLON
    (60) operator -> . BOTTOM SEMICOLON
    (61) operator -> . LEFT SEMICOLON
    (62) operator -> . RIGHT SEMICOLON
    (63) operator -> . PORTAL SEMICOLON
    (64) operator -> . TELEPORT SEMICOLON
    (65) operator -> . BREAK SEMICOLON
    (85) empty -> .
    (31) type -> . VALUE
    (32) type -> . CONST VALUE
    (33) type -> . POINTER expr_type
    (34) type -> . CONST POINTER expr_type
    (35) type -> . POINTER CONST expr_type
    (36) type -> . CONST POINTER CONST expr_type
    (37) type -> . ARRAYOF expr_type
    (38) type -> . CONST ARRAYOF expr_type
    (19) assignment_var -> . variable ASSIGNMENT expression
    (23) pointer -> . STAR NAME
    (24) pointer -> . STAR OBRACKET expression CBRACKET
    (25) pointer -> . AMPERSAND NAME
    (26) pointer -> . AMPERSAND OBRACKET expression CBRACKET
    (27) variable -> . NAME
    (28) variable -> . variable index

    CFBRACKET       shift and go to state 190
    RETURN          shift and go to state 10
    error           shift and go to state 12
    WHILE           shift and go to state 17
    ZERO            shift and go to state 18
    NOTZERO         shift and go to state 19
    TOP             shift and go to state 20
    BOTTOM          shift and go to state 21
    LEFT            shift and go to state 22
    RIGHT           shift and go to state 23
    PORTAL          shift and go to state 24
    TELEPORT        shift and go to state 25
    BREAK           shift and go to state 26
    NL              reduce using rule 85 (empty -> .)
    VALUE           shift and go to state 27
    CONST           shift and go to state 28
    POINTER         shift and go to state 29
    ARRAYOF         shift and go to state 30
    STAR            shift and go to state 31
    AMPERSAND       shift and go to state 33
    NAME            shift and go to state 32

    statement                      shift and go to state 34
    declaration                    shift and go to state 4
    assignment                     shift and go to state 5
    while                          shift and go to state 6
    zero                           shift and go to state 7
    function                       shift and go to state 8
    operator                       shift and go to state 9
    empty                          shift and go to state 11
    type                           shift and go to state 13
    assignment_var                 shift and go to state 14
    pointer                        shift and go to state 15
    variable                       shift and go to state 16

state 186

    (72) function -> type funcname OBRACKET parameters CBRACKET OFBRACKET NL stategroup . CFBRACKET
    (2) stategroup -> stategroup . statement
    (4) statement -> . declaration SEMICOLON NL
    (5) statement -> . assignment SEMICOLON NL
    (6) statement -> . while NL
    (7) statement -> . zero NL
    (8) statement -> . function NL
    (9) statement -> . operator SEMICOLON NL
    (10) statement -> . RETURN expression SEMICOLON NL
    (11) statement -> . empty NL
    (12) statement -> . error
    (13) declaration -> . type vars
    (14) declaration -> . type error
    (20) assignment -> . assignment_var
    (21) assignment -> . pointer ASSIGNMENT expression
    (22) assignment -> . variable ASSIGNMENT error
    (66) while -> . while FINISH OFBRACKET NL stategroup CFBRACKET
    (67) while -> . WHILE OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (68) zero -> . ZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (69) zero -> . NOTZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET
    (70) zero -> . ZERO OBRACKET expression CBRACKET NL statement
    (71) zero -> . NOTZERO OBRACKET expression CBRACKET NL statement
    (72) function -> . type funcname OBRACKET parameters CBRACKET OFBRACKET NL stategroup CFBRACKET
    (73) function -> . type funcname OBRACKET CBRACKET OFBRACKET NL stategroup CFBRACKET
    (81) function -> . type error
    (59) operator -> . TOP SEMICOLON
    (60) operator -> . BOTTOM SEMICOLON
    (61) operator -> . LEFT SEMICOLON
    (62) operator -> . RIGHT SEMICOLON
    (63) operator -> . PORTAL SEMICOLON
    (64) operator -> . TELEPORT SEMICOLON
    (65) operator -> . BREAK SEMICOLON
    (85) empty -> .
    (31) type -> . VALUE
    (32) type -> . CONST VALUE
    (33) type -> . POINTER expr_type
    (34) type -> . CONST POINTER expr_type
    (35) type -> . POINTER CONST expr_type
    (36) type -> . CONST POINTER CONST expr_type
    (37) type -> . ARRAYOF expr_type
    (38) type -> . CONST ARRAYOF expr_type
    (19) assignment_var -> . variable ASSIGNMENT expression
    (23) pointer -> . STAR NAME
    (24) pointer -> . STAR OBRACKET expression CBRACKET
    (25) pointer -> . AMPERSAND NAME
    (26) pointer -> . AMPERSAND OBRACKET expression CBRACKET
    (27) variable -> . NAME
    (28) variable -> . variable index

    CFBRACKET       shift and go to state 191
    RETURN          shift and go to state 10
    error           shift and go to state 12
    WHILE           shift and go to state 17
    ZERO            shift and go to state 18
    NOTZERO         shift and go to state 19
    TOP             shift and go to state 20
    BOTTOM          shift and go to state 21
    LEFT            shift and go to state 22
    RIGHT           shift and go to state 23
    PORTAL          shift and go to state 24
    TELEPORT        shift and go to state 25
    BREAK           shift and go to state 26
    NL              reduce using rule 85 (empty -> .)
    VALUE           shift and go to state 27
    CONST           shift and go to state 28
    POINTER         shift and go to state 29
    ARRAYOF         shift and go to state 30
    STAR            shift and go to state 31
    AMPERSAND       shift and go to state 33
    NAME            shift and go to state 32

    type                           shift and go to state 13
    statement                      shift and go to state 34
    declaration                    shift and go to state 4
    assignment                     shift and go to state 5
    while                          shift and go to state 6
    zero                           shift and go to state 7
    function                       shift and go to state 8
    operator                       shift and go to state 9
    empty                          shift and go to state 11
    assignment_var                 shift and go to state 14
    pointer                        shift and go to state 15
    variable                       shift and go to state 16

state 187

    (73) function -> type funcname OBRACKET CBRACKET OFBRACKET NL stategroup CFBRACKET .

    NL              reduce using rule 73 (function -> type funcname OBRACKET CBRACKET OFBRACKET NL stategroup CFBRACKET .)


state 188

    (67) while -> WHILE OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET .

    NL              reduce using rule 67 (while -> WHILE OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET .)
    FINISH          reduce using rule 67 (while -> WHILE OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET .)


state 189

    (68) zero -> ZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET .

    NL              reduce using rule 68 (zero -> ZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET .)


state 190

    (69) zero -> NOTZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET .

    NL              reduce using rule 69 (zero -> NOTZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET .)


state 191

    (72) function -> type funcname OBRACKET parameters CBRACKET OFBRACKET NL stategroup CFBRACKET .

    NL              reduce using rule 72 (function -> type funcname OBRACKET parameters CBRACKET OFBRACKET NL stategroup CFBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMA in state 57 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 137 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 137 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 147 resolved as shift
WARNING: shift/reduce conflict for OSQBRACKET in state 150 resolved as shift
WARNING: reduce/reduce conflict in state 137 resolved using rule (vars -> NAME)
WARNING: rejected rule (variable -> NAME) in state 137
