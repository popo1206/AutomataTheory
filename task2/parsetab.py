
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocNOTLESSNOTGREATERNOTEQleftPLUSMINUSleftPERCENTSLASHleftASSIGNMENTrightSTARAMPERSANDAMPERSAND ARRAYOF ASSIGNMENT BOTTOM BREAK CBRACKET CFBRACKET COMMA CONST CSQBRACKET FINISH LEFT MAIN MINUS NAME NL NOTEQ NOTGREATER NOTLESS NOTZERO NUMBER OBRACKET OFBRACKET OSQBRACKET PERCENT PLUS POINTER PORTAL RETURN RIGHT SEMICOLON SIZEOF SLASH STAR TELEPORT TOP VALUE WHILE ZEROprogram : stategroupstategroup :  stategroup statement\n                    | statementstatement :  declaration SEMICOLON  NL\n                    | assignment SEMICOLON NL\n                    | while NL\n                    | zero  NL\n                    | function NL\n                    | operator SEMICOLON NL\n                    | RETURN expression SEMICOLON NL\n                    | empty NLstatement : error declaration : type varsdeclaration : type errorvars : NAME COMMA varsvars : assignment_var COMMA varsvars : NAMEvars : assignment_var assignment_var : variable ASSIGNMENT expressionassignment : assignment_var\n        | pointer ASSIGNMENT expressionassignment : variable ASSIGNMENT errorpointer : STAR NAME\n                  | STAR OBRACKET expression CBRACKET\n                  | AMPERSAND NAME\n                  | AMPERSAND OBRACKET expression CBRACKETvariable : NAME\n         | variable indexindex : OSQBRACKET expression CSQBRACKET index\n                    | OSQBRACKET expression CSQBRACKET type : VALUE\n        | CONST VALUE\n        | POINTER expr_type\n        | CONST POINTER expr_type\n        | POINTER CONST expr_type\n        | CONST POINTER CONST expr_type\n        | ARRAYOF expr_type\n        | CONST ARRAYOF expr_type\n         expr_type :\n        | VALUE\n        | POINTER expr_type\n        | ARRAYOF expr_type\n        expression : variable\n        | al_expression\n        | function_call\n        | SIZEOF OBRACKET variable CBRACKETal_expression : expression PLUS expression\n        | expression MINUS expression\n        | expression PERCENT expression\n        | expression STAR expression\n        | expression SLASH expression\n        | STAR expression\n        | AMPERSAND expression\n        | expression NOTGREATER expression\n        | expression NOTLESS expression\n        | expression NOTEQ expression\n        | NUMBERal_expression : OBRACKET al_expression CBRACKEToperator : TOP SEMICOLON\n        | BOTTOM SEMICOLON\n        | LEFT SEMICOLON\n        | RIGHT SEMICOLON\n        | PORTAL SEMICOLON\n        | TELEPORT SEMICOLON\n        | BREAK SEMICOLONwhile : while FINISH OFBRACKET  NL stategroup  CFBRACKETwhile : WHILE OBRACKET expression CBRACKET  OFBRACKET  NL stategroup  CFBRACKET zero : ZERO  OBRACKET expression CBRACKET  OFBRACKET  NL stategroup  CFBRACKET\n              | NOTZERO OBRACKET expression CBRACKET  OFBRACKET  NL stategroup  CFBRACKET\n              | ZERO  OBRACKET expression CBRACKET  NL statement\n              | NOTZERO OBRACKET expression CBRACKET  NL statement\n        function : type funcname OBRACKET parameters CBRACKET  OFBRACKET  NL stategroup  CFBRACKET\n                    | type funcname OBRACKET  CBRACKET OFBRACKET NL stategroup CFBRACKETfuncname : MAIN\n                     | NAMEfunction_call : NAME OBRACKET call_parameters CBRACKET call_parameters : call_parameters COMMA call_vars\n                | call_varscall_vars : vars\n                 | expressionfunction : type errorparameters : parameters COMMA parameter\n                      | parameterparameter : type NAMEempty : '
    
_lr_action_items = {'RETURN':([0,2,3,12,34,37,39,40,52,87,88,90,125,126,157,168,170,175,176,177,179,181,182,183,184,185,186,],[10,10,-3,-12,-2,-6,-7,-8,-11,-4,-5,-9,10,-10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'error':([0,2,3,12,13,27,29,30,34,37,39,40,52,61,74,75,76,77,78,79,80,81,82,87,88,90,117,118,119,120,121,122,125,126,154,157,168,170,175,176,177,179,181,182,183,184,185,186,],[12,12,-3,-12,54,-31,-39,-39,-2,-6,-7,-8,-11,111,-32,-39,-39,-39,-33,-39,-40,-39,-37,-4,-5,-9,-39,-34,-38,-41,-35,-42,12,-10,-36,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'WHILE':([0,2,3,12,34,37,39,40,52,87,88,90,125,126,157,168,170,175,176,177,179,181,182,183,184,185,186,],[17,17,-3,-12,-2,-6,-7,-8,-11,-4,-5,-9,17,-10,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'ZERO':([0,2,3,12,34,37,39,40,52,87,88,90,125,126,157,168,170,175,176,177,179,181,182,183,184,185,186,],[18,18,-3,-12,-2,-6,-7,-8,-11,-4,-5,-9,18,-10,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'NOTZERO':([0,2,3,12,34,37,39,40,52,87,88,90,125,126,157,168,170,175,176,177,179,181,182,183,184,185,186,],[19,19,-3,-12,-2,-6,-7,-8,-11,-4,-5,-9,19,-10,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'TOP':([0,2,3,12,34,37,39,40,52,87,88,90,125,126,157,168,170,175,176,177,179,181,182,183,184,185,186,],[20,20,-3,-12,-2,-6,-7,-8,-11,-4,-5,-9,20,-10,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'BOTTOM':([0,2,3,12,34,37,39,40,52,87,88,90,125,126,157,168,170,175,176,177,179,181,182,183,184,185,186,],[21,21,-3,-12,-2,-6,-7,-8,-11,-4,-5,-9,21,-10,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'LEFT':([0,2,3,12,34,37,39,40,52,87,88,90,125,126,157,168,170,175,176,177,179,181,182,183,184,185,186,],[22,22,-3,-12,-2,-6,-7,-8,-11,-4,-5,-9,22,-10,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'RIGHT':([0,2,3,12,34,37,39,40,52,87,88,90,125,126,157,168,170,175,176,177,179,181,182,183,184,185,186,],[23,23,-3,-12,-2,-6,-7,-8,-11,-4,-5,-9,23,-10,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'PORTAL':([0,2,3,12,34,37,39,40,52,87,88,90,125,126,157,168,170,175,176,177,179,181,182,183,184,185,186,],[24,24,-3,-12,-2,-6,-7,-8,-11,-4,-5,-9,24,-10,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'TELEPORT':([0,2,3,12,34,37,39,40,52,87,88,90,125,126,157,168,170,175,176,177,179,181,182,183,184,185,186,],[25,25,-3,-12,-2,-6,-7,-8,-11,-4,-5,-9,25,-10,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'BREAK':([0,2,3,12,34,37,39,40,52,87,88,90,125,126,157,168,170,175,176,177,179,181,182,183,184,185,186,],[26,26,-3,-12,-2,-6,-7,-8,-11,-4,-5,-9,26,-10,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'NL':([0,2,3,6,7,8,11,12,34,35,36,37,39,40,41,52,54,87,88,89,90,91,125,126,152,153,157,164,166,167,168,169,170,171,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,],[-85,-85,-3,37,39,40,52,-12,-2,87,88,-6,-7,-8,90,-11,-81,-4,-5,125,-9,126,-85,-10,168,170,-85,175,176,177,-85,179,-85,-66,181,-85,-85,-85,-70,-85,-71,-85,-85,-85,-85,-85,-85,-73,-67,-68,-69,-72,]),'VALUE':([0,2,3,12,28,29,30,34,37,39,40,52,75,76,77,79,81,87,88,90,106,117,125,126,157,163,168,170,175,176,177,179,181,182,183,184,185,186,],[27,27,-3,-12,74,80,80,-2,-6,-7,-8,-11,80,80,80,80,80,-4,-5,-9,27,80,27,-10,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'CONST':([0,2,3,12,29,34,37,39,40,52,75,87,88,90,106,125,126,157,163,168,170,175,176,177,179,181,182,183,184,185,186,],[28,28,-3,-12,79,-2,-6,-7,-8,-11,117,-4,-5,-9,28,28,-10,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'POINTER':([0,2,3,12,28,29,30,34,37,39,40,52,75,76,77,79,81,87,88,90,106,117,125,126,157,163,168,170,175,176,177,179,181,182,183,184,185,186,],[29,29,-3,-12,75,77,77,-2,-6,-7,-8,-11,77,77,77,77,77,-4,-5,-9,29,77,29,-10,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'ARRAYOF':([0,2,3,12,28,29,30,34,37,39,40,52,75,76,77,79,81,87,88,90,106,117,125,126,157,163,168,170,175,176,177,179,181,182,183,184,185,186,],[30,30,-3,-12,76,81,81,-2,-6,-7,-8,-11,81,81,81,81,81,-4,-5,-9,30,81,30,-10,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'STAR':([0,2,3,10,12,34,37,39,40,42,43,44,45,47,48,49,50,51,52,60,61,62,63,64,65,66,84,86,87,88,90,92,93,94,95,96,97,98,99,101,102,103,104,105,109,110,112,113,114,115,116,123,124,125,126,127,128,129,130,131,132,133,134,136,137,141,142,150,157,158,159,160,165,168,170,175,176,177,179,181,182,183,184,185,186,],[31,31,-3,49,-12,-2,-6,-7,-8,95,-43,-44,-45,49,-27,49,49,-57,-11,49,49,-28,49,49,49,49,49,49,-4,-5,-9,49,49,49,49,49,49,49,49,-44,95,49,95,95,49,95,95,95,95,95,95,95,95,31,-10,95,95,95,95,95,95,95,95,-58,-27,95,-43,-30,31,-46,-76,49,-29,31,31,31,31,31,31,31,31,31,31,31,31,]),'AMPERSAND':([0,2,3,10,12,34,37,39,40,47,49,50,52,60,61,63,64,65,66,84,86,87,88,90,92,93,94,95,96,97,98,99,103,109,125,126,157,160,168,170,175,176,177,179,181,182,183,184,185,186,],[33,33,-3,50,-12,-2,-6,-7,-8,50,50,50,-11,50,50,50,50,50,50,50,50,-4,-5,-9,50,50,50,50,50,50,50,50,50,50,33,-10,33,50,33,33,33,33,33,33,33,33,33,33,33,33,]),'NAME':([0,2,3,10,12,13,27,29,30,31,33,34,37,39,40,47,49,50,52,60,61,63,64,65,66,74,75,76,77,78,79,80,81,82,84,86,87,88,90,92,93,94,95,96,97,98,99,100,103,107,108,109,117,118,119,120,121,122,125,126,143,154,157,160,168,170,175,176,177,179,181,182,183,184,185,186,],[32,32,-3,48,-12,56,-31,-39,-39,83,85,-2,-6,-7,-8,48,48,48,-11,48,48,48,48,48,48,-32,-39,-39,-39,-33,-39,-40,-39,-37,48,48,-4,-5,-9,48,48,48,48,48,48,48,48,32,137,147,147,48,-39,-34,-38,-41,-35,-42,32,-10,161,-36,32,137,32,32,32,32,32,32,32,32,32,32,32,32,]),'$end':([1,2,3,12,34,37,39,40,52,87,88,90,126,],[0,-1,-3,-12,-2,-6,-7,-8,-11,-4,-5,-9,-10,]),'CFBRACKET':([3,12,34,37,39,40,52,87,88,90,126,157,182,183,184,185,186,],[-3,-12,-2,-6,-7,-8,-11,-4,-5,-9,-10,171,187,188,189,190,191,]),'SEMICOLON':([4,5,9,14,20,21,22,23,24,25,26,42,43,44,45,48,51,53,54,56,57,62,67,68,69,70,71,72,73,104,105,110,111,112,127,128,129,130,131,132,133,134,136,147,148,149,150,158,159,165,],[35,36,41,-20,67,68,69,70,71,72,73,91,-43,-44,-45,-27,-57,-13,-14,-17,-18,-28,-59,-60,-61,-62,-63,-64,-65,-52,-53,-21,-22,-19,-47,-48,-49,-50,-51,-54,-55,-56,-58,-17,-15,-16,-30,-46,-76,-29,]),'FINISH':([6,171,188,],[38,-66,-67,]),'SIZEOF':([10,47,49,50,60,61,63,64,65,66,84,86,92,93,94,95,96,97,98,99,103,109,160,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'NUMBER':([10,47,49,50,60,61,63,64,65,66,84,86,92,93,94,95,96,97,98,99,103,109,160,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'OBRACKET':([10,17,18,19,31,33,46,47,48,49,50,55,56,58,60,61,63,64,65,66,84,86,92,93,94,95,96,97,98,99,103,109,137,160,],[47,64,65,66,84,86,100,47,103,47,47,106,-75,-74,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,103,47,]),'MAIN':([13,27,29,30,74,75,76,77,78,79,80,81,82,117,118,119,120,121,122,154,],[58,-31,-39,-39,-32,-39,-39,-39,-33,-39,-40,-39,-37,-39,-34,-38,-41,-35,-42,-36,]),'ASSIGNMENT':([15,16,32,56,59,62,83,85,137,142,147,150,155,156,165,],[60,61,-27,-27,109,-28,-23,-25,-27,109,-27,-30,-24,-26,-29,]),'OSQBRACKET':([16,32,43,48,56,59,62,135,137,142,147,150,165,],[63,-27,63,-27,-27,63,-28,63,-27,63,-27,63,-29,]),'CBRACKET':([32,43,44,45,48,51,57,62,101,104,105,106,112,114,115,116,123,124,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,146,147,148,149,150,158,159,161,165,172,174,],[-27,-43,-44,-45,-27,-57,-18,-28,136,-52,-53,145,-19,151,152,153,155,156,-47,-48,-49,-50,-51,-54,-55,-56,158,-58,-17,159,-78,-79,-80,-43,162,-83,-17,-15,-16,-30,-46,-76,-84,-29,-77,-82,]),'OFBRACKET':([38,145,151,152,153,162,],[89,164,166,167,169,173,]),'PLUS':([42,43,44,45,48,51,62,101,102,104,105,110,112,113,114,115,116,123,124,127,128,129,130,131,132,133,134,136,137,141,142,150,158,159,165,],[92,-43,-44,-45,-27,-57,-28,-44,92,-52,-53,92,92,92,92,92,92,92,92,-47,-48,-49,-50,-51,92,92,92,-58,-27,92,-43,-30,-46,-76,-29,]),'MINUS':([42,43,44,45,48,51,62,101,102,104,105,110,112,113,114,115,116,123,124,127,128,129,130,131,132,133,134,136,137,141,142,150,158,159,165,],[93,-43,-44,-45,-27,-57,-28,-44,93,-52,-53,93,93,93,93,93,93,93,93,-47,-48,-49,-50,-51,93,93,93,-58,-27,93,-43,-30,-46,-76,-29,]),'PERCENT':([42,43,44,45,48,51,62,101,102,104,105,110,112,113,114,115,116,123,124,127,128,129,130,131,132,133,134,136,137,141,142,150,158,159,165,],[94,-43,-44,-45,-27,-57,-28,-44,94,-52,-53,94,94,94,94,94,94,94,94,94,94,-49,-50,-51,94,94,94,-58,-27,94,-43,-30,-46,-76,-29,]),'SLASH':([42,43,44,45,48,51,62,101,102,104,105,110,112,113,114,115,116,123,124,127,128,129,130,131,132,133,134,136,137,141,142,150,158,159,165,],[96,-43,-44,-45,-27,-57,-28,-44,96,-52,-53,96,96,96,96,96,96,96,96,96,96,-49,-50,-51,96,96,96,-58,-27,96,-43,-30,-46,-76,-29,]),'NOTGREATER':([42,43,44,45,48,51,62,101,102,104,105,110,112,113,114,115,116,123,124,127,128,129,130,131,132,133,134,136,137,141,142,150,158,159,165,],[97,-43,-44,-45,-27,-57,-28,-44,97,-52,-53,97,97,97,97,97,97,97,97,-47,-48,-49,-50,-51,None,None,None,-58,-27,97,-43,-30,-46,-76,-29,]),'NOTLESS':([42,43,44,45,48,51,62,101,102,104,105,110,112,113,114,115,116,123,124,127,128,129,130,131,132,133,134,136,137,141,142,150,158,159,165,],[98,-43,-44,-45,-27,-57,-28,-44,98,-52,-53,98,98,98,98,98,98,98,98,-47,-48,-49,-50,-51,None,None,None,-58,-27,98,-43,-30,-46,-76,-29,]),'NOTEQ':([42,43,44,45,48,51,62,101,102,104,105,110,112,113,114,115,116,123,124,127,128,129,130,131,132,133,134,136,137,141,142,150,158,159,165,],[99,-43,-44,-45,-27,-57,-28,-44,99,-52,-53,99,99,99,99,99,99,99,99,-47,-48,-49,-50,-51,None,None,None,-58,-27,99,-43,-30,-46,-76,-29,]),'CSQBRACKET':([43,44,45,48,51,62,104,105,113,127,128,129,130,131,132,133,134,136,150,158,159,165,],[-43,-44,-45,-27,-57,-28,-52,-53,150,-47,-48,-49,-50,-51,-54,-55,-56,-58,-30,-46,-76,-29,]),'COMMA':([43,44,45,48,51,56,57,62,104,105,112,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,144,146,147,148,149,150,158,159,161,165,172,174,],[-43,-44,-45,-27,-57,107,108,-28,-52,-53,-19,-47,-48,-49,-50,-51,-54,-55,-56,-58,107,160,-78,-79,-80,-43,163,-83,107,-15,-16,-30,-46,-76,-84,-29,-77,-82,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'stategroup':([0,125,175,176,177,179,181,],[2,157,182,183,184,185,186,]),'statement':([0,2,125,157,168,170,175,176,177,179,181,182,183,184,185,186,],[3,34,3,34,178,180,3,3,3,3,3,34,34,34,34,34,]),'declaration':([0,2,125,157,168,170,175,176,177,179,181,182,183,184,185,186,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'assignment':([0,2,125,157,168,170,175,176,177,179,181,182,183,184,185,186,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'while':([0,2,125,157,168,170,175,176,177,179,181,182,183,184,185,186,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'zero':([0,2,125,157,168,170,175,176,177,179,181,182,183,184,185,186,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'function':([0,2,125,157,168,170,175,176,177,179,181,182,183,184,185,186,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'operator':([0,2,125,157,168,170,175,176,177,179,181,182,183,184,185,186,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'empty':([0,2,125,157,168,170,175,176,177,179,181,182,183,184,185,186,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'type':([0,2,106,125,157,163,168,170,175,176,177,179,181,182,183,184,185,186,],[13,13,143,13,13,143,13,13,13,13,13,13,13,13,13,13,13,13,]),'assignment_var':([0,2,13,103,107,108,125,157,160,168,170,175,176,177,179,181,182,183,184,185,186,],[14,14,57,57,57,57,14,14,57,14,14,14,14,14,14,14,14,14,14,14,14,]),'pointer':([0,2,125,157,168,170,175,176,177,179,181,182,183,184,185,186,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'variable':([0,2,10,13,47,49,50,60,61,63,64,65,66,84,86,92,93,94,95,96,97,98,99,100,103,107,108,109,125,157,160,168,170,175,176,177,179,181,182,183,184,185,186,],[16,16,43,59,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,135,142,59,59,43,16,16,142,16,16,16,16,16,16,16,16,16,16,16,16,]),'expression':([10,47,49,50,60,61,63,64,65,66,84,86,92,93,94,95,96,97,98,99,103,109,160,],[42,102,104,105,110,112,113,114,115,116,123,124,127,128,129,130,131,132,133,134,141,112,141,]),'al_expression':([10,47,49,50,60,61,63,64,65,66,84,86,92,93,94,95,96,97,98,99,103,109,160,],[44,101,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'function_call':([10,47,49,50,60,61,63,64,65,66,84,86,92,93,94,95,96,97,98,99,103,109,160,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'vars':([13,103,107,108,160,],[53,140,148,149,140,]),'funcname':([13,],[55,]),'index':([16,43,59,135,142,150,],[62,62,62,62,62,165,]),'expr_type':([29,30,75,76,77,79,81,117,],[78,82,118,119,120,121,122,154,]),'call_parameters':([103,],[138,]),'call_vars':([103,160,],[139,172,]),'parameters':([106,],[144,]),'parameter':([106,163,],[146,174,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> stategroup','program',1,'p_program','par_Class.py',69),
  ('stategroup -> stategroup statement','stategroup',2,'p_stategroup','par_Class.py',79),
  ('stategroup -> statement','stategroup',1,'p_stategroup','par_Class.py',80),
  ('statement -> declaration SEMICOLON NL','statement',3,'p_statement','par_Class.py',90),
  ('statement -> assignment SEMICOLON NL','statement',3,'p_statement','par_Class.py',91),
  ('statement -> while NL','statement',2,'p_statement','par_Class.py',92),
  ('statement -> zero NL','statement',2,'p_statement','par_Class.py',93),
  ('statement -> function NL','statement',2,'p_statement','par_Class.py',94),
  ('statement -> operator SEMICOLON NL','statement',3,'p_statement','par_Class.py',95),
  ('statement -> RETURN expression SEMICOLON NL','statement',4,'p_statement','par_Class.py',96),
  ('statement -> empty NL','statement',2,'p_statement','par_Class.py',97),
  ('statement -> error','statement',1,'p_statement_error','par_Class.py',104),
  ('declaration -> type vars','declaration',2,'p_declaration','par_Class.py',110),
  ('declaration -> type error','declaration',2,'p_declaration_error','par_Class.py',114),
  ('vars -> NAME COMMA vars','vars',3,'p_vars_icv','par_Class.py',119),
  ('vars -> assignment_var COMMA vars','vars',3,'p_vars_acv','par_Class.py',126),
  ('vars -> NAME','vars',1,'p_vars_name','par_Class.py',131),
  ('vars -> assignment_var','vars',1,'p_vars','par_Class.py',137),
  ('assignment_var -> variable ASSIGNMENT expression','assignment_var',3,'p_assignment_var','par_Class.py',141),
  ('assignment -> assignment_var','assignment',1,'p_assignment','par_Class.py',145),
  ('assignment -> pointer ASSIGNMENT expression','assignment',3,'p_assignment','par_Class.py',146),
  ('assignment -> variable ASSIGNMENT error','assignment',3,'p_assignment_err','par_Class.py',153),
  ('pointer -> STAR NAME','pointer',2,'p_pointer','par_Class.py',160),
  ('pointer -> STAR OBRACKET expression CBRACKET','pointer',4,'p_pointer','par_Class.py',161),
  ('pointer -> AMPERSAND NAME','pointer',2,'p_pointer','par_Class.py',162),
  ('pointer -> AMPERSAND OBRACKET expression CBRACKET','pointer',4,'p_pointer','par_Class.py',163),
  ('variable -> NAME','variable',1,'p_variable','par_Class.py',173),
  ('variable -> variable index','variable',2,'p_variable','par_Class.py',174),
  ('index -> OSQBRACKET expression CSQBRACKET index','index',4,'p_index','par_Class.py',182),
  ('index -> OSQBRACKET expression CSQBRACKET','index',3,'p_index','par_Class.py',183),
  ('type -> VALUE','type',1,'p_type','par_Class.py',192),
  ('type -> CONST VALUE','type',2,'p_type','par_Class.py',193),
  ('type -> POINTER expr_type','type',2,'p_type','par_Class.py',194),
  ('type -> CONST POINTER expr_type','type',3,'p_type','par_Class.py',195),
  ('type -> POINTER CONST expr_type','type',3,'p_type','par_Class.py',196),
  ('type -> CONST POINTER CONST expr_type','type',4,'p_type','par_Class.py',197),
  ('type -> ARRAYOF expr_type','type',2,'p_type','par_Class.py',198),
  ('type -> CONST ARRAYOF expr_type','type',3,'p_type','par_Class.py',199),
  ('expr_type -> <empty>','expr_type',0,'p_expr_type','par_Class.py',220),
  ('expr_type -> VALUE','expr_type',1,'p_expr_type','par_Class.py',221),
  ('expr_type -> POINTER expr_type','expr_type',2,'p_expr_type','par_Class.py',222),
  ('expr_type -> ARRAYOF expr_type','expr_type',2,'p_expr_type','par_Class.py',223),
  ('expression -> variable','expression',1,'p_expression','par_Class.py',246),
  ('expression -> al_expression','expression',1,'p_expression','par_Class.py',247),
  ('expression -> function_call','expression',1,'p_expression','par_Class.py',248),
  ('expression -> SIZEOF OBRACKET variable CBRACKET','expression',4,'p_expression','par_Class.py',249),
  ('al_expression -> expression PLUS expression','al_expression',3,'p_al_expression','par_Class.py',256),
  ('al_expression -> expression MINUS expression','al_expression',3,'p_al_expression','par_Class.py',257),
  ('al_expression -> expression PERCENT expression','al_expression',3,'p_al_expression','par_Class.py',258),
  ('al_expression -> expression STAR expression','al_expression',3,'p_al_expression','par_Class.py',259),
  ('al_expression -> expression SLASH expression','al_expression',3,'p_al_expression','par_Class.py',260),
  ('al_expression -> STAR expression','al_expression',2,'p_al_expression','par_Class.py',261),
  ('al_expression -> AMPERSAND expression','al_expression',2,'p_al_expression','par_Class.py',262),
  ('al_expression -> expression NOTGREATER expression','al_expression',3,'p_al_expression','par_Class.py',263),
  ('al_expression -> expression NOTLESS expression','al_expression',3,'p_al_expression','par_Class.py',264),
  ('al_expression -> expression NOTEQ expression','al_expression',3,'p_al_expression','par_Class.py',265),
  ('al_expression -> NUMBER','al_expression',1,'p_al_expression','par_Class.py',266),
  ('al_expression -> OBRACKET al_expression CBRACKET','al_expression',3,'p_al_expression_group','par_Class.py',275),
  ('operator -> TOP SEMICOLON','operator',2,'p_operator','par_Class.py',279),
  ('operator -> BOTTOM SEMICOLON','operator',2,'p_operator','par_Class.py',280),
  ('operator -> LEFT SEMICOLON','operator',2,'p_operator','par_Class.py',281),
  ('operator -> RIGHT SEMICOLON','operator',2,'p_operator','par_Class.py',282),
  ('operator -> PORTAL SEMICOLON','operator',2,'p_operator','par_Class.py',283),
  ('operator -> TELEPORT SEMICOLON','operator',2,'p_operator','par_Class.py',284),
  ('operator -> BREAK SEMICOLON','operator',2,'p_operator','par_Class.py',285),
  ('while -> while FINISH OFBRACKET NL stategroup CFBRACKET','while',6,'p_while_finish','par_Class.py',289),
  ('while -> WHILE OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET','while',8,'p_while','par_Class.py',297),
  ('zero -> ZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET','zero',8,'p_zero','par_Class.py',304),
  ('zero -> NOTZERO OBRACKET expression CBRACKET OFBRACKET NL stategroup CFBRACKET','zero',8,'p_zero','par_Class.py',305),
  ('zero -> ZERO OBRACKET expression CBRACKET NL statement','zero',6,'p_zero','par_Class.py',306),
  ('zero -> NOTZERO OBRACKET expression CBRACKET NL statement','zero',6,'p_zero','par_Class.py',307),
  ('function -> type funcname OBRACKET parameters CBRACKET OFBRACKET NL stategroup CFBRACKET','function',9,'p_function','par_Class.py',316),
  ('function -> type funcname OBRACKET CBRACKET OFBRACKET NL stategroup CFBRACKET','function',8,'p_function','par_Class.py',317),
  ('funcname -> MAIN','funcname',1,'p_funcname','par_Class.py',334),
  ('funcname -> NAME','funcname',1,'p_funcname','par_Class.py',335),
  ('function_call -> NAME OBRACKET call_parameters CBRACKET','function_call',4,'p_function_call','par_Class.py',339),
  ('call_parameters -> call_parameters COMMA call_vars','call_parameters',3,'p_call_parameters','par_Class.py',343),
  ('call_parameters -> call_vars','call_parameters',1,'p_call_parameters','par_Class.py',344),
  ('call_vars -> vars','call_vars',1,'p_call_vars','par_Class.py',351),
  ('call_vars -> expression','call_vars',1,'p_call_vars','par_Class.py',352),
  ('function -> type error','function',2,'p_function_error','par_Class.py',356),
  ('parameters -> parameters COMMA parameter','parameters',3,'p_parameters','par_Class.py',361),
  ('parameters -> parameter','parameters',1,'p_parameters','par_Class.py',362),
  ('parameter -> type NAME','parameter',2,'p_parameter','par_Class.py',370),
  ('empty -> <empty>','empty',0,'p_empty','par_Class.py',374),
]
